{"version":3,"sources":["../static/js/7.2303459a.chunk.js","../node_modules/d3-geo/src/math.js","../node_modules/@turf/meta/main.es.js","../node_modules/@turf/invariant/main.es.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/noop.js","../node_modules/process/browser.js","components/DialogActions/SubmitOrCancelAction.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-array/src/ascending.js","components/DialogActions/OkAction.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-array/src/number.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/raf/index.js","components/LayerNameTextField.js","components/LayersSelect.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/transform.js","../node_modules/@turf/bbox/index.js","../node_modules/@turf/helpers/index.js","utils/geoprocessing/combineFeatures.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-array/src/index.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/@turf/bbox/node_modules/@turf/meta/index.js","../node_modules/@turf/bbox/node_modules/@turf/helpers/index.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/memoize-one/dist/memoize-one.esm.js","components/DialogContent/DialogFeedback.js","utils/geoprocessing/intersectFunction.js","../node_modules/@turf/intersect/node_modules/@turf/helpers/index.js","../node_modules/martinez-polygon-clipping/dist/martinez.umd.js","utils/geoprocessing/performActionOnAllFeaturePairs.js","../node_modules/turf-jsts/jsts.min.js","../node_modules/@turf/union/node_modules/@turf/helpers/index.js","../node_modules/@turf/buffer/node_modules/@turf/bbox/main.es.js","../node_modules/@turf/buffer/node_modules/@turf/helpers/main.es.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/pairs.js","../node_modules/d3-array/src/deviation.js","../node_modules/d3-array/src/variance.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/transpose.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/projection/equirectangular.js","utils/geoprocessing/bboxFunction.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/@turf/points-within-polygon/main.es.js","../node_modules/geojson-rbush/index.js","../node_modules/@turf/distance/main.es.js","../node_modules/@turf/line-segment/main.es.js","../node_modules/@turf/line-intersect/main.es.js","../node_modules/@turf/polygon-to-line/node_modules/@turf/helpers/index.js","utils/findLayerById.js","components/Dialogs/GeoProcessingDialog.js","../node_modules/@turf/intersect/index.js","../node_modules/@turf/intersect/node_modules/@turf/invariant/index.js","utils/geoprocessing/differenceFunction.js","../node_modules/@turf/difference/main.es.js","../node_modules/@turf/difference/node_modules/@turf/area/main.es.js","../node_modules/@turf/meta/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/difference/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/invariant/node_modules/@turf/helpers/main.es.js","utils/geoprocessing/unionFunction.js","../node_modules/@turf/union/index.js","../node_modules/@turf/union/node_modules/@turf/invariant/index.js","utils/getSimpleJsonType.js","utils/geoprocessing/bufferFunction.js","../node_modules/@turf/buffer/main.es.js","../node_modules/@turf/buffer/node_modules/@turf/center/main.es.js","../node_modules/@turf/projection/main.es.js","../node_modules/@turf/projection/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/clone/main.es.js","../node_modules/d3-geo/index.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/histogram.js","../node_modules/d3-array/src/constant.js","../node_modules/d3-array/src/identity.js","../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/median.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/scan.js","../node_modules/d3-array/src/zip.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/@turf/bbox-polygon/index.js","../node_modules/@turf/bbox-polygon/node_modules/@turf/helpers/index.js","utils/geoprocessing/voronoiFunction.js","../node_modules/@turf/voronoi/main.es.js","../node_modules/@turf/voronoi/node_modules/@turf/helpers/main.es.js","../node_modules/d3-voronoi/index.js","../node_modules/d3-voronoi/src/voronoi.js","../node_modules/d3-voronoi/src/constant.js","../node_modules/d3-voronoi/src/point.js","../node_modules/d3-voronoi/src/Beach.js","utils/geoprocessing/clipFunction.js","utils/geoprocessing/isLineSegmentWithinPolygon.js","../node_modules/@turf/points-within-polygon/node_modules/@turf/boolean-point-in-polygon/main.es.js","../node_modules/@turf/points-within-polygon/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/center/index.js","../node_modules/@turf/line-split/main.es.js","../node_modules/geojson-rbush/rbush.js","../node_modules/geojson-rbush/quickselect.js","../node_modules/@turf/square/main.es.js","../node_modules/@turf/distance/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/line-split/node_modules/@turf/bbox/main.es.js","../node_modules/@turf/truncate/main.es.js","../node_modules/@turf/truncate/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/line-segment/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/line-intersect/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/nearest-point-on-line/main.es.js","../node_modules/@turf/bearing/main.es.js","../node_modules/@turf/bearing/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/destination/main.es.js","../node_modules/@turf/destination/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/nearest-point-on-line/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/line-split/node_modules/@turf/helpers/main.es.js","../node_modules/@turf/polygon-to-line/index.js","../node_modules/@turf/polygon-to-line/node_modules/@turf/invariant/index.js","utils/Loading/LoadingCirular.js","components/MultiLayerSelect.js","../node_modules/react-select/dist/react-select.esm.js","../node_modules/emotion/dist/index.esm.js","../node_modules/create-emotion/dist/index.esm.js","../node_modules/@emotion/memoize/dist/memoize.esm.js","../node_modules/@emotion/unitless/dist/unitless.esm.js","../node_modules/@emotion/hash/dist/hash.esm.js","../node_modules/@emotion/stylis/dist/stylis.esm.js","../node_modules/stylis-rule-sheet/index.js","../node_modules/react-input-autosize/lib/AutosizeInput.js","../node_modules/react-transition-group/index.js","../node_modules/react-transition-group/CSSTransition.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/react-transition-group/ReplaceTransition.js","utils/roundToNdecimals.js","components/BboxTextField.js"],"names":["webpackJsonp","5697","module","__webpack_exports__","__webpack_require__","acos","x","pi","Math","asin","halfPi","haversin","sin","d","epsilon","epsilon2","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","pow","sign","sqrt","tan","PI","floor","5700","coordEach","geojson","callback","excludeWrapCoord","j","k","l","geometry","stopG","coords","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","type","isFeatureCollection","isFeature","stop","features","length","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","coordinates","geomType","Error","featureEach","i","featureReduce","initialValue","previousValue","currentFeature","undefined","geomEach","g","featureProperties","featureBBox","featureId","properties","bbox","id","geomReduce","currentGeometry","flattenEach","Object","__WEBPACK_IMPORTED_MODULE_0__turf_helpers__","coordinate","geom","5705","getCoord","coord","Array","isArray","getCoords","collectionOf","featureCollection","name","feature","getGeom","getType","5706","projection","project","projectionMutator","projectAt","point","projectRotate","__WEBPACK_IMPORTED_MODULE_5__math__","dx","dy","invert","projectTransform","y","recenter","__WEBPACK_IMPORTED_MODULE_3__compose__","rotate","__WEBPACK_IMPORTED_MODULE_6__rotation__","deltaLambda","deltaPhi","deltaGamma","center","lambda","phi","reset","cache","cacheStream","y0","x1","y1","theta","preclip","__WEBPACK_IMPORTED_MODULE_0__clip_antimeridian__","x0","postclip","__WEBPACK_IMPORTED_MODULE_4__identity__","delta2","projectResample","__WEBPACK_IMPORTED_MODULE_9__resample__","stream","transformRadians","clipAngle","_","arguments","__WEBPACK_IMPORTED_MODULE_1__clip_circle__","clipExtent","__WEBPACK_IMPORTED_MODULE_2__clip_extent__","scale","translate","precision","fitExtent","extent","object","__WEBPACK_IMPORTED_MODULE_8__fit__","fitSize","size","apply","this","__WEBPACK_IMPORTED_MODULE_7__transform__","5709","noop","5710","exports","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","call","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","process","nextTick","args","push","prototype","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","5714","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__material_ui_core__","__WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","styles","theme","root","position","SubmitOrCancelAction","_Component","_this","getPrototypeOf","keyupHandler","bind","document","addEventListener","removeEventListener","submit","keyCode","_props","classes","submitText","cancel","cancelText","submitDisabled","submitBtnTxt","cancelBtnTxt","disabled","a","createElement","variant","onClick","color","withTheme","5715","streamGeometry","streamGeometryType","hasOwnProperty","streamLine","closed","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","streamObjectType","Feature","FeatureCollection","Sphere","sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","5719","Adder","add","adder","b","s","bv","av","t","temp","valueOf","5720","NaN","5724","OkAction","ok","okText","okBtnTxt","5725","spherical","cartesian","__WEBPACK_IMPORTED_MODULE_0__math__","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","5726","5727","azimuthalRaw","cx","cy","azimuthalInvert","angle","z","c","sc","cc","5728","triangleArea","lexicographic","Diagram","sites","circle","site","sort","pop","edges","cells","beaches","__WEBPACK_IMPORTED_MODULE_4__RedBlackTree__","circles","__WEBPACK_IMPORTED_MODULE_2__Circle__","__WEBPACK_IMPORTED_MODULE_0__Beach__","arc","__WEBPACK_IMPORTED_MODULE_1__Cell__","__WEBPACK_IMPORTED_MODULE_3__Edge__","polygons","map","cell","polygon","halfedges","data","triangles","forEach","m","s0","e1","s1","left","right","index","links","filter","edge","source","find","radius","i0","that","i1","_found","d2","v","vx","vy","v2","5729","global","now","window","vendors","suffix","raf","caf","last","_now","next","max","cp","slice","cancelled","round","handle","fn","polyfill","requestAnimationFrame","cancelAnimationFrame","5730","__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__","__WEBPACK_IMPORTED_MODULE_2__material_ui_core___","__WEBPACK_IMPORTED_MODULE_3__utils_checkIfLayerNameExists__","LayerNameTextField","_ref","_temp","_ret","_len","_key","nameChange","event","setName","defaultName","setState","layerName","promt","layers","acceptedLayerId","Nameerror","errorText","promtText","onKeyPress","ev","preventDefault","label","fullWidth","error","onChange","margin","helperText","InputLabelProps","shrink","5731","_defineProperty","obj","__WEBPACK_IMPORTED_MODULE_2__material_ui_core__","formControl","spacing","unit","width","Select","LayersSelect","_React$Component","state","curValue","handleChange","changeLayer","setCurLayer","layerId","prevProps","options","layer","displayName","required","className","htmlFor","placeholder","Component","5737","rotationIdentity","__WEBPACK_IMPORTED_MODULE_1__math__","rotateRadians","__WEBPACK_IMPORTED_MODULE_0__compose__","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","5738","transformer","methods","TransformStream","5739","result","Infinity","meta_1","default","5740","feat","lineString","multiPoint","multiLineString","multiPolygon","points","_i","coordinates_1","ring","lineStrings","fc","geometryCollection","num","multiplier","radiansToLength","units","factor","factors","lengthToRadians","distance","lengthToDegrees","radiansToDegrees","bearingToAzimuth","bearing","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","areaFactors","finalFactor","isNumber","isNaN","test","isObject","input","validateBBox","validateId","indexOf","radians2degrees","degrees2radians","distanceToDegrees","distanceToRadians","radiansToDistance","bearingToAngle","convertDistance","earthRadius","centimeters","centimetres","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","acres","5758","combineFeatures","featureCollectionList","newGeojson","5759","visible","interpolate","from","to","direction","a1","corner","comparePoint","p","compareIntersection","ca","cb","activeStream","polygonInside","winding","a0","b0","b1","bufferStream","segments","clean","startInside","cleanInside","__WEBPACK_IMPORTED_MODULE_4_d3_array__","__WEBPACK_IMPORTED_MODULE_3__polygon__","clipStream","linePoint","first","v_","x_","y_","x__","y__","v__","rejoin","clipMin","min","clipMax","__WEBPACK_IMPORTED_MODULE_2__line__","__WEBPACK_IMPORTED_MODULE_1__buffer__","5760","__WEBPACK_IMPORTED_MODULE_14__merge__","__WEBPACK_IMPORTED_MODULE_19__range__","5761","__WEBPACK_IMPORTED_MODULE_0__number__","values","valueof","value0","5762","5763","conicEqualAreaRaw","r","r0","sy0","__WEBPACK_IMPORTED_MODULE_2__cylindricalEqualArea__","r0y","__WEBPACK_IMPORTED_MODULE_1__conic__","5764","conicProjection","phi0","phi1","__WEBPACK_IMPORTED_MODULE_1__index__","parallels","5765","w","h","clip","__WEBPACK_IMPORTED_MODULE_0__stream__","__WEBPACK_IMPORTED_MODULE_1__path_bounds__","5766","mercatorRaw","mercatorProjection","reclip","__WEBPACK_IMPORTED_MODULE_1__rotation__","__WEBPACK_IMPORTED_MODULE_2__index__","5767","coordReduce","currentCoord","propEach","propReduce","currentProperties","coordAll","helpers","flattenReduce","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentReduce","started","lineEach","lineReduce","currentLine","findSegment","findPoint","5768","5769","RedBlackTree","RedBlackNode","node","U","C","L","R","P","N","RedBlackRotateLeft","tree","q","parent","RedBlackRotateRight","RedBlackFirst","insert","after","grandpa","uncle","remove","sibling","red","5770","createEdge","v0","v1","__WEBPACK_IMPORTED_MODULE_0__Diagram__","setEdgeEnd","createBorderEdge","vertex","clipEdge","ax","ay","bx","by","t0","t1","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","5771","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","hr","uptime","Date","getTime","5772","resultFn","isEqual","simpleIsEqual","lastThis","lastResult","lastArgs","calledOnce","isNewArgEqualToLast","newArg","newArgs","every","5773","feedbackDiv","padding","borderRadius","DialogFeedback","message","bgcolor","style","backgroundColor","5808","__WEBPACK_IMPORTED_MODULE_0__turf_intersect__","__WEBPACK_IMPORTED_MODULE_0__turf_intersect___default","__WEBPACK_IMPORTED_MODULE_1__performActionOnAllFeaturePairs__","intersectFunction","geojson1","geojson2","f","5809","5810","factory","DEFAULT_COMPARE","loadRecursive","keys","start","end","middle","compare","pivot","tmp","computeFields","prev","operation","inOut","otherInOut","isSubject","isVertical","prevInResult","inResult","NORMAL","INTERSECTION","UNION","DIFFERENCE","XOR","SAME_TRANSITION","DIFFERENT_TRANSITION","NON_CONTRIBUTING","equals","p1","p2","signedArea","p0","compareEvents","e2","specialCases","otherEvent","isBelow","divideSegment","se","SweepEvent","console","warn","contourId","crossProduct","dotProduct","intersection","a2","b2","noEndpointTouch","toPoint","va","vb","kross","sqrKross","sqrLenA","sa","sb","smin","smax","possibleIntersection","se1","se2","inter","nintersections","events","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","subdivide","eventQueue","subject","clipping","sbbox","cbbox","begin","sweepLine","SplayTree","sortedEvents","rightbound","minNode","prevEvent","prevprevEvent","prevprev","orderEvents","resultEvents","sorted","pos","nextPos","processed","origIndex","newPos","connectEdges","contour","isExteriorRing","ringId","initial","resultInOut","TinyQueue","this$1","defaultCompare","_down","processPolygon","contourOrHole","depth","Q","s2","fillQueue","polygonSet","ii","jj","tinyqueue","trivialOperation","EMPTY","compareBBoxes","boolean","trivial","union","diff","xor","intersection$1","noDuplicates","_compare","_root","_size","_noDuplicates","prototypeAccessors","rotateLeft","rotateRight","_splay","splay","gp","ggp","replace","u","maxNode","comp","cmp","contains","comparator","removeNode","erase","sMax","returnValue","successor","predecessor","current","done","range","low","high","ctx","at","load","presort","isEmpty","get","createTree","edgeType","clone","copy","default_1","item","_up","top","peek","halfLength","best","operations","5811","performActionOnAllFeaturePairs","FeatureCollection1","FeatureCollection2","action","poly1","poly2","5812","o","Mt","root_","size_","array_","It","addAll","parseInt","Number","isFinite","isInteger","parseFloat","trunc","interfaces_","getClass","equalsWithTolerance","stack","I","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","E","NULL_ORDINATE","S","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","equals2D","getOrdinate","equals3D","equalInZ","compareTo","toString","distance3D","hashCode","setCoordinate","_dimensionsToTest","O","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","T","LOG_10","log10","clamp","wrap","average","D","str","append","setCharAt","substr","M","intValue","A","isWhitespace","toUpperCase","F","_hi","_lo","init","parse","G","TWO_PI","PI_2","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","magnitude","divide","gt","lt","multiply","subtract","selfAdd","sqr","doubleValue","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","dump","createNaN","ge","selfMultiply","reciprocal","rint","setValue","isNegative","selfSqr","toStandardNotation","toSciNotation","fill","charAt","stringOfChar","substring","isPositive","signum","isDigit","B","DP_SAFE_EPSILON","orientationIndex","orientationIndexFilter","signOfDet2x2","V","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","getY","toCoordinateArray","arraycopy","getProperty","line.separator","_minx","_maxx","_miny","_maxy","H","getArea","getWidth","getHeight","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","covers","expandToInclude","minExtent","setToNull","maxExtent","expandBy","centre","W","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","K","geometryFactory","_e","read","exec","search","toLowerCase","write","extractGeometry","getGeometryType","J","_coordinates","multipoint","_geometries","join","linestring","_points","linearring","multilinestring","_shell","_holes","multipolygon","geometrycollection","createPoint","trim","split","createMultiPoint","createLineString","createLinearRing","createMultiLineString","createPolygon","createMultiPolygon","createGeometryCollection","parser","toLineString","$","tt","et","shouldNeverReachHere","isTrue","nt","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","it","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","computeIntLineIndex","getTopologySummary","isEndPoint","isCollinear","computeIntersection","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","isInteriorIntersection","getIntersection","computeEdgeDistance","getEndpoint","isIntersection","getIntersectionAlongSegment","nonRobustComputeEdgeDistance","rt","isInSegmentEnvelopes","normalizeToMinimum","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","checkDD","out","println","normalizeToEnvCentre","computeCollinearIntersection","distancePointLine","ot","st","_p","_crossingCount","_isPointOnSegment","countSegment","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","ut","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","distanceLineLine","isPointInRing","computeLength","isCCW","computeOrientation","distancePointLinePerpendicular","isOnLine","ct","_envelope","_factory","_SRID","_userData","getSRID","pt","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","getSortIndex","getFactory","getGeometryN","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","setUserData","iterator","hasNext","isGeometryCollectionOrDerived","hasNonEmptyElements","hasNullElements","ht","ft","dt","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","yt","_t","mt","vt","toArray","Et","xt","set","Nt","ensureCapacity","splice","clear","Ct","arrayList_","position_","St","coordArrayType","closeRing","Lt","bt","ForwardComparator","BidirectionalComparator","wt","Ot","isRing","ptNotInList","scroll","hasRepeatedPoints","removeRepeatedPoints","reverse","removeNull","copyDeep","isEqualReversed","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","extract","OLDcompare","Tt","put","entrySet","Rt","Pt","Dt","hashSet_","getValue","getKey","fixAfterInsertion","getFirstEntry","At","Ft","treeSet_","Gt","asList","qt","Bt","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","toDimensionValue","Vt","Ut","isDone","isGeometryChanged","zt","getCoordinates","getNumPoints","isEquivalentClass","getBoundaryDimension","getBoundary","Xt","isClosed","Yt","_geom","_geomFact","_bnRule","_endpointMap","boundaryMultiLineString","getEmptyMultiPoint","computeBoundaryCoordinates","createMultiPointFromCoords","Kt","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","count","kt","jt","Ht","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","printStackTrace","readLine","format","Wt","copyCoord","extend","swap","ensureValidRing","createClosedRing","isSimple","getPointN","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Jt","Qt","Zt","$t","getNumInteriorRing","convexHull","getExteriorRing","getInteriorRingN","te","isValid","ee","validateConstruction","MINIMUM_VALID_SIZE","ne","ie","_isUserDataCopied","re","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","edit","editInternal","editGeometryCollection","editPolygon","getName","GeometryEditorOperation","oe","ae","editCoordinates","ue","_dimension","ce","pe","instanceObject","readResolve","he","map_","Map","entries","fe","_modelType","_scale","FLOATING","de","FIXED","setScale","maximumPreciseValue","getMaximumSignificantDigits","getScale","isFloating","FLOATING_SINGLE","mostPrecise","_name","nameToTypeMap","ye","Type","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","me","buildGeometry","toGeometryArray","toPolygonArray","toLineStringArray","toPointArray","createGeometry","toMultiPolygonArray","toMultiLineStringArray","toMultiPointArray","toLinearRingArray","createPointFromInternalCoord","ve","Ie","JSON","Ee","xe","Ne","precisionModel","reducePrecision","Ce","Se","Le","ON","opposite","empty","be","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","findRightmostEdgeAtNode","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","we","msgWithCoord","Oe","addLast","removeFirst","shift","Te","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","isVisited","computeDepths","copySymDepths","computeDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","setDepth","getNodes","getDirectedEdges","Re","location","setAllLocations","setAllLocationsIfNull","isLine","merge","getLocations","flip","setLocations","isArea","isAnyNull","setLocation","isEqualOnSide","allPositionsEqual","Pe","elt","getGeometryCount","toLine","toLineLabel","De","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","getOutgoingDegree","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","setShell","toPolygon","Me","setMinEdgeRing","getNextMin","Ae","buildMinimalRings","getMinEdgeRing","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","Fe","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","computeIM","isInResult","Ge","_coord","isIncidentEdgeInResult","print","computeMergedLocation","setNode","setLabelBoundary","qe","nodeMap","nodeFact","addNode","createNode","getBoundaryNodes","Be","Ve","NE","NW","SW","SE","isNorthern","isOpposite","commonHalfPlane","isInHalfPlane","quadrant","Ue","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","compareDirection","getDy","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","ze","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","setNextMin","getDepthDelta","isLineEdge","printEdge","printReverse","setSym","setVisitedEdge","setNext","depthFactor","Xe","Ye","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","insertEdge","findEdgeEnd","addEdges","ke","_shellList","sortShellsAndHoles","computePolygons","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","getPolygons","je","getBounds","He","_bounds","_item","getItem","We","_items","poll","reorder","Ke","visitItem","Je","query","Qe","_childBoundables","_level","Ze","getLevel","getChildBoundables","addChildBoundable","computeBounds","$e","reverseOrder","singletonList","tn","_boundable1","_boundable2","_distance","_itemDistance","expandToQueue","isComposite","expand","isLeaves","getDistance","getBoundable","en","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nn","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","itemsTree","boundablesAtLevel","getIntersectsOp","createHigherLevels","getRoot","createParentBoundables","getComparator","compareDoubles","rn","sn","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","createParentBoundablesFromVerticalSlice","an","verticalSlices","nearestNeighbour","POSITIVE_INFINITY","centreX","avg","centreY","un","relativeSign","compareValue","ln","_segString","_segmentOctant","_isInterior","isInterior","cn","_nodeMap","getSplitCoordinates","addEndpoints","addEdgeCoordinates","addCollapsedNodes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","addSplitEdges","createSplitEdge","findCollapseIndex","gn","getData","getSegmentOctant","checkSplitEdgesCorrectness","pn","octant","hn","setData","addIntersection","_nodeList","_data","safeOctant","addIntersectionNode","getNodeList","addIntersections","getNodedSubstrings","dn","yn","minX","projectionFactor","distancePerpendicular","minY","midPoint","closestPoints","closestPoint","maxX","lineIntersection","maxY","pointAlongOffset","setCoordinates","segmentFraction","isHorizontal","pointAlong","_n","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","getLineSegment","mn","_start","_end","_context","_id","computeSelect","select","computeOverlaps","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","vn","getChainStartIndices","findChainEnd","toIntArray","getChains","In","computeNodes","En","_segInt","setSegmentIntersector","xn","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","intersectChains","Nn","_si","processIntersections","Cn","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","Sn","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","getJoinStyle","setSimplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","Ln","_distanceTol","_isDeleted","_angleOrientation","_inputLine","bn","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","findNextNonDeletedIndex","isShallowConcavity","simplify","collapseLine","wn","_ptList","_minimimVertexDistance","On","COORDINATE_ARRAY_TYPE","addPt","isRedundant","revere","addPts","setMinimumVertexDistance","Tn","Rn","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","isAcute","isObtuse","interiorAngle","normalizePositive","angleBetween","toRadians","getTurn","angleBetweenOriented","Pn","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","MAX_CLOSING_SEG_LEN_FACTOR","Dn","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","computeOffsetSegment","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","addFilletArc","addMitreJoin","addLimitedMitreJoin","addFilletCorner","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","createCircle","hasNarrowConcaveAngle","Mn","getOffsetCurve","getSegGen","computePointCurve","computeOffsetCurve","computeSingleSidedBufferCurve","simplifyTolerance","computeRingBufferCurve","computeLineBufferCurve","getLineCurve","getBufferParameters","getRingCurve","copyCoordinates","An","_subgraphs","_seg","_cga","Fn","DepthSegment","findStabbedSegments","Gn","_leftDepth","_upwardSeg","compareX","qn","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","det","perpendicularBisector","angleBisector","Bn","_inputGeom","_curveBuilder","_curveList","addPoint","addCurve","addPolygon","isErodedCompletely","addPolygonRing","isTriangleErodedCompletely","addLineString","getCurves","addCollection","Vn","locate","Un","_parent","_atStart","_max","_subcollectionIterator","isAtomic","zn","containsPointInPolygon","Xn","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","propagateSideLabels","isAreaLabelsConsistent","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","findIndex","getGeometry","computeLabelling","getDegree","insertEdgeEnd","Yn","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","updateLabelling","mergeSymLabels","findCoveredLineEdges","kn","jn","_orientation","orientation","compareOriented","Hn","_ocaMap","findEdgeIndex","findEqualEdge","Wn","Kn","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","Jn","dist","getSegmentIndex","Qn","pts","ni","Zn","$n","startIndex","env1","env2","computeIntersectsForChain","getStartIndexes","computeIntersects","ti","NULL_VALUE","ei","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","setIsolated","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","depthDelta","buildSubgraphs","createSubgraphs","createEmptyResultGeometry","getNoder","buffer","computeNodedEdges","setNoder","convertSegStrings","ri","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","isIntegerPrecision","rescale","oi","_segStrings","si","fact","checkEndPtVertexIntersections","checkInteriorIntersections","checkValid","checkCollapses","checkCollapse","ai","_pt","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","ui","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","intersectsToleranceSquare","copyScaled","getSafeEnvelope","intersectsPixelClosure","addSnappedNode","li","selectedSegment","ci","HotPixelSnapAction","snap","hi","isNodeAdded","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","fi","_interiorIntersections","getInteriorIntersections","gi","_pm","_pointSnapper","checkCorrectness","snapRound","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","di","_argGeom","_resultGeometry","_saveException","yi","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","bufferReducedPrecision","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","getResultGeometry","bufferOp","_isNull","setMinimum","initialize","setMaximum","mi","computeDistance","vi","_maxPtDist","Ii","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","xi","getMaxPointDistance","computeMaxVertexDistance","Ei","findDistance","getDistancePoints","_minPtDist","Ni","_comps","Ci","_lines","_isForcedToLineString","setForceToLineString","getLines","Si","_boundaryRule","_isIn","_numBoundaries","locateInternal","locateInPolygonRing","updateLocationInfo","computeLocation","Li","_component","_segIndex","INSIDE_AREA","bi","isInsideArea","getGeometryComponent","wi","getPoints","Oi","_locations","Ti","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","computeContainmentDistance","computeMinDistanceLinesPoints","computeMinDistance","computeFacetDistance","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","isWithinDistance","Ri","Pi","Di","_g0","_g1","_ptDist","_densifyFrac","Mi","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","compute","computeOrientedDistance","Ai","Fi","orientedDistance","_euclideanDist","_numSubSegs","Gi","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","qi","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","checkPositiveValid","checkNegativeValid","getPolygonLines","checkMinimumDistance","getErrorIndicator","getErrorLocation","getErrorMessage","Bi","_errorMsg","Vi","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","report","isValidMsg","Ui","zi","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","setKeepIntersections","isEndSegment","createAllIntersectionsFinder","createAnyIntersectionFinder","createIntersectionCounter","Xi","execute","computeIntersections","Yi","_nv","toSegmentStrings","ki","_mapOp","ji","_op","_lineEdgesList","_resultLineList","collectLines","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","getArgGeometry","buildLines","Lr","isResultOfOp","isCoveredByA","labelIsolatedLines","Hi","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","Wi","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","Ki","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","snapVertices","findSnapForVertex","snapTo","snapSegments","findSegmentIndexToSnap","setAllowSnappingToSourceVertices","Ji","_srcGeom","Qi","SNAP_PRECISION_FACTOR","extractTargetCoordinates","Zi","snapToSelf","computeSnapTolerance","computeMinimumSegmentLength","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","_snapPts","_isSelfSnap","snapLine","$i","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","toBinaryString","getBit","tr","_commonCoord","_ccFilter","nr","er","CommonCoordinateFilter","Translater","addCommonBits","ir","removeCommonBits","getCommonCoordinate","_commonBitsX","_commonBitsY","trans","rr","_cbr","selfSnap","prepareResult","overlayOp","symDifference","SYMDIFFERENCE","difference","or","sr","mce","chainIndex","ar","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","INSERT","ur","isDelete","setDeleteEventIndex","getObject","getInsertEvent","isInsert","isSameLabel","getDeleteEventIndex","lr","cr","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","setIsDoneIfProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","pr","nOverlaps","prepareEvents","processOverlaps","addEdge","_min","NEGATIVE_INFINITY","fr","NodeComparator","getMin","getMax","gr","dr","yr","_node1","_node2","buildExtent","_r","_leaves","buildTree","buildLevel","buildRoot","printNode","mr","getItems","vr","xr","Ir","SegmentVisitor","IntervalIndexedGeometry","Er","_counter","addLine","Nr","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","insertBoundaryPoint","determineBoundary","computeSelfNodes","createEdgeSetIntersector","addSelfIntersectionNodes","computeSplitEdges","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","Cr","_resultPrecisionModel","_arg","setComputationPrecision","Sr","MapOp","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","createEmptyResult","replaceCollapsedEdges","updateNodeLabelling","computeOverlay","insertUniqueEdges","copyPoints","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","labelIncompleteNode","resultDimension","br","_g","_boundaryDistanceTolerance","_linework","extractLinework","isWithinToleranceOfBoundary","wr","getLinework","Or","_doLeft","_doRight","extractPoints","computeOffsetPoints","setSidesToGenerate","Tr","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","Rr","reportResult","addTestPts","hasLocation","isValidResult","getInvalidLocation","Pr","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","combine","createList","Dr","_inputPolys","Mr","STRTREE_NODE_CAPACITY","reduceToGeometries","unionTree","extractByEnvelope","unionOptimized","unionActual","unionUsingEnvelopeIntersection","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","bufferUnion","Ar","GeoJSONReader","GeoJSONWriter","OverlayOp","UnionOp","BufferOp","5813","5814","BBox","__WEBPACK_IMPORTED_MODULE_0__turf_meta__","5815","5816","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda0","cosPhi0","sinPhi0","dLambda","sdLambda","adLambda","sinPhi","areaRingSum","__WEBPACK_IMPORTED_MODULE_0__adder__","__WEBPACK_IMPORTED_MODULE_2__noop__","areaSum","areaRing","5817","circleStream","delta","cosRadius","__WEBPACK_IMPORTED_MODULE_2__math__","sinRadius","step","circleRadius","__WEBPACK_IMPORTED_MODULE_0__cartesian__","5818","compose","5819","__WEBPACK_IMPORTED_MODULE_0__noop__","line","lines","5820","Intersection","other","entry","link","__WEBPACK_IMPORTED_MODULE_0__pointEqual__","segment","5821","5822","__WEBPACK_IMPORTED_MODULE_0__ascending__","__WEBPACK_IMPORTED_MODULE_1__bisector__","ascendingBisect","bisectRight","5823","ascendingComparator","lo","mid","5824","pair","5825","__WEBPACK_IMPORTED_MODULE_0__variance__","5826","mean","sum","5827","5828","5829","5830","tickStep","step0","step1","LN10","e10","e5","5831","LN2","5832","5833","__WEBPACK_IMPORTED_MODULE_0__min__","matrix","transpose","row","5834","__WEBPACK_IMPORTED_MODULE_1__cartesian__","normal","point0","lambda1","sinPhi1","cosPhi1","point1","absDelta","antimeridian","phiArc","5835","__WEBPACK_IMPORTED_MODULE_0__length__","5836","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","sinDelta","lengthSum","__WEBPACK_IMPORTED_MODULE_3__stream__","5837","boundsPoint","boundsStream","bounds","5838","__WEBPACK_IMPORTED_MODULE_0__conicEqualArea__","5839","validSegment","__WEBPACK_IMPORTED_MODULE_0__buffer__","__WEBPACK_IMPORTED_MODULE_1__polygon__","__WEBPACK_IMPORTED_MODULE_3__polygonContains__","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","ringSegments","ringBuffer","polygonStarted","rotatedStart","5840","equirectangularRaw","5841","__WEBPACK_IMPORTED_MODULE_0__turf_bbox__","__WEBPACK_IMPORTED_MODULE_0__turf_bbox___default","__WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon__","__WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon___default","__WEBPACK_IMPORTED_MODULE_2__combineFeatures__","__WEBPACK_IMPORTED_MODULE_3__createFeatureCollectionFromFeature__","bboxFunction","geojsonList","newJson","combinedgeojsons","bbox_res","bboxPolygon_res","5842","createCell","__WEBPACK_IMPORTED_MODULE_1__Diagram__","cellHalfedgeAngle","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","__WEBPACK_IMPORTED_MODULE_0__Edge__","dc","v00","v01","v11","v10","5843","Circle","__WEBPACK_IMPORTED_MODULE_0__RedBlackTree__","attachCircle","lArc","rArc","lSite","cSite","rSite","ha","hc","circlePool","before","firstCircle","detachCircle","5844","pointsWithinPolygon","results","__WEBPACK_IMPORTED_MODULE_2__turf_meta__","__WEBPACK_IMPORTED_MODULE_0__turf_boolean_point_in_polygon__","__WEBPACK_IMPORTED_MODULE_1__turf_helpers__","5845","geojsonRbush","maxEntries","__WEBPACK_IMPORTED_MODULE_0__rbush__","bboxPolygon","turfBBox","__WEBPACK_IMPORTED_MODULE_1__turf_meta__","toBBox","collides","all","toJSON","fromJSON","json","lowLeft","topLeft","topRight","5846","coordinates1","__WEBPACK_IMPORTED_MODULE_0__turf_invariant__","coordinates2","dLat","dLon","lat1","lat2","5847","lineSegment","lineSegmentFeature","__WEBPACK_IMPORTED_MODULE_1__turf_invariant__","createSegments","reduce","currentCoords","coords1","coords2","x2","y2","5848","lineIntersect","line1","line2","unique","__WEBPACK_IMPORTED_MODULE_4__turf_helpers__","intersect","__WEBPACK_IMPORTED_MODULE_0_geojson_rbush__","__WEBPACK_IMPORTED_MODULE_1__turf_line_segment__","__WEBPACK_IMPORTED_MODULE_3__turf_meta__","match","__WEBPACK_IMPORTED_MODULE_2__turf_invariant__","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","5849","5850","findLayerById","5940","__WEBPACK_IMPORTED_MODULE_3__DialogActions_SubmitOrCancelAction__","__WEBPACK_IMPORTED_MODULE_4__DialogActions_OkAction__","__WEBPACK_IMPORTED_MODULE_5__utils_geoprocessing_intersectFunction__","__WEBPACK_IMPORTED_MODULE_6__utils_geoprocessing_differenceFunction__","__WEBPACK_IMPORTED_MODULE_7__utils_geoprocessing_unionFunction__","__WEBPACK_IMPORTED_MODULE_8__utils_geoprocessing_bufferFunction__","__WEBPACK_IMPORTED_MODULE_9__utils_geoprocessing_bboxFunction__","__WEBPACK_IMPORTED_MODULE_10__utils_geoprocessing_voronoiFunction__","__WEBPACK_IMPORTED_MODULE_11__utils_geoprocessing_clipFunction__","__WEBPACK_IMPORTED_MODULE_12_react_loadable__","__WEBPACK_IMPORTED_MODULE_12_react_loadable___default","__WEBPACK_IMPORTED_MODULE_13__utils_Loading_LoadingCirular__","__WEBPACK_IMPORTED_MODULE_14__MultiLayerSelect__","__WEBPACK_IMPORTED_MODULE_15__LayerNameTextField__","__WEBPACK_IMPORTED_MODULE_16_notistack__","__WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__","__WEBPACK_IMPORTED_MODULE_18__DialogContent_DialogFeedback__","__WEBPACK_IMPORTED_MODULE_19__BboxTextField__","__WEBPACK_IMPORTED_MODULE_20__utils_findLayerById__","__WEBPACK_IMPORTED_MODULE_21__LayersSelect__","BufferContent","loader","then","delay","loading","LayerLayerGeoprocessingContent","dialogPaper","minHeight","maxHeight","spaced","marginBottom","spacedALittle","marginTop","container","display","flexWrap","GeoProcessingDialog","processingFunction","layerIds","outputName","errorMessage","clipLayer","setLayerIds","setSingleLayerId","setProcessingFunction","func","calculate","_this$props","closeDialog","enqueueSnackbar","_this$state","selectedLayersDataList","dispName","feedbackText","res","opacity","clipAreaLayer","clipArea","newJsons","newName","submitNewLayer","closeAfter","_this$props2","receiveNewJson","succesMessage","setError","handleClose","changeDistance","setBbox","setClipLayer","getContent","_this$props3","_this$state2","layerIndex","layerOptions","optional","polygonLayers","open","content","actions","diaglogTitle","onClose","aria-labelledby","paper","5941","geom1","invariant_1","geom2","martinez","helpers_1","resultCoords","_a","subGeom","subIntersection","subIntGeom","__importStar","mod","__esModule","5942","containsNumber","geojsonType","featureOf","5943","__WEBPACK_IMPORTED_MODULE_0__turf_difference__","differenceFunction","newFeatures","f1","f1_temp","stringify","f2","5944","polygon1","polygon2","__WEBPACK_IMPORTED_MODULE_3__turf_invariant__","removeEmptyPolygon","__WEBPACK_IMPORTED_MODULE_2__turf_helpers__","reader","__WEBPACK_IMPORTED_MODULE_0_turf_jsts__","differenced","writer","__WEBPACK_IMPORTED_MODULE_1__turf_area__","__WEBPACK_IMPORTED_MODULE_4__turf_meta__","feature$$1","5945","calculateArea","polygonArea","ringArea","p3","lowerIndex","middleIndex","upperIndex","coordsLength","rad","RADIUS","5946","5947","5948","5949","__WEBPACK_IMPORTED_MODULE_0__turf_union__","__WEBPACK_IMPORTED_MODULE_0__turf_union___default","__WEBPACK_IMPORTED_MODULE_3__getSimpleJsonType__","unionFunction","type1","type2","5950","unioned","5951","5952","getSimpleJsonType","5953","__WEBPACK_IMPORTED_MODULE_0__turf_buffer__","bufferFunction","5954","steps","buffered","bufferFeature","__WEBPACK_IMPORTED_MODULE_6__turf_helpers__","multiBuffered","projected","__WEBPACK_IMPORTED_MODULE_1__turf_bbox__","needsTransverseMercator","projectCoords","defineProjection","__WEBPACK_IMPORTED_MODULE_3__turf_projection__","__WEBPACK_IMPORTED_MODULE_2_turf_jsts__","coordsIsNaN","unprojectCoords","proj","__WEBPACK_IMPORTED_MODULE_0__turf_center__","__WEBPACK_IMPORTED_MODULE_5_d3_geo__","5955","ext","5956","toMercator","convert","toWgs84","mutate","convertToMercator","convertToWgs84","__WEBPACK_IMPORTED_MODULE_2__turf_clone__","newCoord","lonLat","D2R","MAXEXTENT","adjusted","xy","R2D","5957","5958","cloneFeature","cloneFeatureCollection","cloneGeometry","cloned","cloneProperties","deepSlice","5959","__WEBPACK_IMPORTED_MODULE_26__src_projection_transverseMercator__","5960","5961","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","cz","X2","Y2","Z2","__WEBPACK_IMPORTED_MODULE_1__noop__","5962","5963","5964","5965","5966","5967","5968","5969","5970","5971","5972","5973","5974","arrays","merged","5975","5976","5977","5978","5979","5980","5981","5982","5983","5984","x00","y00","5985","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","5986","PathContext","context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","5987","lengthRing","5988","PathString","_string","_circle","5989","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","__WEBPACK_IMPORTED_MODULE_0__index__","5990","__WEBPACK_IMPORTED_MODULE_1__circle__","__WEBPACK_IMPORTED_MODULE_3__pointEqual__","__WEBPACK_IMPORTED_MODULE_4__index__","c0","point2","smallRadius","code","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","polar","meridian","q1","5991","resampleNone","__WEBPACK_IMPORTED_MODULE_2__transform__","resample","resampleLineTo","phi2","lambda2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","5992","cylindricalEqualAreaRaw","5993","5994","__WEBPACK_IMPORTED_MODULE_1__azimuthal__","azimuthalEqualAreaRaw","cxcy","5995","azimuthalEquidistantRaw","5996","5997","5998","gnomonicRaw","5999","6000","naturalEarth1Raw","phi4","6001","orthographicRaw","6002","stereographicRaw","6003","transverseMercatorRaw","__WEBPACK_IMPORTED_MODULE_1__mercator__","6004","west","south","east","north","lowRight","6005","6006","__WEBPACK_IMPORTED_MODULE_0__turf_voronoi__","__WEBPACK_IMPORTED_MODULE_1__combineFeatures__","voronoiFunction","6007","coordsToPolygon","voronoi$1","__WEBPACK_IMPORTED_MODULE_2_d3_voronoi__","6008","6009","__WEBPACK_IMPORTED_MODULE_0__src_voronoi__","6010","__WEBPACK_IMPORTED_MODULE_0__constant__","__WEBPACK_IMPORTED_MODULE_1__point__","__WEBPACK_IMPORTED_MODULE_2__Diagram__","voronoi","6011","6012","6013","Beach","createBeach","beach","beachPool","detachBeach","__WEBPACK_IMPORTED_MODULE_4__Diagram__","removeBeach","previous","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","6014","__WEBPACK_IMPORTED_MODULE_0__getJsonType__","__WEBPACK_IMPORTED_MODULE_1__intersectFunction__","__WEBPACK_IMPORTED_MODULE_2__isLineSegmentWithinPolygon__","__WEBPACK_IMPORTED_MODULE_3__turf_points_within_polygon__","__WEBPACK_IMPORTED_MODULE_4__turf_line_split__","__WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line__","__WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line___default","clipFunction","poly","splitLines","6015","__WEBPACK_IMPORTED_MODULE_0__turf_points_within_polygon__","__WEBPACK_IMPORTED_MODULE_1__turf_center__","__WEBPACK_IMPORTED_MODULE_1__turf_center___default","isLineSegmentWithinPolygon","segCoords","point2check","6016","booleanPointInPolygon","ignoreBoundary","polys","inBBox","insidePoly","inRing","inHole","isInside","xj","yj","6017","6018","bbox_1","6019","lineSplit","splitter","lineType","__WEBPACK_IMPORTED_MODULE_7__turf_invariant__","splitterType","truncatedSplitter","__WEBPACK_IMPORTED_MODULE_3__turf_truncate__","splitLineWithPoint","splitLineWithPoints","__WEBPACK_IMPORTED_MODULE_5__turf_line_intersect__","__WEBPACK_IMPORTED_MODULE_8__turf_meta__","closestLine","findClosestFeature","__WEBPACK_IMPORTED_MODULE_1__turf_square__","__WEBPACK_IMPORTED_MODULE_2__turf_bbox__","__WEBPACK_IMPORTED_MODULE_9__turf_helpers__","startPoint","endPoint","pointsEquals","__WEBPACK_IMPORTED_MODULE_4__turf_line_segment__","closestSegment","lastCoords","splitterCoords","closestFeature","closestDistance","__WEBPACK_IMPORTED_MODULE_6__turf_nearest_point_on_line__","pt1","pt2","6020","rbush","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","distBBox","children","destNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","height","multiSelect","arr","__WEBPACK_IMPORTED_MODULE_0__quickselect__","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","6021","quickselect","quickselectStep","sd","6022","square","__WEBPACK_IMPORTED_MODULE_0__turf_distance__","verticalMidpoint","horizontalMidpoint","6023","6024","6025","truncate","truncateCoords","6026","6027","6028","6029","nearestPointOnLine","__WEBPACK_IMPORTED_MODULE_5__turf_helpers__","closestPt","__WEBPACK_IMPORTED_MODULE_6__turf_invariant__","__WEBPACK_IMPORTED_MODULE_1__turf_distance__","sectionLength","heightDistance","__WEBPACK_IMPORTED_MODULE_0__turf_bearing__","perpendicularPt1","__WEBPACK_IMPORTED_MODULE_2__turf_destination__","perpendicularPt2","__WEBPACK_IMPORTED_MODULE_3__turf_line_intersect__","intersectPt","6030","final","calculateFinalBearing","lon1","lon2","bear","6031","6032","destination","origin","longitude1","latitude1","bearing_rad","latitude2","longitude2","lng","lat","6033","6034","6035","6036","polygonToLine","multiPolygonToLine","coordsToLine","multiPoly","6037","6038","LoadingCirular","isLoading","timedOut","pastDelay","__WEBPACK_IMPORTED_MODULE_2__components_LoadingTypes_CircularLoader__","fullpage","6039","_objectWithoutProperties","NoOptionsMessage","__WEBPACK_IMPORTED_MODULE_3__material_ui_core__","assign","selectProps","noOptionsMessage","innerProps","inputComponent","inputRef","ref","Control","InputProps","inputProps","innerRef","textFieldProps","Option","buttonRef","selected","isFocused","component","fontWeight","isSelected","Placeholder","SingleValue","singleValue","ValueContainer","valueContainer","MultiValue","tabIndex","__WEBPACK_IMPORTED_MODULE_2_classnames___default","chip","chipFocused","onDelete","removeProps","deleteIcon","__WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel___default","Menu","__WEBPACK_IMPORTED_MODULE_2_classnames__","__WEBPACK_IMPORTED_MODULE_4_react_select__","__WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel__","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_styles_colorManipulator__","flexGrow","flex","alignItems","palette","grey","fontSize","zIndex","divider","components","MultiLayerSelect","_ref2","suggestions","selectedItems","multi","selectStyles","base","text","primary","& input","font","isMulti","6040","applyPrefixToName","prefix","classNames","cssKey","handleInputChange","inputValue","actionMeta","onInputChange","newValue","isDocumentElement","el","documentElement","body","getScrollTop","pageYOffset","scrollTop","scrollTo","getScrollParent","element","getComputedStyle","excludeStaticParent","overflowRx","docEl","parentElement","overflow","overflowY","overflowX","easeOutCubic","animatedScrollTo","animateScroll","currentTime","increment","val","change","duration","__WEBPACK_IMPORTED_MODULE_0_raf___default","scrollIntoView","menuEl","focusedEl","menuRect","getBoundingClientRect","focusedRect","overScroll","offsetHeight","bottom","offsetTop","clientHeight","scrollHeight","getBoundingClientObj","rect","isTouchCapable","createEvent","getMenuPlacement","placement","shouldScroll","isFixedPosition","scrollParent","defaultState","offsetParent","_scrollParent$getBoun","_menuEl$getBoundingCl","menuBottom","menuHeight","menuTop","_menuEl$offsetParent$","containerTop","viewHeight","innerHeight","viewSpaceAbove","viewSpaceBelow","scrollSpaceAbove","scrollSpaceBelow","scrollDown","scrollUp","_constrainedHeight","controlHeight","_constrainedHeight2","alignToControl","placementToCSSProp","_typeof","arrA","arrB","dateA","dateB","regexpA","RegExp","regexpB","keyList","hasProp","$$typeof","exportedEqual","preventTouchMove","allowTouchMove","stopPropagation","preventInertiaScroll","totalScroll","currentScroll","isTouchDevice","navigator","maxTouchPoints","__WEBPACK_IMPORTED_MODULE_0_raf__","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_1_react___default","__WEBPACK_IMPORTED_MODULE_2_emotion__","__WEBPACK_IMPORTED_MODULE_3_react_dom__","__WEBPACK_IMPORTED_MODULE_4_prop_types__","__WEBPACK_IMPORTED_MODULE_4_prop_types___default","__WEBPACK_IMPORTED_MODULE_5_react_input_autosize__","__WEBPACK_IMPORTED_MODULE_5_react_input_autosize___default","__WEBPACK_IMPORTED_MODULE_6_memoize_one__","__WEBPACK_IMPORTED_MODULE_7_react_transition_group__","Symbol","classCallCheck","createClass","_extends","inherits","objectWithoutProperties","possibleConstructorReturn","slicedToArray","sliceIterator","_arr","_d","_s","err","toConsumableArray","arr2","cleanValue","Boolean","coercePlacement","menuCSS","_ref3","_ref2$theme","colors","neutral0","menuGutter","MenuPlacer","_ref4","maxMenuHeight","getPlacement","minMenuHeight","menuPlacement","menuPosition","menuShouldScrollIntoView","getPortalPlacement","getUpdatedProps","placerProps","contextTypes","getStyles","menu","menuListCSS","_ref5","baseUnit","paddingBottom","paddingTop","WebkitOverflowScrolling","MenuList","menu-list","menu-list--is-multi","noticeCSS","_ref6","_ref6$theme","neutral40","textAlign","noOptionsMessageCSS","loadingMessageCSS","menu-notice","menu-notice--no-options","defaultProps","LoadingMessage","menu-notice--loading","menuPortalCSS","_ref7","offset","MenuPortal","_Component2","_ref8","_temp2","_this2","_ret2","_len2","_key2","_ref9","appendTo","controlElement","isFixed","scrollDistance","menuWrapper","childContextTypes","diacritics","letters","stripDiacritics","trimString","defaultStringify","option","A11yText","border","whiteSpace","DummyInput","in","onExited","appear","enter","exit","background","outline","NodeResolver","STYLE_KEYS","LOCK_STYLES","boxSizing","canUseDOM","activeScrollLocks","ScrollLock","originalStyles","listenerOptions","capture","passive","accountForScrollbars","touchScrollTarget","targetStyle","currentPadding","paddingRight","clientWidth","adjustedPadding","innerWidth","_this3","_props2","ScrollBlock","_PureComponent","getScrollTarget","blurSelectInput","activeElement","blur","isEnabled","ScrollCaptor","isBottom","isTop","cancelScroll","handleEventDelta","onBottomArrive","onBottomLeave","onTopArrive","onTopLeave","_this$scrollTarget","scrollTarget","isDeltaPositive","availableScroll","shouldCancelScroll","onWheel","deltaY","onTouchStart","touchStart","changedTouches","clientY","onTouchMove","startListening","stopListening","ScrollCaptorSwitch","instructionsAriaMessage","isSearchable","valueEventAriaMessage","valueFocusAriaMessage","focusedValue","getOptionLabel","selectValue","optionFocusAriaMessage","focusedOption","resultsAriaMessage","screenReaderMessage","formatGroupLabel","group","getOptionValue","isOptionDisabled","isDisabled","containerCSS","isRtl","pointerEvents","SelectContainer","--is-disabled","--is-rtl","valueContainerCSS","hasValue","value-container","value-container--is-multi","value-container--has-value","indicatorsContainerCSS","alignSelf","flexShrink","IndicatorsContainer","indicators","Svg","viewBox","aria-hidden","focusable","lineHeight","stroke","strokeWidth","CrossIcon","DownChevron","baseCSS","neutral60","neutral20","transition",":hover","neutral80","dropdownIndicatorCSS","DropdownIndicator","_props$children","indicator","dropdown-indicator","clearIndicatorCSS","ClearIndicator","_props$children2","clear-indicator","indicatorSeparatorCSS","_ref3$theme","neutral10","IndicatorSeparator","indicator-separator","loadingIndicatorCSS","_ref4$theme","marginRight","verticalAlign","LoadingDot","animationDuration","animationDelay","animationIterationCount","animationName","animationTimingFunction","marginLeft","LoadingIndicator","loading-indicator","css$1","_ref$theme","neutral5","borderColor","borderStyle","borderWidth","boxShadow","cursor","justifyContent","&:hover","neutral30","control","control--is-disabled","control--is-focused","groupCSS","Group","Heading","headingProps","groupHeadingCSS","paddingLeft","textTransform","GroupHeading","cleanProps","group-heading","inputCSS","visibility","inputStyle","isHidden","Input","multiValueCSS","minWidth","multiValueLabelCSS","cropWithEllipsis","textOverflow","multiValueRemoveCSS","dangerLight","danger","MultiValueGeneric","MultiValueContainer","MultiValueLabel","MultiValueRemove","Container","Label","Remove","containerInnerProps","multi-value","multi-value--is-disabled","labelInnerProps","multi-value__label","removeInnerProps","multi-value__remove","optionCSS","primary25","userSelect","WebkitTapHighlightColor",":active","primary50","option--is-disabled","option--is-focused","option--is-selected","placeholderCSS","neutral50","css$2","maxWidth","single-value","single-value--is-disabled","defaultComponents","defaultStyles","clearIndicator","dropdownIndicator","groupHeading","indicatorsContainer","indicatorSeparator","loadingIndicator","loadingMessage","menuList","menuPortal","multiValue","multiValueLabel","multiValueRemove","primary75","neutral70","neutral90","defaultTheme","backspaceRemovesValue","blurInputOnSelect","captureMenuScroll","closeMenuOnSelect","closeMenuOnScroll","controlShouldRenderValue","escapeClearsValue","filterOption","config","rawInput","_ignoreCase$ignoreAcc","ignoreCase","ignoreAccents","matchFrom","candidate","menuIsOpen","menuShouldBlockScroll","userAgent","openMenuOnFocus","openMenuOnClick","pageSize","screenReaderStatus","tabSelectsValue","instanceId","_initialiseProps","cacheComponents","instancePrefix","menuOptions","buildMenuOptions","startListeningComposition","startListeningToTouch","onScroll","autoFocus","focusInput","nextProps","_selectValue","_menuOptions","_focusedValue","getNextFocusedValue","_focusedOption","getNextFocusedOption","inputIsHiddenAfterUpdate","inputIsHidden","menuListRef","focusedOptionRef","scrollToFocusedOptionOnUpdate","stopListeningComposition","stopListeningToTouch","onMenuOpen","_props3","announceAriaLiveContext","onMenuClose","focus","focusOption","_state","openAtIndex","selectedIndex","_props4","_state2","focusedIndex","lastIndex","nextFocus","_state3","clearValue","selectOption","classNamePrefix","cxPrefix","getTheme","nextSelectValue","clearFocusValueOnUpdate","_state4","lastSelectValue","lastFocusedIndex","lastFocusedOption","render","_props5","isClearable","isOptionSelected","some","formatOptionLabel","_inputValue","_selectValue2","onCompositionStart","onCompositionEnd","onTouchEnd","_props$inputValue","toOption","shouldHideSelectedOptions","onHover","onOptionHover","onSelect","optionId","getElementId","onMouseMove","onMouseOver","role","acc","itemIndex","hasGroups","groupId","_state5","ariaLiveContext","_props6","countOptions","_props7","inputId","getInputRef","onBlur","onInputBlur","onFocus","onInputFocus","readOnly","ariaAttributes","aria-autocomplete","aria-label","_commonProps","commonProps","autoCapitalize","autoComplete","autoCorrect","spellCheck","_this4","_components","_props8","_state6","opt","removeValue","onMouseDown","_props9","onClearIndicatorMouseDown","onClearIndicatorTouchEnd","_props10","_components2","onDropdownIndicatorMouseDown","onDropdownIndicatorTouchEnd","_this5","_components3","Menu$$1","MenuList$$1","MenuPortal$$1","LoadingMessage$$1","NoOptionsMessage$$1","_state7","_props11","menuPortalTarget","onMenuScrollToTop","onMenuScrollToBottom","getFocusedOptionRef","menuUI","hasOptions","headingId","_message","menuPlacementProps","menuElement","_ref2$placerProps","onMenuMouseDown","onMenuMouseMove","getMenuListRef","controlRef","_this6","_props12","delimiter","_value","_value2","aria-live","ariaLiveSelection","constructAriaLiveMessage","_components4","_props13","getCommonProps","onKeyDown","renderLiveRegion","getControlRef","onControlMouseDown","onControlTouchEnd","renderPlaceholderOrValue","renderInput","renderClearIndicator","renderLoadingIndicator","renderIndicatorSeparator","renderDropdownIndicator","renderMenu","renderFormField","_this7","isComposing","blockOptionHover","initialTouchX","initialTouchY","openAfterFocus","components$$1","blurInput","_props14","_props15","_selectValue3","announceAriaLiveSelection","removedValue","_props16","popValue","lastSelectedValue","custom","getActiveDescendentId","_state8","button","openMenu","tagName","_props17","HTMLElement","_ref5$touches","touches","touch","clientX","userIsDragging","_ref6$touches","deltaX","currentTarget","_props18","_props19","hideSelectedOptions","_props20","_state9","defaultPrevented","focusValue","shiftKey","manageState","SelectComponent","_class","StateManager","defaultInputValue","defaultMenuIsOpen","defaultValue","callProp","getProp","defaultProps$1","cacheOptions","defaultOptions","makeAsyncSelect","Async","mounted","optionsCache","lastRequest","loadedInputValue","loadedOptions","passEmptyOptions","request","loadOptions","compareOption","builtins","formatCreateLabel","isValidNewOption","selectOptions","getNewOptionData","optionLabel","__isNew__","defaultProps$2","allowCreateWhileLoading","createOptionPosition","makeCreatableSelect","Creatable","onCreateOption","newOption","valueArray","newOptionData","newActionMeta","Fade","Tag","_ref$duration","inProp","entering","entered","exiting","exited","mountOnEnter","unmountOnExit","collapseDuration","Collapse","_ref$getBoundingClien","_width","getStyle","getTransition","AnimatedInput","WrappedComponent","AnimatedMultiValue","AnimatedPlaceholder","AnimatedSingleValue","AnimatedValueContainer","makeAnimated","externalComponents","rest","AnimatedComponents","index$1","6041","injectGlobal","css","__WEBPACK_IMPORTED_MODULE_0_create_emotion__","_createEmotion","flush","hydrate","getRegisteredStyles","keyframes","sheet","caches","6042","sheetForTag","tag","styleSheets","ownerNode","makeStyleTag","opts","setAttribute","nonce","appendChild","createTextNode","head","createEmotion","insertRule","rule","isBrowser","currentSourceMap","handleInterpolation","interpolation","couldBeSelectorInterpolation","__emotion_styles","selector","mergedProps","createStringFromObject","cached","registered","objectToStringCache","has","string","processStyleName","processStyleValue","scope","inserted","stylis","registeredStyles","rawClassName","sourceMap","classnames","hydrateSingleId","ids","inject","__SECRET_EMOTION__","stylisOptions","insertionPlugin","__WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet___default","StyleSheet","__WEBPACK_IMPORTED_MODULE_3__emotion_stylis__","use","stylisPlugins","stylesWithLabel","WeakMap","labelPattern","createClassName","identifierName","__WEBPACK_IMPORTED_MODULE_2__emotion_hash__","createStyles","strings","stringMode","raw","interpolations","charCodeAt","animation","chunks","querySelectorAll","tags","parentNode","insertBefore","getAttribute","emotion","__WEBPACK_IMPORTED_MODULE_0__emotion_memoize__","__WEBPACK_IMPORTED_MODULE_1__emotion_unitless__","__WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet__","hyphenateRegex","styleName","cls","arg","toAdd","isSpeedy","ctr","_proto","injected","speedy","bool","cssRules","_tag","removeChild","6043","memoize","6044","unitlessKeys","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flexPositive","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","order","orphans","tabSize","widows","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","6045","murmurhash2_32_gc","6046","stylis_min","da","ea","fa","ia","ja","ka","aa","ba","la","ma","na","oa","6047","toSheet","block","selectors","parents","column","ns","6048","_interopRequireDefault","_react","_react2","_propTypes","_propTypes2","sizerStyle","INPUT_PROPS_BLACKLIST","cleanInputProps","field","copyStyles","fontFamily","fontStyle","letterSpacing","isIE","generateId","random","AutosizeInput","placeHolderSizerRef","placeHolderSizer","sizerRef","sizer","inputWidth","copyInputStyles","updateInputWidth","prevState","onAutosize","inputStyles","scrollWidth","newInputWidth","placeholderIsMinWidth","extraWidth","injectStyles","dangerouslySetInnerHTML","__html","sizerValue","currentValue","wrapperStyle","inputClassName","renderStyles","propTypes","any","oneOfType","number","6049","_CSSTransition","_CSSTransition2","_ReplaceTransition","_ReplaceTransition2","_TransitionGroup","_TransitionGroup2","_Transition","_Transition2","Transition","TransitionGroup","ReplaceTransition","CSSTransition","6050","PropTypes","newObj","_addClass","_addClass2","_removeClass","_removeClass2","_PropTypes","addClass","removeClass","classNamesShape","onEnter","onEntering","onEntered","onExit","onExiting","appearing","_this$getClassNames","getClassNames","removeClasses","_this$getClassNames2","activeClassName","reflowAndAddClass","_this$getClassNames3","doneClassName","_this$getClassNames4","_this$getClassNames5","_this$getClassNames6","_getClassNames","6051","classList","_hasClass2","baseVal","_hasClass","6052","hasClass","6053","replaceClassName","origClass","classToRemove","6054","_reactDom","isRequired","handleLifecycle","handler","idx","originalArgs","_child$props","Children","findDOMNode","_React$Children$toArr","second","cloneElement","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","6055","roundToNdecimals","decimals","6056","__WEBPACK_IMPORTED_MODULE_3__utils_findLayerById__","__WEBPACK_IMPORTED_MODULE_4__utils_geoprocessing_bboxFunction__","textField","BboxTextField","calculateBbox"],"mappings":"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","file":"static/js/7.2303459a.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 5697:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return epsilon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return epsilon2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return pi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return halfPi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return quarterPi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"w\", function() { return tau; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return degrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return radians; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return abs; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return atan; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return atan2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return cos; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return ceil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return exp; });\n/* unused harmony export floor */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return pow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return sin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return sign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return sqrt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return tan; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = acos;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = asin;\n/* harmony export (immutable) */ __webpack_exports__[\"m\"] = haversin;\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar floor = Math.floor;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\n\n/***/ }),\n\n/***/ 5700:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return coordEach; });\n/* unused harmony export coordReduce */\n/* unused harmony export propEach */\n/* unused harmony export propReduce */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return featureEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return featureReduce; });\n/* unused harmony export coordAll */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return geomEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return geomReduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return flattenEach; });\n/* unused harmony export flattenReduce */\n/* unused harmony export segmentEach */\n/* unused harmony export segmentReduce */\n/* unused harmony export lineEach */\n/* unused harmony export lineReduce */\n/* unused harmony export findSegment */\n/* unused harmony export findPoint */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_helpers__ = __webpack_require__(5946);\n\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* feature */])(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* feature */])(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* lineString */])([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"d\" /* point */])(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5705:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getCoord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getCoords; });\n/* unused harmony export containsNumber */\n/* unused harmony export geojsonType */\n/* unused harmony export featureOf */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return collectionOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return getGeom; });\n/* unused harmony export getGeomType */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return getType; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_helpers__ = __webpack_require__(5948);\n\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* isNumber */])(coordinates[0]) && Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* isNumber */])(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5706:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = projection;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = projectionMutator;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__clip_antimeridian__ = __webpack_require__(5989);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__clip_circle__ = __webpack_require__(5990);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__clip_extent__ = __webpack_require__(5759);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__compose__ = __webpack_require__(5818);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__identity__ = __webpack_require__(5762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__rotation__ = __webpack_require__(5737);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__transform__ = __webpack_require__(5738);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__fit__ = __webpack_require__(5765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__resample__ = __webpack_require__(5991);\n\n\n\n\n\n\n\n\n\n\n\nvar transformRadians = Object(__WEBPACK_IMPORTED_MODULE_7__transform__[\"a\" /* transformer */])({\n  point: function(x, y) {\n    this.stream.point(x * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], y * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */]);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = __WEBPACK_IMPORTED_MODULE_0__clip_antimeridian__[\"a\" /* default */], // clip angle\n      x0 = null, y0, x1, y1, postclip = __WEBPACK_IMPORTED_MODULE_4__identity__[\"a\" /* default */], // clip extent\n      delta2 = 0.5, projectResample = Object(__WEBPACK_IMPORTED_MODULE_9__resample__[\"a\" /* default */])(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], point[1] * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */]);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */], point[1] * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */]];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? Object(__WEBPACK_IMPORTED_MODULE_1__clip_circle__[\"a\" /* default */])(theta = _ * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], 6 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */]) : (theta = null, __WEBPACK_IMPORTED_MODULE_0__clip_antimeridian__[\"a\" /* default */]), reset()) : theta * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */];\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, __WEBPACK_IMPORTED_MODULE_4__identity__[\"a\" /* default */]) : Object(__WEBPACK_IMPORTED_MODULE_2__clip_extent__[\"a\" /* clipExtent */])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], phi = _[1] % 360 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], recenter()) : [lambda * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */], phi * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */]];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], deltaPhi = _[1] % 360 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */], deltaGamma = _.length > 2 ? _[2] % 360 * __WEBPACK_IMPORTED_MODULE_5__math__[\"r\" /* radians */] : 0, recenter()) : [deltaLambda * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */], deltaPhi * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */], deltaGamma * __WEBPACK_IMPORTED_MODULE_5__math__[\"h\" /* degrees */]];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = Object(__WEBPACK_IMPORTED_MODULE_9__resample__[\"a\" /* default */])(projectTransform, delta2 = _ * _), reset()) : Object(__WEBPACK_IMPORTED_MODULE_5__math__[\"u\" /* sqrt */])(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return Object(__WEBPACK_IMPORTED_MODULE_8__fit__[\"a\" /* fitExtent */])(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return Object(__WEBPACK_IMPORTED_MODULE_8__fit__[\"b\" /* fitSize */])(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = Object(__WEBPACK_IMPORTED_MODULE_3__compose__[\"a\" /* default */])(rotate = Object(__WEBPACK_IMPORTED_MODULE_6__rotation__[\"b\" /* rotateRadians */])(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\n\n/***/ }),\n\n/***/ 5709:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = noop;\nfunction noop() {}\n\n\n/***/ }),\n\n/***/ 5710:\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 5714:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var styles=function styles(theme){return{root:{position:'unset'}};};/**\r\n   * Contains two buttons. One for submit and one to cancel. Used many places. For example EditLayerDialog\r\n   * and geoprocessing dialog.\r\n   */var SubmitOrCancelAction=function(_Component){_inherits(SubmitOrCancelAction,_Component);function SubmitOrCancelAction(props){_classCallCheck(this,SubmitOrCancelAction);var _this=_possibleConstructorReturn(this,(SubmitOrCancelAction.__proto__||Object.getPrototypeOf(SubmitOrCancelAction)).call(this,props));_this.keyupHandler=_this.keyupHandler.bind(_this);return _this;}_createClass(SubmitOrCancelAction,[{key:'componentDidMount',value:function componentDidMount(){//Press of enter button will trigger submit function\ndocument.addEventListener('keyup',this.keyupHandler,false);}},{key:'componentWillUnmount',value:function componentWillUnmount(){document.removeEventListener('keyup',this.keyupHandler,false);}},{key:'keyupHandler',value:function keyupHandler(e){var submit=this.props.submit;if(e.keyCode===13){submit();}}},{key:'render',value:function render(){var _props=this.props,classes=_props.classes,submit=_props.submit,submitText=_props.submitText,cancel=_props.cancel,cancelText=_props.cancelText,submitDisabled=_props.submitDisabled;var submitBtnTxt=submitText?submitText:'Submit';var cancelBtnTxt=cancelText?cancelText:'Cancel';var disabled=submitDisabled?true:false;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__material_ui_core__[\"f\" /* DialogActions */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__material_ui_core__[\"b\" /* Button */],{classes:{root:classes.root},variant:'contained',disabled:disabled,onClick:submit,color:'primary'},submitBtnTxt),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__material_ui_core__[\"b\" /* Button */],{classes:{root:classes.root},onClick:cancel,color:'primary'},cancelBtnTxt));}}]);return SubmitOrCancelAction;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(SubmitOrCancelAction));\n\n/***/ }),\n\n/***/ 5715:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n});\n\n\n/***/ }),\n\n/***/ 5719:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  return new Adder;\n});\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\n\n/***/ }),\n\n/***/ 5720:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n});\n\n\n/***/ }),\n\n/***/ 5724:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * Ok button. Used for information dialogs.\r\n */var styles=function styles(theme){return{};};var OkAction=function(_Component){_inherits(OkAction,_Component);function OkAction(){_classCallCheck(this,OkAction);return _possibleConstructorReturn(this,(OkAction.__proto__||Object.getPrototypeOf(OkAction)).apply(this,arguments));}_createClass(OkAction,[{key:'render',value:function render(){var _props=this.props,ok=_props.ok,okText=_props.okText;var okBtnTxt=okText?okText:'OK';return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__material_ui_core__[\"f\" /* DialogActions */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1__material_ui_core__[\"b\" /* Button */],{onClick:ok,color:'primary'},okBtnTxt));}}]);return OkAction;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_2__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(OkAction));\n\n/***/ }),\n\n/***/ 5725:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = spherical;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cartesian;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = cartesianDot;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = cartesianCross;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = cartesianAddInPlace;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = cartesianScale;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = cartesianNormalizeInPlace;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\nfunction spherical(cartesian) {\n  return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(cartesian[1], cartesian[0]), Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi);\n  return [cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda), cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda), Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\n\n/***/ }),\n\n/***/ 5726:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return x === null ? NaN : +x;\n});\n\n\n/***/ }),\n\n/***/ 5727:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = azimuthalRaw;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = azimuthalInvert;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x),\n        cy = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x),\n      k * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(x * x + y * y),\n        c = angle(z),\n        sc = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(c),\n        cc = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(c);\n    return [\n      Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(x * sc, z * cc),\n      Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(z && y * sc / z)\n    ];\n  }\n}\n\n\n/***/ }),\n\n/***/ 5728:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return epsilon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return epsilon2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return beaches; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return cells; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return circles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return edges; });\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = Diagram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Beach__ = __webpack_require__(6013);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Cell__ = __webpack_require__(5842);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Circle__ = __webpack_require__(5843);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Edge__ = __webpack_require__(5770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RedBlackTree__ = __webpack_require__(5769);\n\n\n\n\n\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new __WEBPACK_IMPORTED_MODULE_4__RedBlackTree__[\"b\" /* default */];\n  circles = new __WEBPACK_IMPORTED_MODULE_4__RedBlackTree__[\"b\" /* default */];\n\n  while (true) {\n    circle = __WEBPACK_IMPORTED_MODULE_2__Circle__[\"c\" /* firstCircle */];\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        Object(__WEBPACK_IMPORTED_MODULE_0__Beach__[\"a\" /* addBeach */])(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      Object(__WEBPACK_IMPORTED_MODULE_0__Beach__[\"b\" /* removeBeach */])(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  Object(__WEBPACK_IMPORTED_MODULE_1__Cell__[\"d\" /* sortCellHalfedges */])();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"a\" /* clipEdges */])(x0, y0, x1, y1);\n    Object(__WEBPACK_IMPORTED_MODULE_1__Cell__[\"b\" /* clipCells */])(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return Object(__WEBPACK_IMPORTED_MODULE_1__Cell__[\"a\" /* cellHalfedgeStart */])(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n\n\n/***/ }),\n\n/***/ 5729:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(5771)\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31)))\n\n/***/ }),\n\n/***/ 5730:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core___ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_checkIfLayerNameExists__ = __webpack_require__(152);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * TextField to set layer name. Used in edit layer and also geoprocessing dialogs\r\n */var styles=function styles(theme){return{};};var LayerNameTextField=function(_Component){_inherits(LayerNameTextField,_Component);function LayerNameTextField(){var _ref;var _temp,_this,_ret;_classCallCheck(this,LayerNameTextField);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=LayerNameTextField.__proto__||Object.getPrototypeOf(LayerNameTextField)).call.apply(_ref,[this].concat(args))),_this),_this.nameChange=function(name){return function(event){var setName=_this.props.setName;setName(event.target.value);};},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(LayerNameTextField,[{key:'componentDidMount',value:function componentDidMount(){var defaultName=this.props.defaultName;this.setState({layerName:defaultName});}},{key:'render',value:function render(){var _props=this.props,promt=_props.promt,layerName=_props.layerName,layers=_props.layers,acceptedLayerId=_props.acceptedLayerId;var Nameerror=false;var errorText='';if(layerName===''){errorText='layer name cannot be empty';Nameerror=true;}else if(Object(__WEBPACK_IMPORTED_MODULE_3__utils_checkIfLayerNameExists__[\"a\" /* default */])(layerName,layers,acceptedLayerId)){// Name exists already and is not the same as this layers names\nerrorText='That name is already in use';Nameerror=true;}var promtText=promt?promt:\"Layer Name\";return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('form',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core___[\"J\" /* TextField */],{id:'outlined-full-width',onKeyPress:function onKeyPress(ev){if(ev.key==='Enter'){ev.preventDefault();}},label:promtText,value:layerName,fullWidth:true,error:Nameerror,onChange:this.nameChange(''),margin:'normal',helperText:errorText,InputLabelProps:{shrink:true}}));}}]);return LayerNameTextField;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(LayerNameTextField));\n\n/***/ }),\n\n/***/ 5731:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core__ = __webpack_require__(143);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//This is prefered over the original. Uses ids over indices.\nvar styles=function styles(theme){return{formControl:{margin:theme.spacing.unit,width:'100%'},Select:{width:'100%'}};};var LayersSelect=function(_React$Component){_inherits(LayersSelect,_React$Component);function LayersSelect(){var _ref;var _temp,_this,_ret;_classCallCheck(this,LayersSelect);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=LayersSelect.__proto__||Object.getPrototypeOf(LayersSelect)).call.apply(_ref,[this].concat(args))),_this),_this.state={curValue:''},_this.handleChange=function(name){return function(event){var changeLayer=_this.props.changeLayer;changeLayer(event.target.value);_this.setState(_defineProperty({},name,event.target.value));};},_this.setCurLayer=function(){var layerId=_this.props.layerId;if(layerId){_this.setState({curValue:layerId});}},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(LayersSelect,[{key:'componentDidMount',value:function componentDidMount(){this.setCurLayer();}},{key:'componentDidUpdate',value:function componentDidUpdate(prevProps){if(prevProps.layerId!==this.props.layerId){this.setCurLayer();}}},{key:'render',value:function render(){var _props=this.props,layers=_props.layers,classes=_props.classes,promt=_props.promt;var options=layers.map(function(layer){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"u\" /* MenuItem */],{key:layer.id,value:layer.id},layer.displayName);});var promtText=promt?promt:'Choose a Layer';return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"k\" /* FormControl */],{required:true,fullWidth:true,className:classes.formControl},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"n\" /* InputLabel */],{htmlFor:'age-simple'},promtText),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"x\" /* Select */],{value:this.state.curValue,onChange:this.handleChange('curValue'),placeholder:'Choose a Layer to edit'},options));}}]);return LayersSelect;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(LayersSelect));\n\n/***/ }),\n\n/***/ 5737:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = rotateRadians;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(5818);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n\n\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] ? lambda - __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */] : lambda < -__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] ? lambda + __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */] : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */]) ? (deltaPhi || deltaGamma ? Object(__WEBPACK_IMPORTED_MODULE_0__compose__[\"a\" /* default */])(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] ? lambda - __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */] : lambda < -__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] ? lambda + __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */] : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(deltaPhi),\n      sinDeltaPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(deltaPhi),\n      cosDeltaGamma = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(deltaGamma),\n      sinDeltaGamma = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi),\n        x = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(lambda) * cosPhi,\n        y = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(lambda) * cosPhi,\n        z = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"e\" /* atan2 */])(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"c\" /* asin */])(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi),\n        x = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(lambda) * cosPhi,\n        y = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(lambda) * cosPhi,\n        z = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"e\" /* atan2 */])(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"c\" /* asin */])(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(rotate) {\n  rotate = rotateRadians(rotate[0] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], rotate[1] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], rotate.length > 2 ? rotate[2] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */] : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], coordinates[1] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */]);\n    return coordinates[0] *= __WEBPACK_IMPORTED_MODULE_1__math__[\"h\" /* degrees */], coordinates[1] *= __WEBPACK_IMPORTED_MODULE_1__math__[\"h\" /* degrees */], coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], coordinates[1] * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */]);\n    return coordinates[0] *= __WEBPACK_IMPORTED_MODULE_1__math__[\"h\" /* degrees */], coordinates[1] *= __WEBPACK_IMPORTED_MODULE_1__math__[\"h\" /* degrees */], coordinates;\n  };\n\n  return forward;\n});\n\n\n/***/ }),\n\n/***/ 5738:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = transformer;\n/* unused harmony default export */ var _unused_webpack_default_export = (function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n});\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\n\n/***/ }),\n\n/***/ 5739:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = __webpack_require__(5767);\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nexports.default = bbox;\n\n\n/***/ }),\n\n/***/ 5740:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 5758:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//combines the features of two feature collections into one\n// can have duplicates\nvar combineFeatures=function combineFeatures(featureCollectionList){var newGeojson={\"type\":\"FeatureCollection\",\"features\":[]};for(var i in featureCollectionList){newGeojson.features=newGeojson.features.concat(featureCollectionList[i].features);}return newGeojson;};/* harmony default export */ __webpack_exports__[\"a\"] = (combineFeatures);\n\n/***/ }),\n\n/***/ 5759:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = clipExtent;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__buffer__ = __webpack_require__(5819);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__line__ = __webpack_require__(5963);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__polygon__ = __webpack_require__(5820);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_d3_array__ = __webpack_require__(5760);\n\n\n\n\n\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(p[0] - x0) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */] ? direction > 0 ? 0 : 3\n        : Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(p[0] - x1) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */] ? direction > 0 ? 2 : 1\n        : Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(p[1] - y0) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */] ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = Object(__WEBPACK_IMPORTED_MODULE_1__buffer__[\"a\" /* default */])(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = Object(__WEBPACK_IMPORTED_MODULE_4_d3_array__[\"a\" /* merge */])(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          Object(__WEBPACK_IMPORTED_MODULE_3__polygon__[\"a\" /* default */])(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (Object(__WEBPACK_IMPORTED_MODULE_2__line__[\"a\" /* default */])(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n});\n\n\n/***/ }),\n\n/***/ 5760:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bisect__ = __webpack_require__(5822);\n/* unused harmony reexport bisect */\n/* unused harmony reexport bisectRight */\n/* unused harmony reexport bisectLeft */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ascending__ = __webpack_require__(5720);\n/* unused harmony reexport ascending */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bisector__ = __webpack_require__(5823);\n/* unused harmony reexport bisector */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__cross__ = __webpack_require__(5964);\n/* unused harmony reexport cross */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__descending__ = __webpack_require__(5965);\n/* unused harmony reexport descending */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__deviation__ = __webpack_require__(5825);\n/* unused harmony reexport deviation */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__extent__ = __webpack_require__(5827);\n/* unused harmony reexport extent */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__histogram__ = __webpack_require__(5966);\n/* unused harmony reexport histogram */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__threshold_freedmanDiaconis__ = __webpack_require__(5969);\n/* unused harmony reexport thresholdFreedmanDiaconis */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__threshold_scott__ = __webpack_require__(5970);\n/* unused harmony reexport thresholdScott */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__threshold_sturges__ = __webpack_require__(5831);\n/* unused harmony reexport thresholdSturges */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__max__ = __webpack_require__(5971);\n/* unused harmony reexport max */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__mean__ = __webpack_require__(5972);\n/* unused harmony reexport mean */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__median__ = __webpack_require__(5973);\n/* unused harmony reexport median */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__merge__ = __webpack_require__(5974);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_14__merge__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__min__ = __webpack_require__(5832);\n/* unused harmony reexport min */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pairs__ = __webpack_require__(5824);\n/* unused harmony reexport pairs */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__permute__ = __webpack_require__(5975);\n/* unused harmony reexport permute */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__quantile__ = __webpack_require__(5761);\n/* unused harmony reexport quantile */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__range__ = __webpack_require__(5829);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_19__range__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__scan__ = __webpack_require__(5976);\n/* unused harmony reexport scan */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__shuffle__ = __webpack_require__(5977);\n/* unused harmony reexport shuffle */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__sum__ = __webpack_require__(5978);\n/* unused harmony reexport sum */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__ticks__ = __webpack_require__(5830);\n/* unused harmony reexport ticks */\n/* unused harmony reexport tickIncrement */\n/* unused harmony reexport tickStep */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__transpose__ = __webpack_require__(5833);\n/* unused harmony reexport transpose */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__variance__ = __webpack_require__(5826);\n/* unused harmony reexport variance */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__zip__ = __webpack_require__(5979);\n/* unused harmony reexport zip */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ 5761:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(5726);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values, p, valueof) {\n  if (valueof == null) valueof = __WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */];\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n});\n\n\n/***/ }),\n\n/***/ 5762:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return x;\n});\n\n\n/***/ }),\n\n/***/ 5763:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export conicEqualAreaRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__conic__ = __webpack_require__(5764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cylindricalEqualArea__ = __webpack_require__(5992);\n\n\n\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y0), n = (sy0 + Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(n) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]) return Object(__WEBPACK_IMPORTED_MODULE_2__cylindricalEqualArea__[\"a\" /* cylindricalEqualAreaRaw */])(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(c) / n;\n\n  function project(x, y) {\n    var r = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(c - 2 * n * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y)) / n;\n    return [r * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x *= n), r0 - r * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(x, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(r0y)) / n * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"s\" /* sign */])(r0y), Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_1__conic__[\"a\" /* conicProjection */])(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n});\n\n\n/***/ }),\n\n/***/ 5764:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = conicProjection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__index__ = __webpack_require__(5706);\n\n\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = __WEBPACK_IMPORTED_MODULE_0__math__[\"o\" /* pi */] / 3,\n      m = Object(__WEBPACK_IMPORTED_MODULE_1__index__[\"b\" /* projectionMutator */])(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi1 = _[1] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */]) : [phi0 * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */], phi1 * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */]];\n  };\n\n  return p;\n}\n\n\n/***/ }),\n\n/***/ 5765:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fitExtent;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = fitSize;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__stream__ = __webpack_require__(5715);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__path_bounds__ = __webpack_require__(5837);\n\n\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  Object(__WEBPACK_IMPORTED_MODULE_0__stream__[\"a\" /* default */])(object, projection.stream(__WEBPACK_IMPORTED_MODULE_1__path_bounds__[\"a\" /* default */]));\n\n  var b = __WEBPACK_IMPORTED_MODULE_1__path_bounds__[\"a\" /* default */].result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\n\n/***/ }),\n\n/***/ 5766:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = mercatorRaw;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = mercatorProjection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rotation__ = __webpack_require__(5737);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"n\" /* log */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"v\" /* tan */])((__WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"d\" /* atan */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"k\" /* exp */])(y)) - __WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */]];\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / __WEBPACK_IMPORTED_MODULE_0__math__[\"w\" /* tau */]);\n});\n\nfunction mercatorProjection(project) {\n  var m = Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = __WEBPACK_IMPORTED_MODULE_0__math__[\"o\" /* pi */] * scale(),\n        t = m(Object(__WEBPACK_IMPORTED_MODULE_1__rotation__[\"a\" /* default */])(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\n\n/***/ }),\n\n/***/ 5767:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = __webpack_require__(5768);\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(helpers.feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        var previousFeatureIndex = 0;\n        var previousMultiIndex = 0;\n        var prevGeomIndex = 0;\n        if (coordEach(feature, function (currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n                previousCoords = currentCoord;\n                previousFeatureIndex = featureIndex;\n                previousMultiIndex = multiPartIndexCoord;\n                prevGeomIndex = geometryIndex;\n                segmentIndex = 0;\n                return;\n            }\n            var currentSegment = helpers.lineString([previousCoords, currentCoord], feature.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        if (feature.geometry === null) return;\n        var type = feature.geometry.type;\n        var coords = feature.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(helpers.lineString(coords[geometryIndex], feature.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return helpers.lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return helpers.point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return helpers.point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return helpers.point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.coordAll = coordAll;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.findSegment = findSegment;\nexports.findPoint = findPoint;\n\n\n/***/ }),\n\n/***/ 5768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 5769:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = RedBlackNode;\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\n/* harmony default export */ __webpack_exports__[\"b\"] = (RedBlackTree);\n\n\n/***/ }),\n\n/***/ 5770:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = createEdge;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createBorderEdge;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = setEdgeEnd;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = clipEdges;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Diagram__ = __webpack_require__(5728);\n\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"e\" /* edges */].push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"b\" /* cells */][left.index].halfedges.push(index);\n  __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"b\" /* cells */][right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"e\" /* edges */].length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"e\" /* edges */][i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"f\" /* epsilon */]\n            || Math.abs(edge[0][1] - edge[1][1]) > __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"f\" /* epsilon */])) {\n      delete __WEBPACK_IMPORTED_MODULE_0__Diagram__[\"e\" /* edges */][i];\n    }\n  }\n}\n\n\n/***/ }),\n\n/***/ 5771:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5710)))\n\n/***/ }),\n\n/***/ 5772:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index);\n\n\n/***/ }),\n\n/***/ 5773:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core__ = __webpack_require__(143);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * Gives feedback message about input to dialogs. Displayed in stacks on top of dialog.\r\n */var styles=function styles(theme){return{feedbackDiv:{padding:theme.spacing.unit,borderRadius:5,margin:theme.spacing.unit}};};var DialogFeedback=function(_Component){_inherits(DialogFeedback,_Component);function DialogFeedback(){_classCallCheck(this,DialogFeedback);return _possibleConstructorReturn(this,(DialogFeedback.__proto__||Object.getPrototypeOf(DialogFeedback)).apply(this,arguments));}_createClass(DialogFeedback,[{key:'render',value:function render(){var _props=this.props,message=_props.message,classes=_props.classes,variant=_props.variant;var bgcolor='#2979ff';switch(variant){case'error':bgcolor='red';break;default:break;}return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.feedbackDiv,style:{backgroundColor:bgcolor}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"M\" /* Typography */],null,' ',message));}}]);return DialogFeedback;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(DialogFeedback));\n\n/***/ }),\n\n/***/ 5808:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_intersect__ = __webpack_require__(5941);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_intersect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_intersect__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__performActionOnAllFeaturePairs__ = __webpack_require__(5811);\n/**\r\n * Returns the intersection of two polygons\r\n */var intersectFunction=function intersectFunction(geojson1,geojson2){if(!(geojson1&&geojson2)){return'Two geometries are required';}else if(geojson1.features[0].geometry.type!=='Polygon'&&geojson1.features[0].geometry.type!=='MultiPolygon'){return'The geometries must be of type Polygon or MultiPolygon.';}else if(geojson1===geojson2){return'The geometries cannot be identical';}var newGeojson=Object(__WEBPACK_IMPORTED_MODULE_1__performActionOnAllFeaturePairs__[\"a\" /* default */])(geojson1,geojson2,__WEBPACK_IMPORTED_MODULE_0__turf_intersect___default.a);//Remove null or undefined features:\nnewGeojson.features=newGeojson.features.filter(function(f){return f!=null;});if(!newGeojson.features[0]){return'The geometries do not overlap';}return newGeojson;};/* harmony default export */ __webpack_exports__[\"a\"] = (intersectFunction);\n\n/***/ }),\n\n/***/ 5809:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 5810:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * martinez v0.4.3\n * Martinez polygon clipping algorithm, does boolean operation on polygons (multipolygons, polygons with holes etc): intersection, union, difference, xor\n *\n * @author Alex Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.martinez = {})));\n}(this, (function (exports) { 'use strict';\n\n  function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n  var SplayTree = function SplayTree(compare, noDuplicates) {\n    if ( compare === void 0 ) compare = DEFAULT_COMPARE;\n    if ( noDuplicates === void 0 ) noDuplicates = false;\n\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  };\n\n  var prototypeAccessors = { size: { configurable: true } };\n\n\n  SplayTree.prototype.rotateLeft = function rotateLeft (x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) { y.left.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)              { this._root = y; }\n    else if (x === x.parent.left) { x.parent.left = y; }\n    else                        { x.parent.right = y; }\n    if (y) { y.left = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype.rotateRight = function rotateRight (x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) { y.right.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)             { this._root = y; }\n    else if(x === x.parent.left) { x.parent.left = y; }\n    else                       { x.parent.right = y; }\n    if (y) { y.right = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype._splay = function _splay (x) {\n      var this$1 = this;\n\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) { this$1.rotateRight(p); }\n        else            { this$1.rotateLeft(p); }\n      } else if (p.left === x && p.parent.left === p) {\n        this$1.rotateRight(p.parent);\n        this$1.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this$1.rotateLeft(p.parent);\n        this$1.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this$1.rotateRight(p);\n        this$1.rotateLeft(p);\n      } else {\n        this$1.rotateLeft(p);\n        this$1.rotateRight(p);\n      }\n    }\n  };\n\n\n  SplayTree.prototype.splay = function splay (x) {\n      var this$1 = this;\n\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) { ggp.left= x; }\n        else               { ggp.right = x; }\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this$1._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else { gp.left = null; }\n\n            p.right = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else { gp.right = null; }\n\n            x.left  = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else { p.left = null; }\n\n        x.right= p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else { gp.right = null; }\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else { gp.left = null; }\n\n            x.right = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else { p.right = null; }\n\n        x.left = p;\n        p.parent = x;\n      }\n    }\n  };\n\n\n  SplayTree.prototype.replace = function replace (u, v) {\n    if (!u.parent) { this._root = v; }\n    else if (u === u.parent.left) { u.parent.left = v; }\n    else { u.parent.right = v; }\n    if (v) { v.parent = u.parent; }\n  };\n\n\n  SplayTree.prototype.minNode = function minNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.left) { u = u.left; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.maxNode = function maxNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.right) { u = u.right; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.insert = function insert (key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) { return; }\n        else if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    }\n\n    z = { key: key, data: data, left: null, right: null, parent: p };\n\n    if (!p)                        { this._root = z; }\n    else if (comp(p.key, z.key) < 0) { p.right = z; }\n    else                           { p.left= z; }\n\n    this.splay(z);\n    this._size++;\n    return z;\n  };\n\n\n  SplayTree.prototype.find = function find (key) {\n    var z  = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if    (cmp < 0) { z = z.right; }\n      else if (cmp > 0) { z = z.left; }\n      else            { return z; }\n    }\n    return null;\n  };\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param{Key} key\n   * @return {boolean} true/false\n   */\n  SplayTree.prototype.contains = function contains (key) {\n    var node     = this._root;\n    var comparator = this._compare;\n    while (node){\n      var cmp = comparator(key, node.key);\n      if    (cmp === 0) { return true; }\n      else if (cmp < 0) { node = node.left; }\n      else              { node = node.right; }\n    }\n\n    return false;\n  };\n\n\n  SplayTree.prototype.remove = function remove (key) {\n    var z = this.find(key);\n\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.removeNode = function removeNode (z) {\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.erase = function erase (key) {\n    var z = this.find(key);\n    if (!z) { return; }\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) { sMax.right = t; }\n      else { this._root = t; }\n      t.parent = sMax;\n    }\n\n    this._size--;\n  };\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  SplayTree.prototype.pop = function pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) { node = node.left; }\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  };\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.next = function next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) { successor = successor.left; }\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  };\n\n\n  /**\n   * Predecessor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.prev = function prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) { predecessor = predecessor.right; }\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  };\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param{forEachCallback} callback\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.forEach = function forEach (callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return this;\n  };\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param{Key}    low\n   * @param{Key}    high\n   * @param{Function} fn\n   * @param{*?}     ctx\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.range = function range (low, high, fn, ctx) {\n      var this$1 = this;\n\n    var Q = [];\n    var compare = this._compare;\n    var node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) { return this$1; } // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  SplayTree.prototype.keys = function keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  SplayTree.prototype.values = function values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns node at given index\n   * @param{number} index\n   * @return {?Node}\n   */\n  SplayTree.prototype.at = function at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) { return current; }\n          i++;\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param{Array<Key>}  keys\n   * @param{Array<Value>}[values]\n   * @param{Boolean}     [presort=false] Pre-sort keys and values, using\n   *                                       tree's comparator. Sorting is done\n   *                                       in-place\n   * @return {AVLTree}\n   */\n  SplayTree.prototype.load = function load (keys, values, presort) {\n      if ( keys === void 0 ) keys = [];\n      if ( values === void 0 ) values = [];\n      if ( presort === void 0 ) presort = false;\n\n    if (this._size !== 0) { throw new Error('bulk-load: tree is not empty'); }\n    var size = keys.length;\n    if (presort) { sort(keys, values, 0, size - 1, this._compare); }\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  };\n\n\n  SplayTree.prototype.min = function min () {\n    var node = this.minNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n\n  SplayTree.prototype.max = function max () {\n    var node = this.maxNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n  SplayTree.prototype.isEmpty = function isEmpty () { return this._root === null; };\n  prototypeAccessors.size.get = function () { return this._size; };\n\n\n  /**\n   * Create a tree and load it with items\n   * @param{Array<Key>}        keys\n   * @param{Array<Value>?}      [values]\n\n   * @param{Function?}          [comparator]\n   * @param{Boolean?}           [presort=false] Pre-sort keys and values, using\n   *                                             tree's comparator. Sorting is done\n   *                                             in-place\n   * @param{Boolean?}           [noDuplicates=false] Allow duplicates\n   * @return {SplayTree}\n   */\n  SplayTree.createTree = function createTree (keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  };\n\n  Object.defineProperties( SplayTree.prototype, prototypeAccessors );\n\n\n  function loadRecursive (parent, keys, values, start, end) {\n    var size = end - start;\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key    = keys[middle];\n      var data   = values[middle];\n      var node   = { key: key, data: data, parent: parent };\n      node.left    = loadRecursive(node, keys, values, start, middle);\n      node.right   = loadRecursive(node, keys, values, middle + 1, end);\n      return node;\n    }\n    return null;\n  }\n\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) { return; }\n\n    var pivot = keys[(left + right) >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do { i++; } while (compare(keys[i], pivot) < 0);\n      do { j--; } while (compare(keys[j], pivot) > 0);\n      if (i >= j) { break; }\n\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values,  left,     j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  var NORMAL               = 0;\n  var NON_CONTRIBUTING     = 1;\n  var SAME_TRANSITION      = 2;\n  var DIFFERENT_TRANSITION = 3;\n\n  var INTERSECTION = 0;\n  var UNION        = 1;\n  var DIFFERENCE   = 2;\n  var XOR          = 3;\n\n  /**\n   * @param  {SweepEvent} event\n   * @param  {SweepEvent} prev\n   * @param  {Operation} operation\n   */\n  function computeFields (event, prev, operation) {\n    // compute inOut and otherInOut fields\n    if (prev === null) {\n      event.inOut      = false;\n      event.otherInOut = true;\n\n    // previous line segment in sweepline belongs to the same polygon\n    } else {\n      if (event.isSubject === prev.isSubject) {\n        event.inOut      = !prev.inOut;\n        event.otherInOut = prev.otherInOut;\n\n      // previous line segment in sweepline belongs to the clipping polygon\n      } else {\n        event.inOut      = !prev.otherInOut;\n        event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n      }\n\n      // compute prevInResult field\n      if (prev) {\n        event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n          ? prev.prevInResult : prev;\n      }\n    }\n\n    // check if the line segment belongs to the Boolean operation\n    event.inResult = inResult(event, operation);\n  }\n\n\n  /* eslint-disable indent */\n  function inResult(event, operation) {\n    switch (event.type) {\n      case NORMAL:\n        switch (operation) {\n          case INTERSECTION:\n            return !event.otherInOut;\n          case UNION:\n            return event.otherInOut;\n          case DIFFERENCE:\n            // return (event.isSubject && !event.otherInOut) ||\n            //         (!event.isSubject && event.otherInOut);\n            return (event.isSubject && event.otherInOut) ||\n                    (!event.isSubject && !event.otherInOut);\n          case XOR:\n            return true;\n        }\n        break;\n      case SAME_TRANSITION:\n        return operation === INTERSECTION || operation === UNION;\n      case DIFFERENT_TRANSITION:\n        return operation === DIFFERENCE;\n      case NON_CONTRIBUTING:\n        return false;\n    }\n    return false;\n  }\n  /* eslint-enable indent */\n\n  var SweepEvent = function SweepEvent (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isBelow = function isBelow (p) {\n    var p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isAbove = function isAbove (p) {\n    return !this.isBelow(p);\n  };\n\n\n  /**\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isVertical = function isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  };\n\n\n  SweepEvent.prototype.clone = function clone () {\n    var copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult     = this.inResult;\n    copy.prevInResult = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut        = this.inOut;\n    copy.otherInOut   = this.otherInOut;\n\n    return copy;\n  };\n\n  function equals(p1, p2) {\n    if (p1[0] === p2[0]) {\n      if (p1[1] === p2[1]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  // const EPSILON = 1e-9;\n  // const abs = Math.abs;\n  // TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n  // Precision problem.\n  //\n  // module.exports = function equals(p1, p2) {\n  //   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n  // };\n\n  /**\n   * Signed area of the triangle (p0, p1, p2)\n   * @param  {Array.<Number>} p0\n   * @param  {Array.<Number>} p1\n   * @param  {Array.<Number>} p2\n   * @return {Number}\n   */\n  function signedArea(p0, p1, p2) {\n    return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n  }\n\n  /**\n   * @param  {SweepEvent} e1\n   * @param  {SweepEvent} e2\n   * @return {Number}\n   */\n  function compareEvents(e1, e2) {\n    var p1 = e1.point;\n    var p2 = e2.point;\n\n    // Different x-coordinate\n    if (p1[0] > p2[0]) { return 1; }\n    if (p1[0] < p2[0]) { return -1; }\n\n    // Different points, but same x-coordinate\n    // Event with lower y-coordinate is processed first\n    if (p1[1] !== p2[1]) { return p1[1] > p2[1] ? 1 : -1; }\n\n    return specialCases(e1, e2, p1, p2);\n  }\n\n\n  /* eslint-disable no-unused-vars */\n  function specialCases(e1, e2, p1, p2) {\n    // Same coordinates, but one is a left endpoint and the other is\n    // a right endpoint. The right endpoint is processed first\n    if (e1.left !== e2.left)\n      { return e1.left ? 1 : -1; }\n\n    // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n    // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n    // Same coordinates, both events\n    // are left endpoints or right endpoints.\n    // not collinear\n    if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n      // the event associate to the bottom segment is processed first\n      return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n    }\n\n    return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n  }\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * @param  {SweepEvent} se\n   * @param  {Array.<Number>} p\n   * @param  {Queue} queue\n   * @return {Queue}\n   */\n  function divideSegment(se, p, queue)  {\n    var r = new SweepEvent(p, false, se,            se.isSubject);\n    var l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n    /* eslint-disable no-console */\n    if (equals(se.point, se.otherEvent.point)) {\n\n      console.warn('what is that, a collapsed segment?', se);\n    }\n    /* eslint-enable no-console */\n\n    r.contourId = l.contourId = se.contourId;\n\n    // avoid a rounding error. The left event would be processed after the right event\n    if (compareEvents(l, se.otherEvent) > 0) {\n      se.otherEvent.left = true;\n      l.left = false;\n    }\n\n    // avoid a rounding error. The left event would be processed after the right event\n    // if (compareEvents(se, r) > 0) {}\n\n    se.otherEvent.otherEvent = l;\n    se.otherEvent = r;\n\n    queue.push(l);\n    queue.push(r);\n\n    return queue;\n  }\n\n  //const EPS = 1e-9;\n\n  /**\n   * Finds the magnitude of the cross product of two vectors (if we pretend\n   * they're in three dimensions)\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The magnitude of the cross product\n   */\n  function crossProduct(a, b) {\n    return (a[0] * b[1]) - (a[1] * b[0]);\n  }\n\n  /**\n   * Finds the dot product of two vectors.\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The dot product\n   */\n  function dotProduct(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]);\n  }\n\n  /**\n   * Finds the intersection (if any) between two line segments a and b, given the\n   * line segments' end points a1, a2 and b1, b2.\n   *\n   * This algorithm is based on Schneider and Eberly.\n   * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n   * Page 244.\n   *\n   * @param {Array.<Number>} a1 point of first line\n   * @param {Array.<Number>} a2 point of first line\n   * @param {Array.<Number>} b1 point of second line\n   * @param {Array.<Number>} b2 point of second line\n   * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n   *                                         (meaning connected segments) as\n   *                                         intersections\n   * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n   * intersection. If they overlap, the two end points of the overlapping segment.\n   * Otherwise, null.\n   */\n  function intersection (a1, a2, b1, b2, noEndpointTouch) {\n    // The algorithm expects our lines in the form P + sd, where P is a point,\n    // s is on the interval [0, 1], and d is a vector.\n    // We are passed two points. P can be the first point of each pair. The\n    // vector, then, could be thought of as the distance (in x and y components)\n    // from the first point to the second point.\n    // So first, let's make our vectors:\n    var va = [a2[0] - a1[0], a2[1] - a1[1]];\n    var vb = [b2[0] - b1[0], b2[1] - b1[1]];\n    // We also define a function to convert back to regular point form:\n\n    /* eslint-disable arrow-body-style */\n\n    function toPoint(p, s, d) {\n      return [\n        p[0] + s * d[0],\n        p[1] + s * d[1]\n      ];\n    }\n\n    /* eslint-enable arrow-body-style */\n\n    // The rest is pretty much a straight port of the algorithm.\n    var e = [b1[0] - a1[0], b1[1] - a1[1]];\n    var kross    = crossProduct(va, vb);\n    var sqrKross = kross * kross;\n    var sqrLenA  = dotProduct(va, va);\n    //const sqrLenB  = dotProduct(vb, vb);\n\n    // Check for line intersection. This works because of the properties of the\n    // cross product -- specifically, two vectors are parallel if and only if the\n    // cross product is the 0 vector. The full calculation involves relative error\n    // to account for possible very small line segments. See Schneider & Eberly\n    // for details.\n    if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n      // If they're not parallel, then (because these are line segments) they\n      // still might not actually intersect. This code checks that the\n      // intersection point of the lines is actually on both line segments.\n      var s = crossProduct(e, vb) / kross;\n      if (s < 0 || s > 1) {\n        // not on line segment a\n        return null;\n      }\n      var t = crossProduct(e, va) / kross;\n      if (t < 0 || t > 1) {\n        // not on line segment b\n        return null;\n      }\n      if (s === 0 || s === 1) {\n        // on an endpoint of line segment a\n        return noEndpointTouch ? null : [toPoint(a1, s, va)];\n      }\n      if (t === 0 || t === 1) {\n        // on an endpoint of line segment b\n        return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n      }\n      return [toPoint(a1, s, va)];\n    }\n\n    // If we've reached this point, then the lines are either parallel or the\n    // same, but the segments could overlap partially or fully, or not at all.\n    // So we need to find the overlap, if any. To do that, we can use e, which is\n    // the (vector) difference between the two initial points. If this is parallel\n    // with the line itself, then the two lines are the same line, and there will\n    // be overlap.\n    //const sqrLenE = dotProduct(e, e);\n    kross = crossProduct(e, va);\n    sqrKross = kross * kross;\n\n    if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n    // Lines are just parallel, not the same. No overlap.\n      return null;\n    }\n\n    var sa = dotProduct(va, e) / sqrLenA;\n    var sb = sa + dotProduct(va, vb) / sqrLenA;\n    var smin = Math.min(sa, sb);\n    var smax = Math.max(sa, sb);\n\n    // this is, essentially, the FindIntersection acting on floats from\n    // Schneider & Eberly, just inlined into this function.\n    if (smin <= 1 && smax >= 0) {\n\n      // overlap on an end point\n      if (smin === 1) {\n        return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n      }\n\n      if (smax === 0) {\n        return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n      }\n\n      if (noEndpointTouch && smin === 0 && smax === 1) { return null; }\n\n      // There's overlap on a segment -- two points of intersection. Return both.\n      return [\n        toPoint(a1, smin > 0 ? smin : 0, va),\n        toPoint(a1, smax < 1 ? smax : 1, va)\n      ];\n    }\n\n    return null;\n  }\n\n  /**\n   * @param  {SweepEvent} se1\n   * @param  {SweepEvent} se2\n   * @param  {Queue}      queue\n   * @return {Number}\n   */\n  function possibleIntersection (se1, se2, queue) {\n    // that disallows self-intersecting polygons,\n    // did cost us half a day, so I'll leave it\n    // out of respect\n    // if (se1.isSubject === se2.isSubject) return;\n    var inter = intersection(\n      se1.point, se1.otherEvent.point,\n      se2.point, se2.otherEvent.point\n    );\n\n    var nintersections = inter ? inter.length : 0;\n    if (nintersections === 0) { return 0; } // no intersection\n\n    // the line segments intersect at an endpoint of both line segments\n    if ((nintersections === 1) &&\n        (equals(se1.point, se2.point) ||\n         equals(se1.otherEvent.point, se2.otherEvent.point))) {\n      return 0;\n    }\n\n    if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n      // if(se1.contourId === se2.contourId){\n      // console.warn('Edges of the same polygon overlap',\n      //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n      // }\n      //throw new Error('Edges of the same polygon overlap');\n      return 0;\n    }\n\n    // The line segments associated to se1 and se2 intersect\n    if (nintersections === 1) {\n\n      // if the intersection point is not an endpoint of se1\n      if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n        divideSegment(se1, inter[0], queue);\n      }\n\n      // if the intersection point is not an endpoint of se2\n      if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n        divideSegment(se2, inter[0], queue);\n      }\n      return 1;\n    }\n\n    // The line segments associated to se1 and se2 overlap\n    var events        = [];\n    var leftCoincide  = false;\n    var rightCoincide = false;\n\n    if (equals(se1.point, se2.point)) {\n      leftCoincide = true; // linked\n    } else if (compareEvents(se1, se2) === 1) {\n      events.push(se2, se1);\n    } else {\n      events.push(se1, se2);\n    }\n\n    if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n      rightCoincide = true;\n    } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n      events.push(se2.otherEvent, se1.otherEvent);\n    } else {\n      events.push(se1.otherEvent, se2.otherEvent);\n    }\n\n    if ((leftCoincide && rightCoincide) || leftCoincide) {\n      // both line segments are equal or share the left endpoint\n      se2.type = NON_CONTRIBUTING;\n      se1.type = (se2.inOut === se1.inOut)\n        ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n      if (leftCoincide && !rightCoincide) {\n        // honestly no idea, but changing events selection from [2, 1]\n        // to [0, 1] fixes the overlapping self-intersecting polygons issue\n        divideSegment(events[1].otherEvent, events[0].point, queue);\n      }\n      return 2;\n    }\n\n    // the line segments share the right endpoint\n    if (rightCoincide) {\n      divideSegment(events[0], events[1].point, queue);\n      return 3;\n    }\n\n    // no line segment includes totally the other one\n    if (events[0] !== events[3].otherEvent) {\n      divideSegment(events[0], events[1].point, queue);\n      divideSegment(events[1], events[2].point, queue);\n      return 3;\n    }\n\n    // one line segment includes the other one\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[3].otherEvent, events[2].point, queue);\n\n    return 3;\n  }\n\n  /**\n   * @param  {SweepEvent} le1\n   * @param  {SweepEvent} le2\n   * @return {Number}\n   */\n  function compareSegments(le1, le2) {\n    if (le1 === le2) { return 0; }\n\n    // Segments are not collinear\n    if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n      signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n      // If they share their left endpoint use the right endpoint to sort\n      if (equals(le1.point, le2.point)) { return le1.isBelow(le2.otherEvent.point) ? -1 : 1; }\n\n      // Different left endpoint: use the left endpoint to sort\n      if (le1.point[0] === le2.point[0]) { return le1.point[1] < le2.point[1] ? -1 : 1; }\n\n      // has the line segment associated to e1 been inserted\n      // into S after the line segment associated to e2 ?\n      if (compareEvents(le1, le2) === 1) { return le2.isAbove(le1.point) ? -1 : 1; }\n\n      // The line segment associated to e2 has been inserted\n      // into S after the line segment associated to e1\n      return le1.isBelow(le2.point) ? -1 : 1;\n    }\n\n    if (le1.isSubject === le2.isSubject) { // same polygon\n      var p1 = le1.point, p2 = le2.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n        p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n        if (p1[0] === p2[0] && p1[1] === p2[1]) { return 0; }\n        else { return le1.contourId > le2.contourId ? 1 : -1; }\n      }\n    } else { // Segments are collinear, but belong to separate polygons\n      return le1.isSubject ? -1 : 1;\n    }\n\n    return compareEvents(le1, le2) === 1 ? 1 : -1;\n  }\n\n  function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n    var sweepLine = new SplayTree(compareSegments);\n    var sortedEvents = [];\n\n    var rightbound = Math.min(sbbox[2], cbbox[2]);\n\n    var prev, next, begin;\n\n    while (eventQueue.length !== 0) {\n      var event = eventQueue.pop();\n      sortedEvents.push(event);\n\n      // optimization by bboxes for intersection and difference goes here\n      if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n          (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n        break;\n      }\n\n      if (event.left) {\n        next  = prev = sweepLine.insert(event);\n        begin = sweepLine.minNode();\n\n        if (prev !== begin) { prev = sweepLine.prev(prev); }\n        else                { prev = null; }\n\n        next = sweepLine.next(next);\n\n        var prevEvent = prev ? prev.key : null;\n        var prevprevEvent = (void 0);\n        computeFields(event, prevEvent, operation);\n        if (next) {\n          if (possibleIntersection(event, next.key, eventQueue) === 2) {\n            computeFields(event, prevEvent, operation);\n            computeFields(event, next.key, operation);\n          }\n        }\n\n        if (prev) {\n          if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n            var prevprev = prev;\n            if (prevprev !== begin) { prevprev = sweepLine.prev(prevprev); }\n            else                    { prevprev = null; }\n\n            prevprevEvent = prevprev ? prevprev.key : null;\n            computeFields(prevEvent, prevprevEvent, operation);\n            computeFields(event,     prevEvent,     operation);\n          }\n        }\n      } else {\n        event = event.otherEvent;\n        next = prev = sweepLine.find(event);\n\n        if (prev && next) {\n\n          if (prev !== begin) { prev = sweepLine.prev(prev); }\n          else                { prev = null; }\n\n          next = sweepLine.next(next);\n          sweepLine.remove(event);\n\n          if (next && prev) {\n            possibleIntersection(prev.key, next.key, eventQueue);\n          }\n        }\n      }\n    }\n    return sortedEvents;\n  }\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<SweepEvent>}\n   */\n  function orderEvents(sortedEvents) {\n    var event, i, len, tmp;\n    var resultEvents = [];\n    for (i = 0, len = sortedEvents.length; i < len; i++) {\n      event = sortedEvents[i];\n      if ((event.left && event.inResult) ||\n        (!event.left && event.otherEvent.inResult)) {\n        resultEvents.push(event);\n      }\n    }\n    // Due to overlapping edges the resultEvents array can be not wholly sorted\n    var sorted = false;\n    while (!sorted) {\n      sorted = true;\n      for (i = 0, len = resultEvents.length; i < len; i++) {\n        if ((i + 1) < len &&\n          compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n          tmp = resultEvents[i];\n          resultEvents[i] = resultEvents[i + 1];\n          resultEvents[i + 1] = tmp;\n          sorted = false;\n        }\n      }\n    }\n\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      event.pos = i;\n    }\n\n    // imagine, the right event is found in the beginning of the queue,\n    // when his left counterpart is not marked yet\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      if (!event.left) {\n        tmp = event.pos;\n        event.pos = event.otherEvent.pos;\n        event.otherEvent.pos = tmp;\n      }\n    }\n\n    return resultEvents;\n  }\n\n\n  /**\n   * @param  {Number} pos\n   * @param  {Array.<SweepEvent>} resultEvents\n   * @param  {Object>}    processed\n   * @return {Number}\n   */\n  function nextPos(pos, resultEvents, processed, origIndex) {\n    var newPos = pos + 1;\n    var length = resultEvents.length;\n    if (newPos > length - 1) { return pos - 1; }\n    var p  = resultEvents[pos].point;\n    var p1 = resultEvents[newPos].point;\n\n\n    // while in range and not the current one by value\n    while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n      if (!processed[newPos]) {\n        return newPos;\n      } else   {\n        newPos++;\n      }\n      p1 = resultEvents[newPos].point;\n    }\n\n    newPos = pos - 1;\n\n    while (processed[newPos] && newPos >= origIndex) {\n      newPos--;\n    }\n    return newPos;\n  }\n\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<*>} polygons\n   */\n  function connectEdges(sortedEvents, operation) {\n    var i, len;\n    var resultEvents = orderEvents(sortedEvents);\n\n    // \"false\"-filled array\n    var processed = {};\n    var result = [];\n    var event;\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if (processed[i]) { continue; }\n      var contour = [[]];\n\n      if (!resultEvents[i].isExteriorRing) {\n        if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n          result.push(contour);\n        } else if (result.length === 0) {\n          result.push([[contour]]);\n        } else {\n          result[result.length - 1].push(contour[0]);\n        }\n      } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n        result[result.length - 1].push(contour[0]);\n      } else {\n        result.push(contour);\n      }\n\n      var ringId = result.length - 1;\n      var pos = i;\n\n      var initial = resultEvents[i].point;\n      contour[0].push(initial);\n\n      while (pos >= i) {\n        event = resultEvents[pos];\n        processed[pos] = true;\n\n        if (event.left) {\n          event.resultInOut = false;\n          event.contourId   = ringId;\n        } else {\n          event.otherEvent.resultInOut = true;\n          event.otherEvent.contourId   = ringId;\n        }\n\n        pos = event.pos;\n        processed[pos] = true;\n        contour[0].push(resultEvents[pos].point);\n        pos = nextPos(pos, resultEvents, processed, i);\n      }\n\n      pos = pos === -1 ? i : pos;\n\n      event = resultEvents[pos];\n      processed[pos] = processed[event.pos] = true;\n      event.otherEvent.resultInOut = true;\n      event.otherEvent.contourId   = ringId;\n    }\n\n    // Handle if the result is a polygon (eg not multipoly)\n    // Commented it again, let's see what do we mean by that\n    // if (result.length === 1) result = result[0];\n    return result;\n  }\n\n  var tinyqueue = TinyQueue;\n  var default_1 = TinyQueue;\n\n  function TinyQueue(data, compare) {\n      var this$1 = this;\n\n      if (!(this instanceof TinyQueue)) { return new TinyQueue(data, compare); }\n\n      this.data = data || [];\n      this.length = this.data.length;\n      this.compare = compare || defaultCompare;\n\n      if (this.length > 0) {\n          for (var i = (this.length >> 1) - 1; i >= 0; i--) { this$1._down(i); }\n      }\n  }\n\n  function defaultCompare(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  TinyQueue.prototype = {\n\n      push: function (item) {\n          this.data.push(item);\n          this.length++;\n          this._up(this.length - 1);\n      },\n\n      pop: function () {\n          if (this.length === 0) { return undefined; }\n\n          var top = this.data[0];\n          this.length--;\n\n          if (this.length > 0) {\n              this.data[0] = this.data[this.length];\n              this._down(0);\n          }\n          this.data.pop();\n\n          return top;\n      },\n\n      peek: function () {\n          return this.data[0];\n      },\n\n      _up: function (pos) {\n          var data = this.data;\n          var compare = this.compare;\n          var item = data[pos];\n\n          while (pos > 0) {\n              var parent = (pos - 1) >> 1;\n              var current = data[parent];\n              if (compare(item, current) >= 0) { break; }\n              data[pos] = current;\n              pos = parent;\n          }\n\n          data[pos] = item;\n      },\n\n      _down: function (pos) {\n          var this$1 = this;\n\n          var data = this.data;\n          var compare = this.compare;\n          var halfLength = this.length >> 1;\n          var item = data[pos];\n\n          while (pos < halfLength) {\n              var left = (pos << 1) + 1;\n              var right = left + 1;\n              var best = data[left];\n\n              if (right < this$1.length && compare(data[right], best) < 0) {\n                  left = right;\n                  best = data[right];\n              }\n              if (compare(best, item) >= 0) { break; }\n\n              data[pos] = best;\n              pos = left;\n          }\n\n          data[pos] = item;\n      }\n  };\n  tinyqueue.default = default_1;\n\n  var max = Math.max;\n  var min = Math.min;\n\n  var contourId = 0;\n\n\n  function processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n    var i, len, s1, s2, e1, e2;\n    for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n      s1 = contourOrHole[i];\n      s2 = contourOrHole[i + 1];\n      e1 = new SweepEvent(s1, false, undefined, isSubject);\n      e2 = new SweepEvent(s2, false, e1,        isSubject);\n      e1.otherEvent = e2;\n\n      if (s1[0] === s2[0] && s1[1] === s2[1]) {\n        continue; // skip collapsed edges, or it breaks\n      }\n\n      e1.contourId = e2.contourId = depth;\n      if (!isExteriorRing) {\n        e1.isExteriorRing = false;\n        e2.isExteriorRing = false;\n      }\n      if (compareEvents(e1, e2) > 0) {\n        e2.left = true;\n      } else {\n        e1.left = true;\n      }\n\n      var x = s1[0], y = s1[1];\n      bbox[0] = min(bbox[0], x);\n      bbox[1] = min(bbox[1], y);\n      bbox[2] = max(bbox[2], x);\n      bbox[3] = max(bbox[3], y);\n\n      // Pushing it so the queue is sorted from left to right,\n      // with object on the left having the highest priority.\n      Q.push(e1);\n      Q.push(e2);\n    }\n  }\n\n\n  function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n    var eventQueue = new tinyqueue(null, compareEvents);\n    var polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n    for (i = 0, ii = subject.length; i < ii; i++) {\n      polygonSet = subject[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n      }\n    }\n\n    for (i = 0, ii = clipping.length; i < ii; i++) {\n      polygonSet = clipping[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (operation === DIFFERENCE) { isExteriorRing = false; }\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n      }\n    }\n\n    return eventQueue;\n  }\n\n  var EMPTY = [];\n\n\n  function trivialOperation(subject, clipping, operation) {\n    var result = null;\n    if (subject.length * clipping.length === 0) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = (subject.length === 0) ? clipping : subject;\n      }\n    }\n    return result;\n  }\n\n\n  function compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n    var result = null;\n    if (sbbox[0] > cbbox[2] ||\n        cbbox[0] > sbbox[2] ||\n        sbbox[1] > cbbox[3] ||\n        cbbox[1] > sbbox[3]) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = subject.concat(clipping);\n      }\n    }\n    return result;\n  }\n\n\n  function boolean(subject, clipping, operation) {\n    if (typeof subject[0][0][0] === 'number') {\n      subject = [subject];\n    }\n    if (typeof clipping[0][0][0] === 'number') {\n      clipping = [clipping];\n    }\n    var trivial = trivialOperation(subject, clipping, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n    var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    //console.time('fill queue');\n    var eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('fill queue');\n\n    trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    //console.time('subdivide edges');\n    var sortedEvents = subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('subdivide edges');\n\n    //console.time('connect vertices');\n    var result = connectEdges(sortedEvents, operation);\n    //console.timeEnd('connect vertices');\n    return result;\n  }\n\n  function union (subject, clipping) {\n    return boolean(subject, clipping, UNION);\n  }\n\n  function diff (subject, clipping) {\n    return boolean(subject, clipping, DIFFERENCE);\n  }\n\n  function xor (subject, clipping){\n    return boolean(subject, clipping, XOR);\n  }\n\n  function intersection$1 (subject, clipping) {\n    return boolean(subject, clipping, INTERSECTION);\n  }\n\n  /**\n   * @enum {Number}\n   */\n  var operations = { UNION: UNION, DIFFERENCE: DIFFERENCE, INTERSECTION: INTERSECTION, XOR: XOR };\n\n  exports.union = union;\n  exports.diff = diff;\n  exports.xor = xor;\n  exports.intersection = intersection$1;\n  exports.operations = operations;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=martinez.umd.js.map\n\n\n/***/ }),\n\n/***/ 5811:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar performActionOnAllFeaturePairs=function performActionOnAllFeaturePairs(FeatureCollection1,FeatureCollection2,action){var newGeojson={\"type\":\"FeatureCollection\",\"features\":[]};FeatureCollection1.features.forEach(function(poly1){FeatureCollection2.features.forEach(function(poly2){newGeojson.features.push(action(poly1,poly2));});});return newGeojson;};/* harmony default export */ __webpack_exports__[\"a\"] = (performActionOnAllFeaturePairs);\n\n/***/ }),\n\n/***/ 5812:\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(t,e){ true?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts={})}(this,function(t){\"use strict\";function e(){}function n(t){this.message=t||\"\"}function i(t){this.message=t||\"\"}function r(t){this.message=t||\"\"}function o(){}function s(t){return null===t?Mt:t.color}function a(t){return null===t?null:t.parent}function u(t,e){null!==t&&(t.color=e)}function l(t){return null===t?null:t.left}function c(t){return null===t?null:t.right}function p(){this.root_=null,this.size_=0}function h(){}function f(){this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}function g(){}function d(t){this.message=t||\"\"}function y(){this.array_=[]}\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,i=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;i=i<0?Math.max(n+i,0):Math.min(i,n);var r=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(r=r<0?Math.max(n+arguments[2],0):Math.min(r,n);i<r;)e[i]=t,++i;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var _=function(){};_.prototype.interfaces_=function(){return[]},_.prototype.getClass=function(){return _},_.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var m=function(t){function e(e){t.call(this,e),this.name=\"IllegalArgumentException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),v=function(){},I={MAX_VALUE:{configurable:!0}};v.isNaN=function(t){return Number.isNaN(t)},v.doubleToLongBits=function(t){return t},v.longBitsToDouble=function(t){return t},v.isInfinite=function(t){return!Number.isFinite(t)},I.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(v,I);var E=function(){},x=function(){},N=function(){},C=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},S={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};C.prototype.setOrdinate=function(t,e){switch(t){case C.X:this.x=e;break;case C.Y:this.y=e;break;case C.Z:this.z=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}},C.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!_.equalsWithTolerance(this.x,e.x,n)&&!!_.equalsWithTolerance(this.y,e.y,n)}},C.prototype.getOrdinate=function(t){switch(t){case C.X:return this.x;case C.Y:return this.y;case C.Z:return this.z}throw new m(\"Invalid ordinate index: \"+t)},C.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||v.isNaN(this.z))&&v.isNaN(t.z)},C.prototype.equals=function(t){return t instanceof C&&this.equals2D(t)},C.prototype.equalInZ=function(t,e){return _.equalsWithTolerance(this.z,t.z,e)},C.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},C.prototype.clone=function(){},C.prototype.copy=function(){return new C(this)},C.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},C.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},C.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},C.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this.x),t=37*t+C.hashCode(this.y)},C.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},C.prototype.interfaces_=function(){return[E,x,e]},C.prototype.getClass=function(){return C},C.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=v.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},S.DimensionalComparator.get=function(){return L},S.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},S.NULL_ORDINATE.get=function(){return v.NaN},S.X.get=function(){return 0},S.Y.get=function(){return 1},S.Z.get=function(){return 2},Object.defineProperties(C,S);var L=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new m(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=e}};L.prototype.compare=function(t,e){var n=t,i=e,r=L.compare(n.x,i.x);if(0!==r)return r;var o=L.compare(n.y,i.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return L.compare(n.z,i.z)},L.prototype.interfaces_=function(){return[N]},L.prototype.getClass=function(){return L},L.compare=function(t,e){return t<e?-1:t>e?1:v.isNaN(t)?v.isNaN(e)?0:-1:v.isNaN(e)?1:0};var b=function(){};b.prototype.create=function(){},b.prototype.interfaces_=function(){return[]},b.prototype.getClass=function(){return b};var w=function(){},O={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};w.prototype.interfaces_=function(){return[]},w.prototype.getClass=function(){return w},w.toLocationSymbol=function(t){switch(t){case w.EXTERIOR:return\"e\";case w.BOUNDARY:return\"b\";case w.INTERIOR:return\"i\";case w.NONE:return\"-\"}throw new m(\"Unknown location value: \"+t)},O.INTERIOR.get=function(){return 0},O.BOUNDARY.get=function(){return 1},O.EXTERIOR.get=function(){return 2},O.NONE.get=function(){return-1},Object.defineProperties(w,O);var T=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},R=function(){},P={LOG_10:{configurable:!0}};R.prototype.interfaces_=function(){return[]},R.prototype.getClass=function(){return R},R.log10=function(t){var e=Math.log(t);return v.isInfinite(e)?e:v.isNaN(e)?e:e/R.LOG_10},R.min=function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r},R.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],o=arguments[2];return i<r?r:i>o?o:i}},R.wrap=function(t,e){return t<0?e- -t%e:t%e},R.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=r;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},R.average=function(t,e){return(t+e)/2},P.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(R,P);var D=function(t){this.str=t};D.prototype.append=function(t){this.str+=t},D.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},D.prototype.toString=function(t){return this.str};var M=function(t){this.value=t};M.prototype.intValue=function(){return this.value},M.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},M.isNaN=function(t){return Number.isNaN(t)};var A=function(){};A.isWhitespace=function(t){return t<=32&&t>=0||127===t},A.toUpperCase=function(t){return t.toUpperCase()};var F=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var i=arguments[0];t.call(this,t.parse(i))}}else if(2===arguments.length){var r=arguments[0],o=arguments[1];this.init(r,o)}},G={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};F.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},F.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),i=F.magnitude(n._hi),r=F.TEN.pow(i);(n=n.divide(r)).gt(F.TEN)?(n=n.divide(F.TEN),i+=1):n.lt(F.ONE)&&(n=n.multiply(F.TEN),i-=1);for(var o=i+1,s=new D,a=F.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(\".\");var l=Math.trunc(n._hi);if(l<0)break;var c=!1,p=0;l>9?(c=!0,p=\"9\"):p=\"0\"+l,s.append(p),n=n.subtract(F.valueOf(l)).multiply(F.TEN),c&&n.selfAdd(F.TEN);var h=!0,f=F.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(h=!1),!h)break}return e[0]=i,s.toString()},F.prototype.sqr=function(){return this.multiply(this)},F.prototype.doubleValue=function(){return this._hi+this._lo},F.prototype.subtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},F.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},F.prototype.isZero=function(){return 0===this._hi&&0===this._lo},F.prototype.selfSubtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},F.prototype.getSpecialNumberString=function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},F.prototype.min=function(t){return this.le(t)?this:t},F.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null,c=null,p=null;return u=this._hi/n,l=F.SPLIT*u,r=l-u,p=F.SPLIT*n,r=l-r,o=u-r,s=p-n,c=u*n,s=p-s,a=n-s,p=r*s-c+r*a+o*s+o*a,l=(this._hi-c-p+this._lo-u*i)/n,p=u+l,this._hi=p,this._lo=u-p+l,this}},F.prototype.dump=function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"},F.prototype.divide=function(){if(arguments[0]instanceof F){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=F.SPLIT*o)-(e=s-o)),u=e*(i=(u=F.SPLIT*t._hi)-(i=u-t._hi))-(a=o*t._hi)+e*(r=t._hi-i)+n*i+n*r,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new F(u=o+s,o-u+s)}if(\"number\"==typeof arguments[0]){var l=arguments[0];return v.isNaN(l)?F.createNaN():F.copy(this).selfDivide(l,0)}},F.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},F.prototype.pow=function(t){if(0===t)return F.valueOf(1);var e=new F(this),n=F.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),(i/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},F.prototype.ceil=function(){if(this.isNaN())return F.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new F(t,e)},F.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},F.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},F.prototype.setValue=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},F.prototype.max=function(t){return this.ge(t)?this:t},F.prototype.sqrt=function(){if(this.isZero())return F.valueOf(0);if(this.isNegative())return F.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=F.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)},F.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,o=null,s=null,a=null;return r=this._hi+e,s=r-this._hi,o=r-s,o=e-s+(this._hi-o),a=o+this._lo,n=r+a,i=a+(r-n),this._hi=n+i,this._lo=i+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],c=null,p=null,h=null,f=null,g=null,d=null,y=null;f=this._hi+u,p=this._lo+l,g=f-(d=f-this._hi),h=p-(y=p-this._lo);var _=(c=f+(d=(g=u-d+(this._hi-g))+p))+(d=(h=l-y+(this._lo-h))+(d+(f-c))),m=d+(c-_);return this._hi=_,this._lo=m,this}},F.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null;r=(u=F.SPLIT*this._hi)-this._hi,l=F.SPLIT*n,r=u-r,o=this._hi-r,s=l-n;var c=(u=this._hi*n)+(l=r*(s=l-s)-u+r*(a=n-s)+o*s+o*a+(this._hi*i+this._lo*n)),p=l+(r=u-c);return this._hi=c,this._lo=p,this}},F.prototype.selfSqr=function(){return this.selfMultiply(this)},F.prototype.floor=function(){if(this.isNaN())return F.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new F(t,e)},F.prototype.negate=function(){return this.isNaN()?this:new F(-this._hi,-this._lo)},F.prototype.clone=function(){},F.prototype.multiply=function(){if(arguments[0]instanceof F){var t=arguments[0];return t.isNaN()?F.createNaN():F.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return v.isNaN(e)?F.createNaN():F.copy(this).selfMultiply(e,0)}},F.prototype.isNaN=function(){return v.isNaN(this._hi)},F.prototype.intValue=function(){return Math.trunc(this._hi)},F.prototype.toString=function(){var t=F.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},F.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(i<0)r=\"0.\"+F.stringOfChar(\"0\",-i)+n;else if(-1===n.indexOf(\".\")){var o=i-n.length;r=n+F.stringOfChar(\"0\",o)+\".0\"}return this.isNegative()?\"-\"+r:r},F.prototype.reciprocal=function(){var t=null,e=null,n=null,i=null,r=null,o=null,s=null,a=null;e=(r=1/this._hi)-(t=(o=F.SPLIT*r)-(t=o-r)),n=(a=F.SPLIT*this._hi)-this._hi;var u=r+(o=(1-(s=r*this._hi)-(a=t*(n=a-n)-s+t*(i=this._hi-n)+e*n+e*i)-r*this._lo)/this._hi);return new F(u,r-u+o)},F.prototype.toSciNotation=function(){if(this.isZero())return F.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=F.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new Error(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var o=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+o+i:o+i},F.prototype.abs=function(){return this.isNaN()?F.NaN:this.isNegative()?this.negate():new F(this)},F.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},F.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},F.prototype.add=function(){if(arguments[0]instanceof F){var t=arguments[0];return F.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return F.copy(this).selfAdd(e)}},F.prototype.init=function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof F){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._hi=n,this._lo=i}},F.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},F.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},F.prototype.trunc=function(){return this.isNaN()?F.NaN:this.isPositive()?this.floor():this.ceil()},F.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},F.prototype.interfaces_=function(){return[e,E,x]},F.prototype.getClass=function(){return F},F.sqr=function(t){return F.valueOf(t).selfMultiply(t)},F.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return F.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new F(e)}},F.sqrt=function(t){return F.valueOf(t).sqrt()},F.parse=function(t){for(var e=0,n=t.length;A.isWhitespace(t.charAt(e));)e++;var i=!1;if(e<n){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var o=new F,s=0,a=0,u=0;!(e>=n);){var l=t.charAt(e);if(e++,A.isDigit(l)){var c=l-\"0\";o.selfMultiply(F.TEN),o.selfAdd(c),s++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var p=t.substring(e);try{u=M.parseInt(p)}catch(e){throw e instanceof Error?new Error(\"Invalid exponent \"+p+\" in string \"+t):e}break}throw new Error(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=s}}var h=o,f=s-a-u;if(0===f)h=o;else if(f>0){var g=F.TEN.pow(f);h=o.divide(g)}else if(f<0){var d=F.TEN.pow(-f);h=o.multiply(d)}return i?h.negate():h},F.createNaN=function(){return new F(v.NaN,v.NaN)},F.copy=function(t){return new F(t)},F.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i},F.stringOfChar=function(t,e){for(var n=new D,i=0;i<e;i++)n.append(t);return n.toString()},G.PI.get=function(){return new F(3.141592653589793,1.2246467991473532e-16)},G.TWO_PI.get=function(){return new F(6.283185307179586,2.4492935982947064e-16)},G.PI_2.get=function(){return new F(1.5707963267948966,6.123233995736766e-17)},G.E.get=function(){return new F(2.718281828459045,1.4456468917292502e-16)},G.NaN.get=function(){return new F(v.NaN,v.NaN)},G.EPS.get=function(){return 1.23259516440783e-32},G.SPLIT.get=function(){return 134217729},G.MAX_PRINT_DIGITS.get=function(){return 32},G.TEN.get=function(){return F.valueOf(10)},G.ONE.get=function(){return F.valueOf(1)},G.SCI_NOT_EXPONENT_CHAR.get=function(){return\"E\"},G.SCI_NOT_ZERO.get=function(){return\"0.0E0\"},Object.defineProperties(F,G);var q=function(){},B={DP_SAFE_EPSILON:{configurable:!0}};q.prototype.interfaces_=function(){return[]},q.prototype.getClass=function(){return q},q.orientationIndex=function(t,e,n){var i=q.orientationIndexFilter(t,e,n);if(i<=1)return i;var r=F.valueOf(e.x).selfAdd(-t.x),o=F.valueOf(e.y).selfAdd(-t.y),s=F.valueOf(n.x).selfAdd(-e.x),a=F.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},q.signOfDet2x2=function(t,e,n,i){return t.multiply(i).selfSubtract(e.multiply(n)).signum()},q.intersection=function(t,e,n,i){var r=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(e.x).selfSubtract(t.x)),o=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(e.y).selfSubtract(t.y)),s=r.subtract(o),a=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),u=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u).selfDivide(s).doubleValue(),c=F.valueOf(t.x).selfAdd(F.valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),p=F.valueOf(e.x).selfSubtract(t.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),h=F.valueOf(e.y).selfSubtract(t.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),f=p.subtract(h).selfDivide(s).doubleValue(),g=F.valueOf(n.y).selfAdd(F.valueOf(i.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new C(c,g)},q.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=r-o;if(r>0){if(o<=0)return q.signum(s);i=r+o}else{if(!(r<0))return q.signum(s);if(o>=0)return q.signum(s);i=-r-o}var a=q.DP_SAFE_EPSILON*i;return s>=a||-s>=a?q.signum(s):2},q.signum=function(t){return t>0?1:t<0?-1:0},B.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(q,B);var V=function(){},U={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};U.X.get=function(){return 0},U.Y.get=function(){return 1},U.Z.get=function(){return 2},U.M.get=function(){return 3},V.prototype.setOrdinate=function(t,e,n){},V.prototype.size=function(){},V.prototype.getOrdinate=function(t,e){},V.prototype.getCoordinate=function(){},V.prototype.getCoordinateCopy=function(t){},V.prototype.getDimension=function(){},V.prototype.getX=function(t){},V.prototype.clone=function(){},V.prototype.expandEnvelope=function(t){},V.prototype.copy=function(){},V.prototype.getY=function(t){},V.prototype.toCoordinateArray=function(){},V.prototype.interfaces_=function(){return[x]},V.prototype.getClass=function(){return V},Object.defineProperties(V,U);var z=function(){},X=function(t){function e(){t.call(this,\"Projective point not representable on the Cartesian plane.\")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(z),Y=function(){};Y.arraycopy=function(t,e,n,i,r){for(var o=0,s=e;s<e+r;s++)n[i+o]=t[s],o++},Y.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]};var k=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.x=n,this.y=i,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var r=arguments[0],o=arguments[1];this.x=r.y*o.w-o.y*r.w,this.y=o.x*r.w-r.x*o.w,this.w=r.x*o.y-o.x*r.y}else if(arguments[0]instanceof C&&arguments[1]instanceof C){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2];this.x=u,this.y=l,this.w=c}else if(4===arguments.length){var p=arguments[0],h=arguments[1],f=arguments[2],g=arguments[3],d=p.y-h.y,y=h.x-p.x,_=p.x*h.y-h.x*p.y,m=f.y-g.y,v=g.x-f.x,I=f.x*g.y-g.x*f.y;this.x=y*I-v*_,this.y=m*_-d*I,this.w=d*v-m*y}};k.prototype.getY=function(){var t=this.y/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getX=function(){var t=this.x/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getCoordinate=function(){var t=new C;return t.x=this.getX(),t.y=this.getY(),t},k.prototype.interfaces_=function(){return[]},k.prototype.getClass=function(){return k},k.intersection=function(t,e,n,i){var r=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-i.y,u=i.x-n.x,l=n.x*i.y-i.x*n.y,c=r*u-a*o,p=(o*l-u*s)/c,h=(a*s-r*l)/c;if(v.isNaN(p)||v.isInfinite(p)||v.isNaN(h)||v.isInfinite(h))throw new X;return new C(p,h)};var j=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof C){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},H={serialVersionUID:{configurable:!0}};j.prototype.getArea=function(){return this.getWidth()*this.getHeight()},j.prototype.equals=function(t){if(!(t instanceof j))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},j.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new j;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,r=this._maxy<t._maxy?this._maxy:t._maxy;return new j(e,i,n,r)},j.prototype.isNull=function(){return this._maxx<this._minx},j.prototype.getMaxX=function(){return this._maxx},j.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof j){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&i>=this._miny&&i<=this._maxy)}},j.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof C){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||i>this._maxy||i<this._miny)}},j.prototype.getMinY=function(){return this._miny},j.prototype.getMinX=function(){return this._minx},j.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=i,this._maxy=i):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),i<this._miny&&(this._miny=i),i>this._maxy&&(this._maxy=i))}},j.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},j.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},j.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},j.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},j.prototype.toString=function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"},j.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},j.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},j.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},j.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},j.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof C){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},j.prototype.centre=function(){return this.isNull()?null:new C((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},j.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];r<o?(this._minx=r,this._maxx=o):(this._minx=o,this._maxx=r),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},j.prototype.getMaxY=function(){return this._maxy},j.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},j.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this._minx),t=37*t+C.hashCode(this._maxx),t=37*t+C.hashCode(this._miny),t=37*t+C.hashCode(this._maxy)},j.prototype.interfaces_=function(){return[E,e]},j.prototype.getClass=function(){return j},j.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(i.x,r.x),c=Math.max(i.x,r.x);return!(l>u)&&(!(c<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(i.y,r.y),c=Math.max(i.y,r.y),!(l>u)&&!(c<a)))}},H.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(j,H);var W={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/},K=function(t){this.geometryFactory=t||new _e};K.prototype.read=function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=W.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&((r=W.emptyTypeStr.exec(t))[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],Q[n]&&(e=Q[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},K.prototype.write=function(t){return this.extractGeometry(t)},K.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!J[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+\" EMPTY\":n+\"(\"+J[e].apply(this,[t])+\")\"};var J={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return J.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.point.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+J.linestring.apply(this,[t._shell])+\")\");for(var n=0,i=t._holes.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.polygon.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(\",\")}},Q={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(W.spaces);return this.geometryFactory.createPoint(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(W.parenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,o=t.trim().split(W.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(W.trimParens,\"$1\"),n=Q.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n._points),0===a?r=i:s.push(i);return this.geometryFactory.createPolygon(r,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(W.doubleParenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\")).trim().split(\"|\"),n=[],i=0,r=e.length;i<r;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}},Z=function(t){this.parser=new K(t)};Z.prototype.write=function(t){return this.parser.write(t)},Z.toLineString=function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"};var $=function(t){function e(e){t.call(this,e),this.name=\"RuntimeException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),tt=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}($),et=function(){};et.prototype.interfaces_=function(){return[]},et.prototype.getClass=function(){return et},et.shouldNeverReachHere=function(){if(0===arguments.length)et.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new tt(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},et.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],et.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new tt:new tt(e)},et.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],et.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new tt(\"Expected \"+t+\" but encountered \"+e+(null!==n?\": \"+n:\"\"))};var nt=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new C,this._intPt[1]=new C,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},it={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};nt.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},nt.prototype.getTopologySummary=function(){var t=new D;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},nt.prototype.computeIntersection=function(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)},nt.prototype.getIntersectionNum=function(){return this._result},nt.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},nt.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},nt.prototype.setPrecisionModel=function(t){this._precisionModel=t},nt.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},nt.prototype.getIntersection=function(t){return this._intPt[t]},nt.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},nt.prototype.hasIntersection=function(){return this._result!==nt.NO_INTERSECTION},nt.prototype.getEdgeDistance=function(t,e){return nt.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},nt.prototype.isCollinear=function(){return this._result===nt.COLLINEAR_INTERSECTION},nt.prototype.toString=function(){return Z.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Z.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},nt.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},nt.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},nt.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},nt.prototype.interfaces_=function(){return[]},nt.prototype.getClass=function(){return nt},nt.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=i>r?i:r;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=i>r?s:a)||t.equals(e)||(o=Math.max(s,a))}return et.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o},nt.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=Math.sqrt(i*i+r*r);return et.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o},it.DONT_INTERSECT.get=function(){return 0},it.DO_INTERSECT.get=function(){return 1},it.COLLINEAR.get=function(){return 2},it.NO_INTERSECTION.get=function(){return 0},it.POINT_INTERSECTION.get=function(){return 1},it.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(nt,it);var rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new j(this._inputLines[0][0],this._inputLines[0][1]),n=new j(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2];if(this._isProper=!1,j.intersects(n,i,e)&&0===at.orientationIndex(n,i,e)&&0===at.orientationIndex(i,n,e))return this._isProper=!0,(e.equals(n)||e.equals(i))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.safeHCoordinateIntersection=function(t,n,i,r){var o=null;try{o=k.intersection(t,n,i,r)}catch(s){if(!(s instanceof X))throw s;o=e.nearestEndpoint(t,n,i,r)}return o},e.prototype.intersection=function(t,n,i,r){var o=this.intersectionWithNormalization(t,n,i,r);return this.isInSegmentEnvelopes(o)||(o=new C(e.nearestEndpoint(t,n,i,r))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,i){var r=t,o=Math.abs(r);return Math.abs(e)<o&&(r=e,o=Math.abs(e)),Math.abs(n)<o&&(r=n,o=Math.abs(n)),Math.abs(i)<o&&(r=i),r},e.prototype.checkDD=function(t,e,n,i,r){var o=q.intersection(t,e,n,i),s=this.isInSegmentEnvelopes(o);Y.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),r.distance(o)>1e-4&&Y.out.println(\"Distance = \"+r.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,i){var r=new C(t),o=new C(e),s=new C(n),a=new C(i),u=new C;this.normalizeToEnvCentre(r,o,s,a,u);var l=this.safeHCoordinateIntersection(r,o,s,a);return l.x+=u.x,l.y+=u.y,l},e.prototype.computeCollinearIntersection=function(e,n,i,r){var o=j.intersects(e,n,i),s=j.intersects(e,n,r),a=j.intersects(i,r,e),u=j.intersects(i,r,n);return o&&s?(this._intPt[0]=i,this._intPt[1]=r,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,i,r){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,p=n.x>i.x?n.x:i.x,h=n.y>i.y?n.y:i.y,f=((o>l?o:l)+(a<p?a:p))/2,g=((s>c?s:c)+(u<h?u:h))/2;r.x=f,r.y=g,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.computeIntersect=function(e,n,i,r){if(this._isProper=!1,!j.intersects(e,n,i,r))return t.NO_INTERSECTION;var o=at.orientationIndex(e,n,i),s=at.orientationIndex(e,n,r);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=at.orientationIndex(i,r,e),u=at.orientationIndex(i,r,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,i,r):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(i)||e.equals2D(r)?this._intPt[0]=e:n.equals2D(i)||n.equals2D(r)?this._intPt[0]=n:0===o?this._intPt[0]=new C(i):0===s?this._intPt[0]=new C(r):0===a?this._intPt[0]=new C(e):0===u&&(this._intPt[0]=new C(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,i,r)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,i){var r=t,o=at.distancePointLine(t,n,i),s=at.distancePointLine(e,n,i);return s<o&&(o=s,r=e),(s=at.distancePointLine(n,t,e))<o&&(o=s,r=n),(s=at.distancePointLine(i,t,e))<o&&(o=s,r=i),r},e}(nt),ot=function(){};ot.prototype.interfaces_=function(){return[]},ot.prototype.getClass=function(){return ot},ot.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ot.signOfDet2x2(i,r,o,s)},ot.signOfDet2x2=function(t,e,n,i){var r=null,o=null,s=null;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?e<=i||(r=-r,o=t,t=n,n=o,o=e,e=i,i=o):e<=-i?(r=-r,n=-n,i=-i):(o=t,t=-n,n=o,o=e,e=-i,i=o):i>0?-e<=i?(r=-r,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=i,i=o):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,o=-t,t=-n,n=o,o=-e,e=-i,i=o),t>0){if(!(n>0))return r;if(!(t<=n))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(i-=s*e)<0)return-r;if(i>e)return r;if(t>n+n){if(e<i+i)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(s=Math.floor(t/n),t-=s*n,(e-=s*i)<0)return r;if(e>i)return-r;if(n>t+t){if(i<e+e)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}};var st=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};st.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var r=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ot.signOfDet2x2(r,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},st.prototype.isPointInPolygon=function(){return this.getLocation()!==w.EXTERIOR},st.prototype.getLocation=function(){return this._isPointOnSegment?w.BOUNDARY:this._crossingCount%2==1?w.INTERIOR:w.EXTERIOR},st.prototype.isOnSegment=function(){return this._isPointOnSegment},st.prototype.interfaces_=function(){return[]},st.prototype.getClass=function(){return st},st.locatePointInRing=function(){if(arguments[0]instanceof C&&T(arguments[1],V)){for(var t=arguments[0],e=arguments[1],n=new st(t),i=new C,r=new C,o=1;o<e.size();o++)if(e.getCoordinate(o,i),e.getCoordinate(o-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof C&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new st(s),l=1;l<a.length;l++){var c=a[l],p=a[l-1];if(u.countSegment(c,p),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var at=function(){},ut={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};at.prototype.interfaces_=function(){return[]},at.prototype.getClass=function(){return at},at.orientationIndex=function(t,e,n){return q.orientationIndex(t,e,n)},at.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,o=t[i+1].y;e+=r*(t[i-1].y-o)}return e/2}if(T(arguments[0],V)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new C,l=new C,c=new C;s.getCoordinate(0,l),s.getCoordinate(1,c);var p=l.x;c.x-=p;for(var h=0,f=1;f<a-1;f++)u.y=l.y,l.x=c.x,l.y=c.y,s.getCoordinate(f+1,c),c.x-=p,h+=l.x*(u.y-c.y);return h/2}},at.distanceLineLine=function(t,e,n,i){if(t.equals(e))return at.distancePointLine(t,n,i);if(n.equals(i))return at.distancePointLine(i,t,e);var r=!1;if(j.intersects(t,e,n,i)){var o=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===o)r=!0;else{var s=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(r=!0)}}else r=!0;return r?R.min(at.distancePointLine(t,n,i),at.distancePointLine(e,n,i),at.distancePointLine(n,t,e),at.distancePointLine(i,t,e)):0},at.isPointInRing=function(t,e){return at.locatePointInRing(t,e)!==w.EXTERIOR},at.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new C;t.getCoordinate(0,i);for(var r=i.x,o=i.y,s=1;s<e;s++){t.getCoordinate(s,i);var a=i.x,u=i.y,l=a-r,c=u-o;n+=Math.sqrt(l*l+c*c),r=a,o=u}return n},at.isCCW=function(t){var e=t.length-1;if(e<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],i=0,r=1;r<=e;r++){var o=t[r];o.y>n.y&&(n=o,i=r)}var s=i;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==i);var a=i;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==i);var u=t[s],l=t[a];if(u.equals2D(n)||l.equals2D(n)||u.equals2D(l))return!1;var c=at.computeOrientation(u,n,l),p=!1;return p=0===c?u.x>l.x:c>0,p},at.locatePointInRing=function(t,e){return st.locatePointInRing(t,e)},at.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},at.computeOrientation=function(t,e,n){return at.orientationIndex(t,e,n)},at.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new m(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),i=0;i<e.length-1;i++){var r=at.distancePointLine(t,e[i],e[i+1]);r<n&&(n=r)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),l=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(l<=0)return o.distance(s);if(l>=1)return o.distance(a);var c=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(c)*Math.sqrt(u)}},at.isOnLine=function(t,e){for(var n=new rt,i=1;i<e.length;i++){var r=e[i-1],o=e[i];if(n.computeIntersection(t,r,o),n.hasIntersection())return!0}return!1},ut.CLOCKWISE.get=function(){return-1},ut.RIGHT.get=function(){return at.CLOCKWISE},ut.COUNTERCLOCKWISE.get=function(){return 1},ut.LEFT.get=function(){return at.COUNTERCLOCKWISE},ut.COLLINEAR.get=function(){return 0},ut.STRAIGHT.get=function(){return at.COLLINEAR},Object.defineProperties(at,ut);var lt=function(){};lt.prototype.filter=function(t){},lt.prototype.interfaces_=function(){return[]},lt.prototype.getClass=function(){return lt};var ct=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},pt={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};ct.prototype.isGeometryCollection=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION},ct.prototype.getFactory=function(){return this._factory},ct.prototype.getGeometryN=function(t){return this},ct.prototype.getArea=function(){return 0},ct.prototype.isRectangle=function(){return!1},ct.prototype.equals=function(){if(arguments[0]instanceof ct){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof ct))return!1;var n=e;return this.equalsExact(n)}},ct.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},ct.prototype.geometryChanged=function(){this.apply(ct.geometryChangedFilter)},ct.prototype.geometryChangedAction=function(){this._envelope=null},ct.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},ct.prototype.getLength=function(){return 0},ct.prototype.getNumGeometries=function(){return 1},ct.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,i)}},ct.prototype.getUserData=function(){return this._userData},ct.prototype.getSRID=function(){return this._SRID},ct.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},ct.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION)throw new m(\"This method does not support GeometryCollection arguments\")},ct.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},ct.prototype.norm=function(){var t=this.copy();return t.normalize(),t},ct.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},ct.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new j(this._envelope)},ct.prototype.setSRID=function(t){this._SRID=t},ct.prototype.setUserData=function(t){this._userData=t},ct.prototype.compare=function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),o=i.next(),s=r.compareTo(o);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0},ct.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},ct.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===ct.SORTINDEX_MULTIPOINT||this.getSortIndex()===ct.SORTINDEX_MULTILINESTRING||this.getSortIndex()===ct.SORTINDEX_MULTIPOLYGON},ct.prototype.interfaces_=function(){return[x,E,e]},ct.prototype.getClass=function(){return ct},ct.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},ct.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},pt.serialVersionUID.get=function(){return 0x799ea46522854c00},pt.SORTINDEX_POINT.get=function(){return 0},pt.SORTINDEX_MULTIPOINT.get=function(){return 1},pt.SORTINDEX_LINESTRING.get=function(){return 2},pt.SORTINDEX_LINEARRING.get=function(){return 3},pt.SORTINDEX_MULTILINESTRING.get=function(){return 4},pt.SORTINDEX_POLYGON.get=function(){return 5},pt.SORTINDEX_MULTIPOLYGON.get=function(){return 6},pt.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},pt.geometryChangedFilter.get=function(){return ht},Object.defineProperties(ct,pt);var ht=function(){};ht.interfaces_=function(){return[lt]},ht.filter=function(t){t.geometryChangedAction()};var ft=function(){};ft.prototype.filter=function(t){},ft.prototype.interfaces_=function(){return[]},ft.prototype.getClass=function(){return ft};var gt=function(){},dt={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};gt.prototype.isInBoundary=function(t){},gt.prototype.interfaces_=function(){return[]},gt.prototype.getClass=function(){return gt},dt.Mod2BoundaryNodeRule.get=function(){return yt},dt.EndPointBoundaryNodeRule.get=function(){return _t},dt.MultiValentEndPointBoundaryNodeRule.get=function(){return mt},dt.MonoValentEndPointBoundaryNodeRule.get=function(){return vt},dt.MOD2_BOUNDARY_RULE.get=function(){return new yt},dt.ENDPOINT_BOUNDARY_RULE.get=function(){return new _t},dt.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mt},dt.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new vt},dt.OGC_SFS_BOUNDARY_RULE.get=function(){return gt.MOD2_BOUNDARY_RULE},Object.defineProperties(gt,dt);var yt=function(){};yt.prototype.isInBoundary=function(t){return t%2==1},yt.prototype.interfaces_=function(){return[gt]},yt.prototype.getClass=function(){return yt};var _t=function(){};_t.prototype.isInBoundary=function(t){return t>0},_t.prototype.interfaces_=function(){return[gt]},_t.prototype.getClass=function(){return _t};var mt=function(){};mt.prototype.isInBoundary=function(t){return t>1},mt.prototype.interfaces_=function(){return[gt]},mt.prototype.getClass=function(){return mt};var vt=function(){};vt.prototype.isInBoundary=function(t){return 1===t},vt.prototype.interfaces_=function(){return[gt]},vt.prototype.getClass=function(){return vt};var It=function(){};It.prototype.add=function(){},It.prototype.addAll=function(){},It.prototype.isEmpty=function(){},It.prototype.iterator=function(){},It.prototype.size=function(){},It.prototype.toArray=function(){},It.prototype.remove=function(){},(n.prototype=new Error).name=\"IndexOutOfBoundsException\";var Et=function(){};Et.prototype.hasNext=function(){},Et.prototype.next=function(){},Et.prototype.remove=function(){};var xt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(It);(i.prototype=new Error).name=\"NoSuchElementException\";var Nt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,It]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ct(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new n;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;n<i;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(xt),Ct=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new i;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Et),St=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.ensureCapacity(n.length),this.add(n,i)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=!1,r=e.iterator();r.hasNext();)this.add(r.next(),n),i=!0;return i}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];return this.add(n,i,!0),!0}if(arguments[0]instanceof C&&\"boolean\"==typeof arguments[1]){var r=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(r))return null}t.prototype.add.call(this,r)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var l=0;l<a.length;l++)this.add(a[l],u);else for(var c=a.length-1;c>=0;c--)this.add(a[c],u);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(p>0){if(this.get(p-1).equals2D(h))return null}if(p<f){if(this.get(p).equals2D(h))return null}}}t.prototype.add.call(this,p,h)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new C(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(Nt),Lt=function(){},bt={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};bt.ForwardComparator.get=function(){return wt},bt.BidirectionalComparator.get=function(){return Ot},bt.coordArrayType.get=function(){return new Array(0).fill(null)},Lt.prototype.interfaces_=function(){return[]},Lt.prototype.getClass=function(){return Lt},Lt.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Lt.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(Lt.indexOf(i,e)<0)return i}return null},Lt.scroll=function(t,e){var n=Lt.indexOf(e,t);if(n<0)return null;var i=new Array(t.length).fill(null);Y.arraycopy(t,n,i,0,t.length-n),Y.arraycopy(t,0,i,t.length-n,n),Y.arraycopy(i,0,t,0,t.length)},Lt.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var s=0;s<i.length;s++)if(0!==o.compare(i[s],r[s]))return!1;return!0}},Lt.intersection=function(t,e){for(var n=new St,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},Lt.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Lt.removeRepeatedPoints=function(t){if(!Lt.hasRepeatedPoints(t))return t;return new St(t,!1).toCoordinateArray()},Lt.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},Lt.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,o=0;o<t.length;o++)null!==t[o]&&(i[r++]=t[o]);return i},Lt.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new C(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new C(i[r+u])},Lt.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},Lt.envelope=function(t){for(var e=new j,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Lt.toCoordinateArray=function(t){return t.toArray(Lt.coordArrayType)},Lt.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Lt.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Lt.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},Lt.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},Lt.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Lt.extract=function(t,e,n){e=R.clamp(e,0,t.length);var i=(n=R.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var o=0,s=e;s<=n;s++)r[o++]=t[s];return r},Object.defineProperties(Lt,bt);var wt=function(){};wt.prototype.compare=function(t,e){return Lt.compare(t,e)},wt.prototype.interfaces_=function(){return[N]},wt.prototype.getClass=function(){return wt};var Ot=function(){};Ot.prototype.compare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=Lt.compare(n,i);return Lt.isEqualReversed(n,i)?0:r},Ot.prototype.OLDcompare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=Lt.increasingDirection(n),o=Lt.increasingDirection(i),s=r>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(i[a]);if(0!==l)return l;s+=r,a+=o}return 0},Ot.prototype.interfaces_=function(){return[N]},Ot.prototype.getClass=function(){return Ot};var Tt=function(){};Tt.prototype.get=function(){},Tt.prototype.put=function(){},Tt.prototype.size=function(){},Tt.prototype.values=function(){},Tt.prototype.entrySet=function(){};var Rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Tt);(r.prototype=new Error).name=\"OperationNotSupported\",(o.prototype=new It).contains=function(){};var Pt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Dt(this)},e}(o),Dt=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new i;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new r},e}(Et),Mt=0;(p.prototype=new Rt).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},p.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do{if(n=r,(i=t.compareTo(r.key))<0)r=r.left;else{if(!(i>0)){var o=r.value;return r.value=e,o}r=r.right}}while(null!==r);var s={key:t,left:null,right:null,value:e,parent:n,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},p.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(a(t)===l(a(a(t)))){var e=c(a(a(t)));1===s(e)?(u(a(t),Mt),u(e,Mt),u(a(a(t)),1),t=a(a(t))):(t===c(a(t))&&(t=a(t),this.rotateLeft(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateRight(a(a(t))))}else{var n=l(a(a(t)));1===s(n)?(u(a(t),Mt),u(n,Mt),u(a(a(t)),1),t=a(a(t))):(t===l(a(t))&&(t=a(t),this.rotateRight(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateLeft(a(a(t))))}this.root_.color=Mt},p.prototype.values=function(){var t=new Nt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=p.successor(e));)t.add(e.value);return t},p.prototype.entrySet=function(){var t=new Pt,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=p.successor(e));)t.add(e);return t},p.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},p.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},p.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},p.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,i=t;null!==n&&i===n.right;)i=n,n=n.parent;return n},p.prototype.size=function(){return this.size_};var At=function(){};At.prototype.interfaces_=function(){return[]},At.prototype.getClass=function(){return At},h.prototype=new o,(f.prototype=new h).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},f.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},f.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},f.prototype.remove=function(t){throw new r},f.prototype.size=function(){return this.array_.length},f.prototype.isEmpty=function(){return 0===this.array_.length},f.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},f.prototype.iterator=function(){return new Ft(this)};var Ft=function(t){this.treeSet_=t,this.position_=0};Ft.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new i;return this.treeSet_.array_[this.position_++]},Ft.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Ft.prototype.remove=function(){throw new r};var Gt=function(){};Gt.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)i=function(t,e){return t.compareTo(e)},r.sort(i);else if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else if(3===arguments.length){(e=r.slice(arguments[1],arguments[2])).sort();var o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])}else if(4===arguments.length)for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])},Gt.asList=function(t){for(var e=new Nt,n=0,i=t.length;n<i;n++)e.add(t[n]);return e};var qt=function(){},Bt={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bt.P.get=function(){return 0},Bt.L.get=function(){return 1},Bt.A.get=function(){return 2},Bt.FALSE.get=function(){return-1},Bt.TRUE.get=function(){return-2},Bt.DONTCARE.get=function(){return-3},Bt.SYM_FALSE.get=function(){return\"F\"},Bt.SYM_TRUE.get=function(){return\"T\"},Bt.SYM_DONTCARE.get=function(){return\"*\"},Bt.SYM_P.get=function(){return\"0\"},Bt.SYM_L.get=function(){return\"1\"},Bt.SYM_A.get=function(){return\"2\"},qt.prototype.interfaces_=function(){return[]},qt.prototype.getClass=function(){return qt},qt.toDimensionSymbol=function(t){switch(t){case qt.FALSE:return qt.SYM_FALSE;case qt.TRUE:return qt.SYM_TRUE;case qt.DONTCARE:return qt.SYM_DONTCARE;case qt.P:return qt.SYM_P;case qt.L:return qt.SYM_L;case qt.A:return qt.SYM_A}throw new m(\"Unknown dimension value: \"+t)},qt.toDimensionValue=function(t){switch(A.toUpperCase(t)){case qt.SYM_FALSE:return qt.FALSE;case qt.SYM_TRUE:return qt.TRUE;case qt.SYM_DONTCARE:return qt.DONTCARE;case qt.SYM_P:return qt.P;case qt.SYM_L:return qt.L;case qt.SYM_A:return qt.A}throw new m(\"Unknown dimension symbol: \"+t)},Object.defineProperties(qt,Bt);var Vt=function(){};Vt.prototype.filter=function(t){},Vt.prototype.interfaces_=function(){return[]},Vt.prototype.getClass=function(){return Vt};var Ut=function(){};Ut.prototype.filter=function(t,e){},Ut.prototype.isDone=function(){},Ut.prototype.isGeometryChanged=function(){},Ut.prototype.interfaces_=function(){return[]},Ut.prototype.getClass=function(){return Ut};var zt=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new m(\"geometries must not contain null elements\")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new j,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var i=this._geometries[n].getCoordinates(),r=0;r<i.length;r++)t[++e]=i[r];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._geometries.length!==i._geometries.length)return!1;for(var r=0;r<this._geometries.length;r++)if(!this._geometries[r].equalsExact(i._geometries[r],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Gt.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new f(Gt.asList(this._geometries)),n=new f(Gt.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=i,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var l=this.getGeometryN(u),c=o.getGeometryN(u),p=l.compareToSameClass(c,r);if(0!==p)return p;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(this._geometries[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){var r=arguments[0];r.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(r)}else if(T(arguments[0],lt)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),et.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return\"GeometryCollection\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(ct),Xt=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.getGeometryType=function(){return\"MultiLineString\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(zt),Yt=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=gt.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=i}};Yt.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Yt.prototype.getBoundary=function(){return this._geom instanceof Kt?this.boundaryLineString(this._geom):this._geom instanceof Xt?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Yt.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Yt.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Yt.prototype.computeBoundaryCoordinates=function(t){var e=new Nt;this._endpointMap=new p;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this._endpointMap.entrySet().iterator();r.hasNext();){var o=r.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Lt.toCoordinateArray(e)},Yt.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new kt,this._endpointMap.put(t,e)),e.count++},Yt.prototype.interfaces_=function(){return[]},Yt.prototype.getClass=function(){return Yt},Yt.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Yt(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Yt(e,n).getBoundary()}};var kt=function(){this.count=null};kt.prototype.interfaces_=function(){return[]},kt.prototype.getClass=function(){return kt};var jt=function(){},Ht={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};jt.prototype.interfaces_=function(){return[]},jt.prototype.getClass=function(){return jt},jt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;i<e;i++)n[i]=t;return String(n)},jt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=\"\",s=new function(){}(new function(){}(jt.getStackTrace(i))),a=0;a<r;a++)try{o+=s.readLine()+jt.NEWLINE}catch(t){if(!(t instanceof g))throw t;et.shouldNeverReachHere()}return o}},jt.split=function(t,e){for(var n=e.length,i=new Nt,r=\"\"+t,o=r.indexOf(e);o>=0;){var s=r.substring(0,o);i.add(s),o=(r=r.substring(o+n)).indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},jt.toString=function(){if(1===arguments.length){var t=arguments[0];return jt.SIMPLE_ORDINATE_FORMAT.format(t)}},jt.spaces=function(t){return jt.chars(\" \",t)},Ht.NEWLINE.get=function(){return Y.getProperty(\"line.separator\")},Ht.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}(\"0.#\")},Object.defineProperties(jt,Ht);var Wt=function(){};Wt.prototype.interfaces_=function(){return[]},Wt.prototype.getClass=function(){return Wt},Wt.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),o=0;o<r;o++)n.setOrdinate(i,o,t.getOrdinate(e,o))},Wt.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,V.X)===t.getOrdinate(e-1,V.X)&&t.getOrdinate(0,V.Y)===t.getOrdinate(e-1,V.Y))},Wt.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var i=Math.min(t.getDimension(),e.getDimension()),r=0;r<n;r++)for(var o=0;o<i;o++){var s=t.getOrdinate(r,o),a=e.getOrdinate(r,o);if(t.getOrdinate(r,o)!==e.getOrdinate(r,o)&&(!v.isNaN(s)||!v.isNaN(a)))return!1}return!0},Wt.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Wt.copy(e,0,i,0,r),r>0)for(var o=r;o<n;o++)Wt.copy(e,r-1,i,o,1);return i},Wt.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;i<=n;i++)Wt.swap(t,i,e-i)},Wt.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Wt.copy=function(t,e,n,i,r){for(var o=0;o<r;o++)Wt.copyCoord(t,e+o,n,i+o)},Wt.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new D;i.append(\"(\");for(var r=0;r<e;r++){r>0&&i.append(\" \");for(var o=0;o<n;o++)o>0&&i.append(\",\"),i.append(jt.toString(t.getOrdinate(r,o)))}return i.append(\")\"),i.toString()}},Wt.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wt.createClosedRing(t,e,4);return e.getOrdinate(0,V.X)===e.getOrdinate(n-1,V.X)&&e.getOrdinate(0,V.Y)===e.getOrdinate(n-1,V.Y)?e:Wt.createClosedRing(t,e,n+1)},Wt.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Wt.copy(e,0,i,0,r);for(var o=r;o<n;o++)Wt.copy(e,0,i,o,1);return i};var Kt=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new j:this._points.expandEnvelope(new j)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._points.size()!==i._points.size())return!1;for(var r=0;r<this._points.size();r++)if(!this.equal(this._points.getCoordinate(r),i._points.getCoordinate(r),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wt.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return at.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var r=arguments[0];return arguments[1].compare(this._points,r._points)}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(n.filter(this._points,i),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return\"LineString\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new m(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(ct),Jt=function(){};Jt.prototype.interfaces_=function(){return[]},Jt.prototype.getClass=function(){return Jt};var Qt=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new j;var t=new j;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error(\"getX called on empty Point\");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(T(arguments[0],ft)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(T(arguments[0],Ut)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return\"Point\"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error(\"getY called on empty Point\");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),et.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(ct),Zt=function(){};Zt.prototype.interfaces_=function(){return[]},Zt.prototype.getClass=function(){return Zt};var $t=function(t){function e(e,n,i){if(t.call(this,i),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new m(\"holes must not contain null elements\");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new m(\"shell is empty but holes are not\");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),i=0;i<n.length;i++)t[++e]=n[i];for(var r=0;r<this._holes.length;r++)for(var o=this._holes[r].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(at.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(at.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o===(l!==s))return!1;o=u,s=l}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e,r=this._shell,o=i._shell;if(!r.equalsExact(o,n))return!1;if(this._holes.length!==i._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(i._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);Gt.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);Y.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=Lt.minCoordinate(e.getCoordinates());Lt.scroll(i,r),Y.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],at.isCCW(e.getCoordinates())===n&&Lt.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],o=i,s=this._shell,a=o._shell,u=s.compareToSameClass(a,r);if(0!==u)return u;for(var l=this.getNumInteriorRing(),c=o.getNumInteriorRing(),p=0;p<l&&p<c;){var h=this.getInteriorRingN(p),f=o.getInteriorRingN(p),g=h.compareToSameClass(f,r);if(0!==g)return g;p++}return p<l?1:p<c?-1:0}},e.prototype.apply=function(t){if(T(t,ft)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(T(t,Ut)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(T(t,Vt))t.filter(this);else if(T(t,lt)){t.filter(this),this._shell.apply(t);for(var i=0;i<this._holes.length;i++)this._holes[i].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return\"Polygon\"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),i=0;i<n.length;i++)n[i]=this._holes[i].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(ct),te=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return\"MultiPoint\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(zt),ee=function(t){function e(e,n){e instanceof C&&n instanceof _e&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new m(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new m(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},e.prototype.getGeometryType=function(){return\"LinearRing\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Kt),ne=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new Nt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),i=0;i<n.getNumGeometries();i++)t.add(n.getGeometryN(i));var r=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r))},e.prototype.getGeometryType=function(){return\"MultiPolygon\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(zt),ie=function(t){this._factory=t||null,this._isUserDataCopied=!1},re={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};ie.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},ie.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},ie.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof zt?this.editGeometryCollection(t,e):t instanceof $t?this.editPolygon(t,e):t instanceof Qt?e.edit(t,this._factory):t instanceof Kt?e.edit(t,this._factory):(et.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},ie.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),i=new Nt,r=0;r<n.getNumGeometries();r++){var o=this.edit(n.getGeometryN(r),e);null===o||o.isEmpty()||i.add(o)}return n.getClass()===te?this._factory.createMultiPoint(i.toArray([])):n.getClass()===Xt?this._factory.createMultiLineString(i.toArray([])):n.getClass()===ne?this._factory.createMultiPolygon(i.toArray([])):this._factory.createGeometryCollection(i.toArray([]))},ie.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this._factory.createPolygon();for(var r=new Nt,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||r.add(s)}return this._factory.createPolygon(i,r.toArray([]))},ie.prototype.interfaces_=function(){return[]},ie.prototype.getClass=function(){return ie},ie.GeometryEditorOperation=function(){},re.NoOpGeometryOperation.get=function(){return oe},re.CoordinateOperation.get=function(){return se},re.CoordinateSequenceOperation.get=function(){return ae},Object.defineProperties(ie,re);var oe=function(){};oe.prototype.edit=function(t,e){return t},oe.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},oe.prototype.getClass=function(){return oe};var se=function(){};se.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof ee?e.createLinearRing(n):t instanceof Kt?e.createLineString(n):t instanceof Qt?n.length>0?e.createPoint(n[0]):e.createPoint():t},se.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},se.prototype.getClass=function(){return se};var ae=function(){};ae.prototype.edit=function(t,e){return t instanceof ee?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Kt?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ae.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},ae.prototype.getClass=function(){return ae};var ue=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new C}else if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var i=0;i<this._coordinates.length;i++)this._coordinates[i]=n.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],o=arguments[1];this._coordinates=r,this._dimension=o,null===r&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new C}},le={serialVersionUID:{configurable:!0}};ue.prototype.setOrdinate=function(t,e,n){switch(e){case V.X:this._coordinates[t].x=n;break;case V.Y:this._coordinates[t].y=n;break;case V.Z:this._coordinates[t].z=n;break;default:throw new m(\"invalid ordinateIndex\")}},ue.prototype.size=function(){return this._coordinates.length},ue.prototype.getOrdinate=function(t,e){switch(e){case V.X:return this._coordinates[t].x;case V.Y:return this._coordinates[t].y;case V.Z:return this._coordinates[t].z}return v.NaN},ue.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},ue.prototype.getCoordinateCopy=function(t){return new C(this._coordinates[t])},ue.prototype.getDimension=function(){return this._dimension},ue.prototype.getX=function(t){return this._coordinates[t].x},ue.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new ue(t,this._dimension)},ue.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},ue.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new ue(t,this._dimension)},ue.prototype.toString=function(){if(this._coordinates.length>0){var t=new D(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},ue.prototype.getY=function(t){return this._coordinates[t].y},ue.prototype.toCoordinateArray=function(){return this._coordinates},ue.prototype.interfaces_=function(){return[V,e]},ue.prototype.getClass=function(){return ue},le.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(ue,le);var ce=function(){},pe={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};ce.prototype.readResolve=function(){return ce.instance()},ce.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new ue(t)}if(T(arguments[0],V)){var e=arguments[0];return new ue(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2?new ue(n):new ue(n,i)}},ce.prototype.interfaces_=function(){return[b,e]},ce.prototype.getClass=function(){return ce},ce.instance=function(){return ce.instanceObject},pe.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},pe.instanceObject.get=function(){return new ce},Object.defineProperties(ce,pe);var he=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new Nt,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Pt;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Tt),fe=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof de){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var i=arguments[0];this._modelType=i._modelType,this._scale=i._scale}},ge={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fe.prototype.equals=function(t){if(!(t instanceof fe))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fe.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new M(n).compareTo(new M(i))},fe.prototype.getScale=function(){return this._scale},fe.prototype.isFloating=function(){return this._modelType===fe.FLOATING||this._modelType===fe.FLOATING_SINGLE},fe.prototype.getType=function(){return this._modelType},fe.prototype.toString=function(){var t=\"UNKNOWN\";return this._modelType===fe.FLOATING?t=\"Floating\":this._modelType===fe.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===fe.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},fe.prototype.makePrecise=function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(v.isNaN(t))return t;if(this._modelType===fe.FLOATING_SINGLE){return t}return this._modelType===fe.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof C){var e=arguments[0];if(this._modelType===fe.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fe.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fe.FLOATING?t=16:this._modelType===fe.FLOATING_SINGLE?t=6:this._modelType===fe.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fe.prototype.setScale=function(t){this._scale=Math.abs(t)},fe.prototype.interfaces_=function(){return[e,E]},fe.prototype.getClass=function(){return fe},fe.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},ge.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},ge.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fe,ge);var de=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},ye={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};de.prototype.readResolve=function(){return de.nameToTypeMap.get(this._name)},de.prototype.toString=function(){return this._name},de.prototype.interfaces_=function(){return[e]},de.prototype.getClass=function(){return de},ye.serialVersionUID.get=function(){return-552860263173159e4},ye.nameToTypeMap.get=function(){return new he},Object.defineProperties(de,ye),fe.Type=de,fe.FIXED=new de(\"FIXED\"),fe.FLOATING=new de(\"FLOATING\"),fe.FLOATING_SINGLE=new de(\"FLOATING SINGLE\");var _e=function t(){this._precisionModel=new fe,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?T(arguments[0],b)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fe&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},me={serialVersionUID:{configurable:!0}};_e.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new C(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new C(t.getMinX(),t.getMinY()),new C(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new C(t.getMinX(),t.getMinY()),new C(t.getMinX(),t.getMaxY()),new C(t.getMaxX(),t.getMaxY()),new C(t.getMaxX(),t.getMinY()),new C(t.getMinX(),t.getMinY())]),null)},_e.prototype.createLineString=function(t){return t?t instanceof Array?new Kt(this.getCoordinateSequenceFactory().create(t),this):T(t,V)?new Kt(t,this):void 0:new Kt(this.getCoordinateSequenceFactory().create([]),this)},_e.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xt(null,this);if(1===arguments.length){var t=arguments[0];return new Xt(t,this)}},_e.prototype.buildGeometry=function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var o=r.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(_e.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $t)return this.createMultiPolygon(_e.toPolygonArray(t));if(a instanceof Kt)return this.createMultiLineString(_e.toLineStringArray(t));if(a instanceof Qt)return this.createMultiPoint(_e.toPointArray(t));et.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},_e.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_e.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(T(arguments[0],V)){var e=arguments[0];return new Qt(e,this)}}},_e.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_e.prototype.createPolygon=function(){if(0===arguments.length)return new $t(null,null,this);if(1===arguments.length){if(T(arguments[0],V)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof ee){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new $t(i,r,this)}},_e.prototype.getSRID=function(){return this._SRID},_e.prototype.createGeometryCollection=function(){if(0===arguments.length)return new zt(null,this);if(1===arguments.length){var t=arguments[0];return new zt(t,this)}},_e.prototype.createGeometry=function(t){return new ie(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_e.prototype.getPrecisionModel=function(){return this._precisionModel},_e.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(T(arguments[0],V)){var e=arguments[0];return new ee(e,this)}}},_e.prototype.createMultiPolygon=function(){if(0===arguments.length)return new ne(null,this);if(1===arguments.length){var t=arguments[0];return new ne(t,this)}},_e.prototype.createMultiPoint=function(){if(0===arguments.length)return new te(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new te(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wt.copy(n,r,o,0,1),i[r]=this.createPoint(o)}return this.createMultiPoint(i)}}},_e.prototype.interfaces_=function(){return[e]},_e.prototype.getClass=function(){return _e},_e.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.getDefaultCoordinateSequenceFactory=function(){return ce.instance()},_e.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},me.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_e,me);var ve=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],Ie=function(t){this.geometryFactory=t||new _e};Ie.prototype.read=function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!Ee[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==ve.indexOf(n)?Ee[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Ee[n].apply(this,[e.geometries]):Ee[n].apply(this,[e])},Ie.prototype.write=function(t){var e=t.getGeometryType();if(!xe[e])throw new Error(\"Geometry is not supported\");return xe[e].apply(this,[t])};var Ee={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!Ee[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Ee.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(new C(i[0],i[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new C(t[0],t[1]),new C(t[2],t[1]),new C(t[2],t[3]),new C(t[0],t[3]),new C(t[0],t[1])])},Point:function(t){var e=new C(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Ee.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Ee.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var o=t[r],s=Ee.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(Ee.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},xe={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:\"Point\",coordinates:xe.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(xe.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=xe.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var i=0;i<t._holes.length;++i){var r=t._holes[i],o=xe.LineString.apply(this,[r]);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=i.getGeometryType();e.push(xe[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}},Ne=function(t){this.geometryFactory=t||new _e,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new Ie(this.geometryFactory)};Ne.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fe.FIXED&&this.reducePrecision(e),e},Ne.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ce=function(){this.parser=new Ie(this.geometryFactory)};Ce.prototype.write=function(t){return this.parser.write(t)};var Se=function(){},Le={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Se.prototype.interfaces_=function(){return[]},Se.prototype.getClass=function(){return Se},Se.opposite=function(t){return t===Se.LEFT?Se.RIGHT:t===Se.RIGHT?Se.LEFT:t},Le.ON.get=function(){return 0},Le.LEFT.get=function(){return 1},Le.RIGHT.get=function(){return 2},Object.defineProperties(Se,Le),(d.prototype=new Error).name=\"EmptyStackException\",(y.prototype=new xt).add=function(t){return this.array_.push(t),!0},y.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},y.prototype.push=function(t){return this.array_.push(t),t},y.prototype.pop=function(t){if(0===this.array_.length)throw new d;return this.array_.pop()},y.prototype.peek=function(){if(0===this.array_.length)throw new d;return this.array_[this.array_.length-1]},y.prototype.empty=function(){return 0===this.array_.length},y.prototype.isEmpty=function(){return this.empty()},y.prototype.search=function(t){return this.array_.indexOf(t)},y.prototype.size=function(){return this.array_.length},y.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var be=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};be.prototype.getCoordinate=function(){return this._minCoord},be.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},be.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();et.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],i=at.computeOrientation(this._minCoord,n,e),r=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===at.COUNTERCLOCKWISE?r=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===at.CLOCKWISE&&(r=!0),r&&(this._minIndex=this._minIndex-1)},be.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var i=Se.LEFT;return n[e].y<n[e+1].y&&(i=Se.RIGHT),i},be.prototype.getEdge=function(){return this._orientedDe},be.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},be.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},be.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}et.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Se.LEFT&&(this._orientedDe=this._minDe.getSym())},be.prototype.interfaces_=function(){return[]},be.prototype.getClass=function(){return be};var we=function(t){function e(n,i){t.call(this,e.msgWithCoord(n,i)),this.pt=i?new C(i):null,this.name=\"TopologyException\"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+\" [ \"+e+\" ]\"},e}($),Oe=function(){this.array_=[]};Oe.prototype.addLast=function(t){this.array_.push(t)},Oe.prototype.removeFirst=function(){return this.array_.shift()},Oe.prototype.isEmpty=function(){return 0===this.array_.length};var Te=function(){this._finder=null,this._dirEdgeList=new Nt,this._nodes=new Nt,this._rightMostCoord=null,this._env=null,this._finder=new be};Te.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Te.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Te.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new we(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var r=t.getEdges().iterator();r.hasNext();){var o=r.next();o.setVisited(!0),this.copySymDepths(o)}},Te.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Se.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Te.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Te.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Se.RIGHT)>=1&&e.getDepth(Se.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Te.prototype.computeDepths=function(t){var e=new Pt,n=new Oe,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var o=r.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Te.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Te.prototype.getEnvelope=function(){if(null===this._env){for(var t=new j,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),i=0;i<n.length-1;i++)t.expandToInclude(n[i]);this._env=t}return this._env},Te.prototype.addReachable=function(t){var e=new y;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Te.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Se.LEFT,t.getDepth(Se.RIGHT)),e.setDepth(Se.RIGHT,t.getDepth(Se.LEFT))},Te.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this._dirEdgeList.add(i);var r=i.getSym().getNode();r.isVisited()||e.push(r)}},Te.prototype.getNodes=function(){return this._nodes},Te.prototype.getDirectedEdges=function(){return this._dirEdgeList},Te.prototype.interfaces_=function(){return[E]},Te.prototype.getClass=function(){return Te};var Re=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Se.ON]=n}else if(arguments[0]instanceof t){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var r=0;r<this.location.length;r++)this.location[r]=i.location[r]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Se.ON]=o,this.location[Se.LEFT]=s,this.location[Se.RIGHT]=a}};Re.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Re.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==w.NONE)return!1;return!0},Re.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===w.NONE&&(this.location[e]=t)},Re.prototype.isLine=function(){return 1===this.location.length},Re.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Se.ON]=this.location[Se.ON],e[Se.LEFT]=w.NONE,e[Se.RIGHT]=w.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===w.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Re.prototype.getLocations=function(){return this.location},Re.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Se.LEFT];this.location[Se.LEFT]=this.location[Se.RIGHT],this.location[Se.RIGHT]=t},Re.prototype.toString=function(){var t=new D;return this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.LEFT])),t.append(w.toLocationSymbol(this.location[Se.ON])),this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.RIGHT])),t.toString()},Re.prototype.setLocations=function(t,e,n){this.location[Se.ON]=t,this.location[Se.LEFT]=e,this.location[Se.RIGHT]=n},Re.prototype.get=function(t){return t<this.location.length?this.location[t]:w.NONE},Re.prototype.isArea=function(){return this.location.length>1},Re.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===w.NONE)return!0;return!1},Re.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Se.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Re.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(w.NONE)},Re.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Re.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Re.prototype.interfaces_=function(){return[]},Re.prototype.getClass=function(){return Re};var Pe=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Re(e),this.elt[1]=new Re(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Re(n.elt[0]),this.elt[1]=new Re(n.elt[1])}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.elt[0]=new Re(w.NONE),this.elt[1]=new Re(w.NONE),this.elt[i].setLocation(r)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Re(o,s,a),this.elt[1]=new Re(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2],p=arguments[3];this.elt[0]=new Re(w.NONE,w.NONE,w.NONE),this.elt[1]=new Re(w.NONE,w.NONE,w.NONE),this.elt[u].setLocations(l,c,p)}};Pe.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Pe.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Pe.prototype.isNull=function(t){return this.elt[t].isNull()},Pe.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Pe.prototype.isLine=function(t){return this.elt[t].isLine()},Pe.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e])},Pe.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Pe.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Se.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Pe.prototype.toString=function(){var t=new D;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},Pe.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Pe.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Pe.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Se.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},Pe.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Pe.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Pe.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]))},Pe.prototype.interfaces_=function(){return[]},Pe.prototype.getClass=function(){return Pe},Pe.toLineLabel=function(t){for(var e=new Pe(w.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var De=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new Nt,this._pts=new Nt,this._label=new Pe(w.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Nt,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};De.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=at.isCCW(this._ring.getCoordinates())},De.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},De.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new we(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new we(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var i=e.getLabel();et.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},De.prototype.getLinearRing=function(){return this._ring},De.prototype.getCoordinate=function(t){return this._pts.get(t)},De.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},De.prototype.addPoints=function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var o=r;o<i.length;o++)this._pts.add(i[o])}else{var s=i.length-2;n&&(s=i.length-1);for(var a=s;a>=0;a--)this._pts.add(i[a])}},De.prototype.isHole=function(){return this._isHole},De.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},De.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!at.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},De.prototype.addHole=function(t){this._holes.add(t)},De.prototype.isShell=function(){return null===this._shell},De.prototype.getLabel=function(){return this._label},De.prototype.getEdges=function(){return this._edges},De.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},De.prototype.getShell=function(){return this._shell},De.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,Se.RIGHT);if(i===w.NONE)return null;if(this._label.getLocation(n)===w.NONE)return this._label.setLocation(n,i),null}},De.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},De.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},De.prototype.interfaces_=function(){return[]},De.prototype.getClass=function(){return De};var Me=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Ae=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new Nt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Me(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Fe=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fe.prototype.setVisited=function(t){this._isVisited=t},Fe.prototype.setInResult=function(t){this._isInResult=t},Fe.prototype.isCovered=function(){return this._isCovered},Fe.prototype.isCoveredSet=function(){return this._isCoveredSet},Fe.prototype.setLabel=function(t){this._label=t},Fe.prototype.getLabel=function(){return this._label},Fe.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fe.prototype.updateIM=function(t){et.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},Fe.prototype.isInResult=function(){return this._isInResult},Fe.prototype.isVisited=function(){return this._isVisited},Fe.prototype.interfaces_=function(){return[]},Fe.prototype.getClass=function(){return Fe};var Ge=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Pe(0,w.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=w.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==w.BOUNDARY&&(n=i)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Pe(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Pe)for(var n=arguments[0],i=0;i<2;i++){var r=this.computeMergedLocation(n,i);this._label.getLocation(i)===w.NONE&&this._label.setLocation(i,r)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=w.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case w.BOUNDARY:n=w.INTERIOR;break;case w.INTERIOR:default:n=w.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fe),qe=function(){this.nodeMap=new p,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};qe.prototype.find=function(t){return this.nodeMap.get(t)},qe.prototype.addNode=function(){if(arguments[0]instanceof C){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ge){var n=arguments[0],i=this.nodeMap.get(n.getCoordinate());return null===i?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i)}},qe.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},qe.prototype.iterator=function(){return this.nodeMap.values().iterator()},qe.prototype.values=function(){return this.nodeMap.values()},qe.prototype.getBoundaryNodes=function(t){for(var e=new Nt,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===w.BOUNDARY&&e.add(i)}return e},qe.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},qe.prototype.interfaces_=function(){return[]},qe.prototype.getClass=function(){return qe};var Be=function(){},Ve={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Be.prototype.interfaces_=function(){return[]},Be.prototype.getClass=function(){return Be},Be.isNorthern=function(t){return t===Be.NE||t===Be.NW},Be.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Be.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Be.isInHalfPlane=function(t,e){return e===Be.SE?t===Be.SE||t===Be.SW:t===e||t===e+1},Be.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Be.NE:Be.SE:e>=0?Be.NW:Be.SW}if(arguments[0]instanceof C&&arguments[1]instanceof C){var n=arguments[0],i=arguments[1];if(i.x===n.x&&i.y===n.y)throw new m(\"Cannot compute the quadrant for two identical points \"+n);return i.x>=n.x?i.y>=n.y?Be.NE:Be.SE:i.y>=n.y?Be.NW:Be.SW}},Ve.NE.get=function(){return 0},Ve.NW.get=function(){return 1},Ve.SW.get=function(){return 2},Ve.SE.get=function(){return 3},Object.defineProperties(Be,Ve);var Ue=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this._edge=e,this.init(n,i),this._label=null}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=r,this.init(o,s),this._label=a}};Ue.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:at.computeOrientation(t._p0,t._p1,this._p1)},Ue.prototype.getDy=function(){return this._dy},Ue.prototype.getCoordinate=function(){return this._p0},Ue.prototype.setNode=function(t){this._node=t},Ue.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)},Ue.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},Ue.prototype.getDirectedCoordinate=function(){return this._p1},Ue.prototype.getDx=function(){return this._dx},Ue.prototype.getLabel=function(){return this._label},Ue.prototype.getEdge=function(){return this._edge},Ue.prototype.getQuadrant=function(){return this._quadrant},Ue.prototype.getNode=function(){return this._node},Ue.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label},Ue.prototype.computeLabel=function(t){},Ue.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Be.quadrant(this._dx,this._dy),et.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")},Ue.prototype.interfaces_=function(){return[E]},Ue.prototype.getClass=function(){return Ue};var ze=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var i=e.getNumPoints()-1;this.init(e.getCoordinate(i),e.getCoordinate(i-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Pe(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new we(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Se.LEFT)===w.INTERIOR&&this._label.getLocation(e,Se.RIGHT)===w.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(\" \"+this._depth[Se.LEFT]+\"/\"+this._depth[Se.RIGHT]),e.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&e.print(\" inResult\")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,w.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,w.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===Se.LEFT&&(i=-1);var r=Se.opposite(t),o=e+n*i;this.setDepth(t,e),this.setDepth(r,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===w.EXTERIOR&&e===w.INTERIOR?1:t===w.INTERIOR&&e===w.EXTERIOR?-1:0},e}(Ue),Xe=function(){};Xe.prototype.createNode=function(t){return new Ge(t,null)},Xe.prototype.interfaces_=function(){return[]},Xe.prototype.getClass=function(){return Xe};var Ye=function(){if(this._edges=new Nt,this._nodes=null,this._edgeEndList=new Nt,0===arguments.length)this._nodes=new qe(new Xe);else if(1===arguments.length){var t=arguments[0];this._nodes=new qe(t)}};Ye.prototype.printEdges=function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Ye.prototype.find=function(t){return this._nodes.find(t)},Ye.prototype.addNode=function(){if(arguments[0]instanceof Ge){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof C){var e=arguments[0];return this._nodes.addNode(e)}},Ye.prototype.getNodeIterator=function(){return this._nodes.iterator()},Ye.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Ye.prototype.debugPrintln=function(t){Y.out.println(t)},Ye.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===w.BOUNDARY},Ye.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Ye.prototype.matchInSameDirection=function(t,e,n,i){return!!t.equals(n)&&(at.computeOrientation(t,e,i)===at.COLLINEAR&&Be.quadrant(t,e)===Be.quadrant(n,i))},Ye.prototype.getEdgeEnds=function(){return this._edgeEndList},Ye.prototype.debugPrint=function(t){Y.out.print(t)},Ye.prototype.getEdgeIterator=function(){return this._edges.iterator()},Ye.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},Ye.prototype.insertEdge=function(t){this._edges.add(t)},Ye.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Ye.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var i=new ze(n,!0),r=new ze(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},Ye.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Ye.prototype.getNodes=function(){return this._nodes.values()},Ye.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},Ye.prototype.interfaces_=function(){return[]},Ye.prototype.getClass=function(){return Ye},Ye.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var ke=function(){this._geometryFactory=null,this._shellList=new Nt;var t=arguments[0];this._geometryFactory=t};ke.prototype.sortShellsAndHoles=function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},ke.prototype.computePolygons=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next().toPolygon(this._geometryFactory);e.add(i)}return e},ke.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new we(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},ke.prototype.buildMinimalEdgeRings=function(t,e,n){for(var i=new Nt,r=t.iterator();r.hasNext();){var o=r.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else i.add(o)}return i},ke.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},ke.prototype.buildMaximalEdgeRings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new Ae(i,this._geometryFactory);e.add(r),r.setInResult()}}return e},ke.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},ke.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},ke.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),c=l.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var p=!1;c.contains(i)&&at.isPointInRing(r,l.getCoordinates())&&(p=!0),p&&(null===o||s.contains(c))&&(o=u)}return o},ke.prototype.findShell=function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return et.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},ke.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Ye.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new Nt,o=this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(o,this._shellList,r),this.placeFreeHoles(this._shellList,r)}},ke.prototype.interfaces_=function(){return[]},ke.prototype.getClass=function(){return ke};var je=function(){};je.prototype.getBounds=function(){},je.prototype.interfaces_=function(){return[]},je.prototype.getClass=function(){return je};var He=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};He.prototype.getItem=function(){return this._item},He.prototype.getBounds=function(){return this._bounds},He.prototype.interfaces_=function(){return[je,e]},He.prototype.getClass=function(){return He};var We=function(){this._size=null,this._items=null,this._size=0,this._items=new Nt,this._items.add(null)};We.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},We.prototype.size=function(){return this._size},We.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},We.prototype.clear=function(){this._size=0,this._items.clear()},We.prototype.isEmpty=function(){return 0===this._size},We.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},We.prototype.interfaces_=function(){return[]},We.prototype.getClass=function(){return We};var Ke=function(){};Ke.prototype.visitItem=function(t){},Ke.prototype.interfaces_=function(){return[]},Ke.prototype.getClass=function(){return Ke};var Je=function(){};Je.prototype.insert=function(t,e){},Je.prototype.remove=function(t,e){},Je.prototype.query=function(){},Je.prototype.interfaces_=function(){return[]},Je.prototype.getClass=function(){return Je};var Qe=function(){if(this._childBoundables=new Nt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Ze={serialVersionUID:{configurable:!0}};Qe.prototype.getLevel=function(){return this._level},Qe.prototype.size=function(){return this._childBoundables.size()},Qe.prototype.getChildBoundables=function(){return this._childBoundables},Qe.prototype.addChildBoundable=function(t){et.isTrue(null===this._bounds),this._childBoundables.add(t)},Qe.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Qe.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Qe.prototype.interfaces_=function(){return[je,e]},Qe.prototype.getClass=function(){return Qe},Ze.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Qe,Ze);var $e=function(){};$e.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$e.min=function(t){return $e.sort(t),t.get(0)},$e.sort=function(t,e){var n=t.toArray();e?Gt.sort(n,e):Gt.sort(n);for(var i=t.iterator(),r=0,o=n.length;r<o;r++)i.next(),i.set(n[r])},$e.singletonList=function(t){var e=new Nt;return e.add(t),e};var tn=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tn.prototype.expandToQueue=function(t,e){var n=tn.isComposite(this._boundable1),i=tn.isComposite(this._boundable2);if(n&&i)return tn.area(this._boundable1)>tn.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new m(\"neither boundable is composite\")},tn.prototype.isLeaves=function(){return!(tn.isComposite(this._boundable1)||tn.isComposite(this._boundable2))},tn.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tn.prototype.expand=function(t,e,n,i){for(var r=t.getChildBoundables().iterator();r.hasNext();){var o=r.next(),s=new tn(o,e,this._itemDistance);s.getDistance()<i&&n.add(s)}},tn.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tn.prototype.getDistance=function(){return this._distance},tn.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tn.prototype.interfaces_=function(){return[E]},tn.prototype.getClass=function(){return tn},tn.area=function(t){return t.getBounds().getArea()},tn.isComposite=function(t){return t instanceof Qe};var en=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new Nt,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];et.isTrue(n>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=n}},nn={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};en.prototype.getNodeCapacity=function(){return this._nodeCapacity},en.prototype.lastNode=function(t){return t.get(t.size()-1)},en.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Qe?t+=this.size(n):n instanceof He&&(t+=1)}return t}},en.prototype.removeItem=function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof He&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)},en.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new Nt:t}if(1===arguments.length){for(var e=arguments[0],n=new Nt,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Qe){var o=this.itemsTree(r);null!==o&&n.add(o)}else r instanceof He?n.add(r.getItem()):et.shouldNeverReachHere()}return n.size()<=0?null:n}},en.prototype.insert=function(t,e){et.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new He(t,e))},en.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(et.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var o=i.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Qe?this.boundablesAtLevel(n,s,r):(et.isTrue(s instanceof He),-1===n&&r.add(s))}return null}},en.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new Nt;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var r=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Qe?this.query(r,l,s):l instanceof He?s.visitItem(l.getItem()):et.shouldNeverReachHere())}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var c=arguments[0],p=arguments[1],h=arguments[2],f=p.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),c)&&(d instanceof Qe?this.query(c,d,h):d instanceof He?h.add(d.getItem()):et.shouldNeverReachHere())}},en.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},en.prototype.getRoot=function(){return this.build(),this._root},en.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=this.removeItem(i,r);if(o)return!0;for(var s=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Qe&&(o=this.remove(n,u,r)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(s),o}},en.prototype.createHigherLevels=function(t,e){et.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},en.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Qe){var i=this.depth(n);i>t&&(t=i)}}return t+1}},en.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var n=new Nt;n.add(this.createNode(e));var i=new Nt(t);$e.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var o=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},en.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},en.prototype.interfaces_=function(){return[e]},en.prototype.getClass=function(){return en},en.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nn.IntersectsOp.get=function(){return rn},nn.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nn.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(en,nn);var rn=function(){},on=function(){};on.prototype.distance=function(t,e){},on.prototype.interfaces_=function(){return[]},on.prototype.getClass=function(){return on};var sn=function(t){function n(e){e=e||n.DEFAULT_NODE_CAPACITY,t.call(this,e)}t&&(n.__proto__=t),(n.prototype=Object.create(t&&t.prototype)).constructor=n;var i={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return n.prototype.createParentBoundablesFromVerticalSlices=function(t,e){et.isTrue(t.length>0);for(var n=new Nt,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},n.prototype.createNode=function(t){return new an(t)},n.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},n.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},n.prototype.getIntersectsOp=function(){return n.intersectsOp},n.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),o=0;o<e;o++){i[o]=new Nt;for(var s=0;r.hasNext()&&s<n;){var a=r.next();i[o].add(a),s++}}return i},n.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];t.prototype.query.call(this,n,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var r=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,r,o,s)}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var a=arguments[0],u=arguments[1],l=arguments[2];t.prototype.query.call(this,a,u,l)}},n.prototype.getComparator=function(){return n.yComparator},n.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},n.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},n.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},n.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var i=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),r=new Nt(t);$e.sort(r,n.xComparator);var o=this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(o,e)},n.prototype.nearestNeighbour=function(){if(1===arguments.length){if(T(arguments[0],on)){var t=arguments[0],e=new tn(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof tn){var i=arguments[0];return this.nearestNeighbour(i,v.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof n&&T(arguments[1],on)){var r=arguments[0],o=arguments[1],s=new tn(this.getRoot(),r.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tn&&\"number\"==typeof arguments[1]){var a=arguments[0],u=arguments[1],l=null,c=new We;for(c.add(a);!c.isEmpty()&&u>0;){var p=c.poll(),h=p.getDistance();if(h>=u)break;p.isLeaves()?(u=h,l=p):p.expandToQueue(c,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new He(f,g),_=new tn(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},n.prototype.interfaces_=function(){return[Je,e]},n.prototype.getClass=function(){return n},n.centreX=function(t){return n.avg(t.getMinX(),t.getMaxX())},n.avg=function(t,e){return(t+e)/2},n.centreY=function(t){return n.avg(t.getMinY(),t.getMaxY())},i.STRtreeNode.get=function(){return an},i.serialVersionUID.get=function(){return 0x39920f7d5f261e0},i.xComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(i.getBounds()))}}},i.yComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreY(e.getBounds()),n.centreY(i.getBounds()))}}},i.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},i.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(n,i),n}(en),an=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new j(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qe),un=function(){};un.prototype.interfaces_=function(){return[]},un.prototype.getClass=function(){return un},un.relativeSign=function(t,e){return t<e?-1:t>e?1:0},un.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=un.relativeSign(e.x,n.x),r=un.relativeSign(e.y,n.y);switch(t){case 0:return un.compareValue(i,r);case 1:return un.compareValue(r,i);case 2:return un.compareValue(r,-i);case 3:return un.compareValue(-i,r);case 4:return un.compareValue(-i,-r);case 5:return un.compareValue(-r,-i);case 6:return un.compareValue(-r,i);case 7:return un.compareValue(i,-r)}return et.shouldNeverReachHere(\"invalid octant value\"),0},un.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ln=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new C(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))};ln.prototype.getCoordinate=function(){return this.coord},ln.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},ln.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:un.compare(this._segmentOctant,this.coord,e.coord)},ln.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ln.prototype.isInterior=function(){return this._isInterior},ln.prototype.interfaces_=function(){return[E]},ln.prototype.getClass=function(){return ln};var cn=function(){this._nodeMap=new p,this._edge=null;var t=arguments[0];this._edge=t};cn.prototype.getSplitCoordinates=function(){var t=new St;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},cn.prototype.addCollapsedNodes=function(){var t=new Nt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cn.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(new M(e+1))}},cn.prototype.addEdgeCoordinates=function(t,e,n){var i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);n.add(new C(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));r&&n.add(new C(e.coord))},cn.prototype.iterator=function(){return this._nodeMap.values().iterator()},cn.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},cn.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)},cn.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next();this.findCollapseIndex(i,r,e)&&t.add(new M(e[0])),i=r}},cn.prototype.getEdge=function(){return this._edge},cn.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return r&&(o[s]=new C(e.coord)),new gn(o,this._edge.getData())},cn.prototype.add=function(t,e){var n=new ln(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(et.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this._nodeMap.put(n,n),n)},cn.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new $(\"bad split edge start point at \"+n);var i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new $(\"bad split edge end point at \"+r)},cn.prototype.interfaces_=function(){return[]},cn.prototype.getClass=function(){return cn};var pn=function(){};pn.prototype.interfaces_=function(){return[]},pn.prototype.getClass=function(){return pn},pn.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof C&&arguments[1]instanceof C){var r=arguments[0],o=arguments[1],s=o.x-r.x,a=o.y-r.y;if(0===s&&0===a)throw new m(\"Cannot compute the octant for two identical points \"+r);return pn.octant(s,a)}};var hn=function(){};hn.prototype.getCoordinates=function(){},hn.prototype.size=function(){},hn.prototype.getCoordinate=function(t){},hn.prototype.isClosed=function(){},hn.prototype.setData=function(t){},hn.prototype.getData=function(){},hn.prototype.interfaces_=function(){return[]},hn.prototype.getClass=function(){return hn};var fn=function(){};fn.prototype.addIntersection=function(t,e){},fn.prototype.interfaces_=function(){return[hn]},fn.prototype.getClass=function(){return fn};var gn=function(){this._nodeList=new cn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};gn.prototype.getCoordinates=function(){return this._pts},gn.prototype.size=function(){return this._pts.length},gn.prototype.getCoordinate=function(t){return this._pts[t]},gn.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},gn.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},gn.prototype.setData=function(t){this._data=t},gn.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:pn.octant(t,e)},gn.prototype.getData=function(){return this._data},gn.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[3],o=new C(n.getIntersection(r));this.addIntersection(o,i)}},gn.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},gn.prototype.getNodeList=function(){return this._nodeList},gn.prototype.addIntersectionNode=function(t,e){var n=e,i=n+1;if(i<this._pts.length){var r=this._pts[i];t.equals2D(r)&&(n=i)}return this._nodeList.add(t,n)},gn.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},gn.prototype.interfaces_=function(){return[fn]},gn.prototype.getClass=function(){return gn},gn.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return gn.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){r.next().getNodeList().addSplitEdges(i)}};var dn=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new C,this.p1=new C;else if(1===arguments.length){var t=arguments[0];this.p0=new C(t.p0),this.p1=new C(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3];this.p0=new C(e,n),this.p1=new C(i,r)}},yn={serialVersionUID:{configurable:!0}};dn.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},dn.prototype.orientationIndex=function(){if(arguments[0]instanceof dn){var t=arguments[0],e=at.orientationIndex(this.p0,this.p1,t.p0),n=at.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof C){var i=arguments[0];return at.orientationIndex(this.p0,this.p1,i)}},dn.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},dn.prototype.isVertical=function(){return this.p0.x===this.p1.x},dn.prototype.equals=function(t){if(!(t instanceof dn))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},dn.prototype.intersection=function(t){var e=new rt;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},dn.prototype.project=function(){if(arguments[0]instanceof C){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new C(t);var e=this.projectionFactor(t),n=new C;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof dn){var i=arguments[0],r=this.projectionFactor(i.p0),o=this.projectionFactor(i.p1);if(r>=1&&o>=1)return null;if(r<=0&&o<=0)return null;var s=this.project(i.p0);r<0&&(s=this.p0),r>1&&(s=this.p1);var a=this.project(i.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new dn(s,a)}},dn.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},dn.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},dn.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},dn.prototype.distancePerpendicular=function(t){return at.distancePointLinePerpendicular(t,this.p0,this.p1)},dn.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},dn.prototype.midPoint=function(){return dn.midPoint(this.p0,this.p1)},dn.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return v.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i},dn.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=v.MAX_VALUE,r=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(r=s.distance(t.p1))<i&&(i=r,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(r=a.distance(this.p0))<i&&(i=r,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(r=u.distance(this.p1))<i&&(i=r,n[0]=this.p1,n[1]=u),n},dn.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},dn.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},dn.prototype.getLength=function(){return this.p0.distance(this.p1)},dn.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},dn.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},dn.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},dn.prototype.lineIntersection=function(t){try{return k.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof X))throw t}return null},dn.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},dn.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error(\"Cannot compute offset from zero-length line segment\");a=e*r/s,u=e*o/s}return new C(n-u,i+a)},dn.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},dn.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||v.isNaN(e))&&(e=1),e},dn.prototype.toString=function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},dn.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},dn.prototype.distance=function(){if(arguments[0]instanceof dn){var t=arguments[0];return at.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof C){var e=arguments[0];return at.distancePointLine(e,this.p0,this.p1)}},dn.prototype.pointAlong=function(t){var e=new C;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},dn.prototype.hashCode=function(){var t=v.doubleToLongBits(this.p0.x);t^=31*v.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=v.doubleToLongBits(this.p1.x);n^=31*v.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},dn.prototype.interfaces_=function(){return[E,e]},dn.prototype.getClass=function(){return dn},dn.midPoint=function(t,e){return new C((t.x+e.x)/2,(t.y+e.y)/2)},yn.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(dn,yn);var _n=function(){this.tempEnv1=new j,this.tempEnv2=new j,this._overlapSeg1=new dn,this._overlapSeg2=new dn};_n.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},_n.prototype.interfaces_=function(){return[]},_n.prototype.getClass=function(){return _n};var mn=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i};mn.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},mn.prototype.computeSelect=function(t,e,n,i){var r=this._pts[e],o=this._pts[n];if(i.tempEnv1.init(r,o),n-e==1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,i),s<n&&this.computeSelect(t,s,n,i)},mn.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},mn.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},mn.prototype.setId=function(t){this._id=t},mn.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},mn.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new j(t,e)}return this._env},mn.prototype.getEndIndex=function(){return this._end},mn.prototype.getStartIndex=function(){return this._start},mn.prototype.getContext=function(){return this._context},mn.prototype.getId=function(){return this._id},mn.prototype.computeOverlapsInternal=function(t,e,n,i,r,o){var s=this._pts[t],a=this._pts[e],u=n._pts[i],l=n._pts[r];if(e-t==1&&r-i==1)return o.overlap(this,t,n,i),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),p=Math.trunc((i+r)/2);t<c&&(i<p&&this.computeOverlapsInternal(t,c,n,i,p,o),p<r&&this.computeOverlapsInternal(t,c,n,p,r,o)),c<e&&(i<p&&this.computeOverlapsInternal(c,e,n,i,p,o),p<r&&this.computeOverlapsInternal(c,e,n,p,r,o))},mn.prototype.interfaces_=function(){return[]},mn.prototype.getClass=function(){return mn};var vn=function(){};vn.prototype.interfaces_=function(){return[]},vn.prototype.getClass=function(){return vn},vn.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=vn.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return vn.toIntArray(n)},vn.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Be.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){if(Be.quadrant(t[r-1],t[r])!==i)break}r++}return r-1},vn.getChains=function(){if(1===arguments.length){var t=arguments[0];return vn.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new Nt,r=vn.getChainStartIndices(e),o=0;o<r.length-1;o++){var s=new mn(e,r[o],r[o+1],n);i.add(s)}return i}},vn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var In=function(){};In.prototype.computeNodes=function(t){},In.prototype.getNodedSubstrings=function(){},In.prototype.interfaces_=function(){return[]},In.prototype.getClass=function(){return In};var En=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};En.prototype.setSegmentIntersector=function(t){this._segInt=t},En.prototype.interfaces_=function(){return[In]},En.prototype.getClass=function(){return En};var xn=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new Nt,this._index=new sn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=vn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new Nn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this._index.query(n.getEnvelope()).iterator();i.hasNext();){var r=i.next();if(r.getId()>n.getId()&&(n.computeOverlaps(r,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return Nn},Object.defineProperties(e,n),e}(En),Nn=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3],o=e.getContext(),s=i.getContext();this._si.processIntersections(o,n,s,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(_n),Cn=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Sn={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Cn.prototype.getEndCapStyle=function(){return this._endCapStyle},Cn.prototype.isSingleSided=function(){return this._isSingleSided},Cn.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Cn.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Cn.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Cn.JOIN_ROUND&&(this._quadrantSegments=Cn.DEFAULT_QUADRANT_SEGMENTS)},Cn.prototype.getJoinStyle=function(){return this._joinStyle},Cn.prototype.setJoinStyle=function(t){this._joinStyle=t},Cn.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Cn.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Cn.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Cn.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Cn.prototype.getMitreLimit=function(){return this._mitreLimit},Cn.prototype.setMitreLimit=function(t){this._mitreLimit=t},Cn.prototype.setSingleSided=function(t){this._isSingleSided=t},Cn.prototype.interfaces_=function(){return[]},Cn.prototype.getClass=function(){return Cn},Cn.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Sn.CAP_ROUND.get=function(){return 1},Sn.CAP_FLAT.get=function(){return 2},Sn.CAP_SQUARE.get=function(){return 3},Sn.JOIN_ROUND.get=function(){return 1},Sn.JOIN_MITRE.get=function(){return 2},Sn.JOIN_BEVEL.get=function(){return 3},Sn.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Sn.DEFAULT_MITRE_LIMIT.get=function(){return 5},Sn.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Cn,Sn);var Ln=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=at.COUNTERCLOCKWISE,this._inputLine=t||null},bn={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Ln.prototype.isDeletable=function(t,e,n,i){var r=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(r,o,s)&&(!!this.isShallow(r,o,s,i)&&this.isShallowSampled(r,o,t,n,i))},Ln.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;n<this._inputLine.length;){var r=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Ln.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},Ln.prototype.isShallowConcavity=function(t,e,n,i){if(!(at.computeOrientation(t,e,n)===this._angleOrientation))return!1;return at.distancePointLine(e,t,n)<i},Ln.prototype.isShallowSampled=function(t,e,n,i,r){var o=Math.trunc((i-n)/Ln.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<i;s+=o)if(!this.isShallow(t,e,this._inputLine[s],r))return!1;return!0},Ln.prototype.isConcave=function(t,e,n){var i=at.computeOrientation(t,e,n)===this._angleOrientation;return i},Ln.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=at.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Ln.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Ln.DELETE;)e++;return e},Ln.prototype.isShallow=function(t,e,n,i){return at.distancePointLine(e,t,n)<i},Ln.prototype.collapseLine=function(){for(var t=new St,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Ln.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Ln.prototype.interfaces_=function(){return[]},Ln.prototype.getClass=function(){return Ln},Ln.simplify=function(t,e){return new Ln(t).simplify(e)},bn.INIT.get=function(){return 0},bn.DELETE.get=function(){return 1},bn.KEEP.get=function(){return 1},bn.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Ln,bn);var wn=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Nt},On={COORDINATE_ARRAY_TYPE:{configurable:!0}};wn.prototype.getCoordinates=function(){return this._ptList.toArray(wn.COORDINATE_ARRAY_TYPE)},wn.prototype.setPrecisionModel=function(t){this._precisionModel=t},wn.prototype.addPt=function(t){var e=new C(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},wn.prototype.revere=function(){},wn.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var i=t.length-1;i>=0;i--)this.addPt(t[i])},wn.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},wn.prototype.toString=function(){return(new _e).createLineString(this.getCoordinates()).toString()},wn.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new C(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},wn.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},wn.prototype.interfaces_=function(){return[]},wn.prototype.getClass=function(){return wn},On.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(wn,On);var Tn=function(){},Rn={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Tn.prototype.interfaces_=function(){return[]},Tn.prototype.getClass=function(){return Tn},Tn.toDegrees=function(t){return 180*t/Math.PI},Tn.normalize=function(t){for(;t>Math.PI;)t-=Tn.PI_TIMES_2;for(;t<=-Math.PI;)t+=Tn.PI_TIMES_2;return t},Tn.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Tn.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0},Tn.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0},Tn.interiorAngle=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Math.abs(r-i)},Tn.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Tn.PI_TIMES_2;t>=Tn.PI_TIMES_2&&(t=0)}else{for(;t>=Tn.PI_TIMES_2;)t-=Tn.PI_TIMES_2;t<0&&(t=0)}return t},Tn.angleBetween=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Tn.diff(i,r)},Tn.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Tn.toRadians=function(t){return t*Math.PI/180},Tn.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Tn.COUNTERCLOCKWISE:n<0?Tn.CLOCKWISE:Tn.NONE},Tn.angleBetweenOriented=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n)-i;return r<=-Math.PI?r+Tn.PI_TIMES_2:r>Math.PI?r-Tn.PI_TIMES_2:r},Rn.PI_TIMES_2.get=function(){return 2*Math.PI},Rn.PI_OVER_2.get=function(){return Math.PI/2},Rn.PI_OVER_4.get=function(){return Math.PI/4},Rn.COUNTERCLOCKWISE.get=function(){return at.COUNTERCLOCKWISE},Rn.CLOCKWISE.get=function(){return at.CLOCKWISE},Rn.NONE.get=function(){return at.COLLINEAR},Object.defineProperties(Tn,Rn);var Pn=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new dn,this._seg1=new dn,this._offset0=new dn,this._offset1=new dn,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rt,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===Cn.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)},Dn={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Pn.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=at.computeOrientation(this._s0,this._s1,this._s2),i=n===at.CLOCKWISE&&this._side===Se.LEFT||n===at.COUNTERCLOCKWISE&&this._side===Se.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Pn.prototype.addLineEndCap=function(t,e){var n=new dn(t,e),i=new dn;this.computeOffsetSegment(n,Se.LEFT,this._distance,i);var r=new dn;this.computeOffsetSegment(n,Se.RIGHT,this._distance,r);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:this._segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,at.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case Cn.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case Cn.CAP_SQUARE:var u=new C;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new C(i.p1.x+u.x,i.p1.y+u.y),c=new C(r.p1.x+u.x,r.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(c)}},Pn.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Pn.prototype.addMitreJoin=function(t,e,n,i){var r=!0,o=null;try{o=k.intersection(e.p0,e.p1,n.p0,n.p1);(i<=0?1:o.distance(t)/Math.abs(i))>this._bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof X))throw t;o=new C(0,0),r=!1}r?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())},Pn.prototype.addFilletCorner=function(t,e,n,i,r){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,c=Math.atan2(l,u);i===at.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,i,r),this._segList.addPt(n)},Pn.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Pn.prototype.createSquare=function(t){this._segList.addPt(new C(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new C(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Pn.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Pn.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Pn.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Pn.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Pn.prototype.addLimitedMitreJoin=function(t,e,n,i){var r=this._seg0.p1,o=Tn.angle(r,this._seg0.p0),s=Tn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,a=Tn.normalize(o+s),u=Tn.normalize(a+Math.PI),l=i*n,c=n-l*Math.abs(Math.sin(s)),p=r.x+l*Math.cos(u),h=r.y+l*Math.sin(u),f=new C(p,h),g=new dn(r,f),d=g.pointAlongOffset(1,c),y=g.pointAlongOffset(1,-c);this._side===Se.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Pn.prototype.computeOffsetSegment=function(t,e,n,i){var r=e===Se.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=r*n*o/a,l=r*n*s/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},Pn.prototype.addFilletArc=function(t,e,n,i,r){var o=i===at.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=0,c=new C;l<s;){var p=e+o*l;c.x=t.x+r*Math.cos(p),c.y=t.y+r*Math.sin(p),this._segList.addPt(c),l+=u}},Pn.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new C((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var i=new C((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Pn.prototype.createCircle=function(t){var e=new C(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Pn.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Pn.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new wn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Pn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Pn.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL||this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,at.CLOCKWISE,this._distance))},Pn.prototype.closeRing=function(){this._segList.closeRing()},Pn.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Pn.prototype.interfaces_=function(){return[]},Pn.prototype.getClass=function(){return Pn},Dn.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Dn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Dn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Dn.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Pn,Dn);var Mn=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Mn.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var o=r.getCoordinates();return n&&Lt.reverse(o),o},Mn.prototype.computeSingleSidedBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{n.addSegments(t,!1);var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()},Mn.prototype.computeRingBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);e===Se.RIGHT&&(i=-i);var r=Ln.simplify(t,i),o=r.length-1;n.initSideSegments(r[o-1],r[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(r[s],a)}n.closeRing()},Mn.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),i=Ln.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],Se.LEFT);for(var o=2;o<=r;o++)e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var s=Ln.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Se.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Mn.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:e.createCircle(t);break;case Cn.CAP_SQUARE:e.createSquare(t)}},Mn.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()},Mn.prototype.getBufferParameters=function(){return this._bufParams},Mn.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Mn.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Mn.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},Mn.prototype.computeOffsetCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()},Mn.prototype.getSegGen=function(t){return new Pn(this._precisionModel,this._bufParams,t)},Mn.prototype.interfaces_=function(){return[]},Mn.prototype.getClass=function(){return Mn},Mn.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new C(t[n]);return e};var An=function(){this._subgraphs=null,this._seg=new dn,this._cga=new at;var t=arguments[0];this._subgraphs=t},Fn={DepthSegment:{configurable:!0}};An.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new Nt,n=this._subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(T(arguments[2],xt)&&arguments[0]instanceof C&&arguments[1]instanceof ze)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),l=0;l<u.length-1;l++){this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||at.computeOrientation(this._seg.p0,this._seg.p1,o)===at.RIGHT)){var c=s.getDepth(Se.LEFT);this._seg.p0.equals(u[l])||(c=s.getDepth(Se.RIGHT));var p=new Gn(this._seg,c);a.add(p)}}else if(T(arguments[2],xt)&&arguments[0]instanceof C&&T(arguments[1],xt))for(var h=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(h,y,g)}},An.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $e.min(e)._leftDepth},An.prototype.interfaces_=function(){return[]},An.prototype.getClass=function(){return An},Fn.DepthSegment.get=function(){return Gn},Object.defineProperties(An,Fn);var Gn=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new dn(t),this._leftDepth=e};Gn.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Gn.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Gn.prototype.toString=function(){return this._upwardSeg.toString()},Gn.prototype.interfaces_=function(){return[E]},Gn.prototype.getClass=function(){return Gn};var qn=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};qn.prototype.area=function(){return qn.area(this.p0,this.p1,this.p2)},qn.prototype.signedArea=function(){return qn.signedArea(this.p0,this.p1,this.p2)},qn.prototype.interpolateZ=function(t){if(null===t)throw new m(\"Supplied point is null.\");return qn.interpolateZ(t,this.p0,this.p1,this.p2)},qn.prototype.longestSideLength=function(){return qn.longestSideLength(this.p0,this.p1,this.p2)},qn.prototype.isAcute=function(){return qn.isAcute(this.p0,this.p1,this.p2)},qn.prototype.circumcentre=function(){return qn.circumcentre(this.p0,this.p1,this.p2)},qn.prototype.area3D=function(){return qn.area3D(this.p0,this.p1,this.p2)},qn.prototype.centroid=function(){return qn.centroid(this.p0,this.p1,this.p2)},qn.prototype.inCentre=function(){return qn.inCentre(this.p0,this.p1,this.p2)},qn.prototype.interfaces_=function(){return[]},qn.prototype.getClass=function(){return qn},qn.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},qn.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},qn.det=function(t,e,n,i){return t*i-e*n},qn.interpolateZ=function(t,e,n,i){var r=e.x,o=e.y,s=n.x-r,a=i.x-r,u=n.y-o,l=i.y-o,c=s*l-a*u,p=t.x-r,h=t.y-o,f=(l*p-a*h)/c,g=(-u*p+s*h)/c;return e.z+f*(n.z-e.z)+g*(i.z-e.z)},qn.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),o=n.distance(t),s=i;return r>s&&(s=r),o>s&&(s=o),s},qn.isAcute=function(t,e,n){return!!Tn.isAcute(t,e,n)&&(!!Tn.isAcute(e,n,t)&&!!Tn.isAcute(n,t,e))},qn.circumcentre=function(t,e,n){var i=n.x,r=n.y,o=t.x-i,s=t.y-r,a=e.x-i,u=e.y-r,l=2*qn.det(o,s,a,u),c=qn.det(s,o*o+s*s,u,a*a+u*u),p=qn.det(o,o*o+s*s,a,a*a+u*u);return new C(i-c/l,r+p/l)},qn.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new k(t.x+n/2,t.y+i/2,1),o=new k(t.x-i+n/2,t.y+n+i/2,1);return new k(r,o)},qn.angleBisector=function(t,e,n){var i=e.distance(t),r=i/(i+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new C(t.x+r*o,t.y+r*s)},qn.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-o*a,c=o*s-i*u,p=i*a-r*s,h=l*l+c*c+p*p,f=Math.sqrt(h)/2;return f},qn.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new C(i,r)},qn.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),o=t.distance(e),s=i+r+o,a=(i*t.x+r*e.x+o*n.x)/s,u=(i*t.y+r*e.y+o*n.y)/s;return new C(a,u)};var Bn=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Bn.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addPolygon=function(t){var e=this._distance,n=Se.LEFT;this._distance<0&&(e=-this._distance,n=Se.RIGHT);var i=t.getExteriorRing(),r=Lt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,w.EXTERIOR,w.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Lt.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Se.opposite(n),w.INTERIOR,w.EXTERIOR)}},Bn.prototype.isTriangleErodedCompletely=function(t,e){var n=new qn(t[0],t[1],t[2]),i=n.inCentre();return at.distancePointLine(i,n.p0,n.p1)<Math.abs(e)},Bn.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Lt.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var i=new gn(t,new Pe(0,w.BOUNDARY,e,n));this._curveList.add(i)},Bn.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Bn.prototype.addPolygonRing=function(t,e,n,i,r){if(0===e&&t.length<ee.MINIMUM_VALID_SIZE)return null;var o=i,s=r;t.length>=ee.MINIMUM_VALID_SIZE&&at.isCCW(t)&&(o=r,s=i,n=Se.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Bn.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $t?this.addPolygon(t):t instanceof Kt?this.addLineString(t):t instanceof Qt?this.addPoint(t):t instanceof te?this.addCollection(t):t instanceof Xt?this.addCollection(t):t instanceof ne?this.addCollection(t):t instanceof zt&&this.addCollection(t)},Bn.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r},Bn.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Bn.prototype.interfaces_=function(){return[]},Bn.prototype.getClass=function(){return Bn};var Vn=function(){};Vn.prototype.locate=function(t){},Vn.prototype.interfaces_=function(){return[]},Vn.prototype.getClass=function(){return Vn};var Un=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};Un.prototype.next=function(){if(this._atStart)return this._atStart=!1,Un.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new i;var t=this._parent.getGeometryN(this._index++);return t instanceof zt?(this._subcollectionIterator=new Un(t),this._subcollectionIterator.next()):t},Un.prototype.remove=function(){throw new Error(this.getClass().getName())},Un.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},Un.prototype.interfaces_=function(){return[Et]},Un.prototype.getClass=function(){return Un},Un.isAtomic=function(t){return!(t instanceof zt)};var zn=function(){this._geom=null;var t=arguments[0];this._geom=t};zn.prototype.locate=function(t){return zn.locate(t,this._geom)},zn.prototype.interfaces_=function(){return[Vn]},zn.prototype.getClass=function(){return zn},zn.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&at.isPointInRing(t,e.getCoordinates())},zn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(zn.isPointInRing(t,r))return!1}return!0},zn.containsPoint=function(t,e){if(e instanceof $t)return zn.containsPointInPolygon(t,e);if(e instanceof zt)for(var n=new Un(e);n.hasNext();){var i=n.next();if(i!==e&&zn.containsPoint(t,i))return!0}return!1},zn.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:zn.containsPoint(t,e)?w.INTERIOR:w.EXTERIOR};var Xn=function(){this._edgeMap=new p,this._edgeList=null,this._ptInAreaLocation=[w.NONE,w.NONE]};Xn.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},Xn.prototype.propagateSideLabels=function(t){for(var e=w.NONE,n=this.iterator();n.hasNext();){var i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,Se.LEFT)!==w.NONE&&(e=i.getLocation(t,Se.LEFT))}if(e===w.NONE)return null;for(var r=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Se.ON)===w.NONE&&a.setLocation(t,Se.ON,r),a.isArea(t)){var u=a.getLocation(t,Se.LEFT),l=a.getLocation(t,Se.RIGHT);if(l!==w.NONE){if(l!==r)throw new we(\"side location conflict\",s.getCoordinate());u===w.NONE&&et.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),r=u}else et.isTrue(a.getLocation(t,Se.LEFT)===w.NONE,\"found single null side\"),a.setLocation(t,Se.RIGHT,r),a.setLocation(t,Se.LEFT,r)}}},Xn.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},Xn.prototype.print=function(t){Y.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Xn.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},Xn.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel().getLocation(t,Se.LEFT);et.isTrue(i!==w.NONE,\"Found unlabelled area edge\");for(var r=i,o=this.iterator();o.hasNext();){var s=o.next().getLabel();et.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,Se.LEFT),u=s.getLocation(t,Se.RIGHT);if(a===u)return!1;if(u!==r)return!1;r=a}return!0},Xn.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},Xn.prototype.iterator=function(){return this.getEdges().iterator()},Xn.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new Nt(this._edgeMap.values())),this._edgeList},Xn.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===w.NONE&&(this._ptInAreaLocation[t]=zn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},Xn.prototype.toString=function(){var t=new D;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},Xn.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},Xn.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next().getLabel(),r=0;r<2;r++)i.isLine(r)&&i.getLocation(r)===w.BOUNDARY&&(e[r]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=w.NONE;if(e[u])l=w.EXTERIOR;else{var c=s.getCoordinate();l=this.getLocation(u,c,t)}a.setAllLocationsIfNull(u,l)}},Xn.prototype.getDegree=function(){return this._edgeMap.size()},Xn.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},Xn.prototype.interfaces_=function(){return[]},Xn.prototype.getClass=function(){return Xn};var Yn=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var r=this._resultAreaEdgeList.get(i),o=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new we(\"no outgoing dirEdge found\",this.getCoordinate());et.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),o=i.getQuadrant();return Be.isNorthern(r)&&Be.isNorthern(o)?n:Be.isNorthern(r)||Be.isNorthern(o)?0!==n.getDy()?n:0!==i.getDy()?i:(et.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):i},e.prototype.print=function(t){Y.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Nt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Se.LEFT),i=t.getDepth(Se.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,r)!==i)throw new we(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var l=this._edgeList.get(u);l.setEdgeDepths(Se.RIGHT,a),a=l.getDepth(Se.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,i=this._SCANNING_FOR_INCOMING,r=this._resultAreaEdgeList.size()-1;r>=0;r--){var o=this._resultAreaEdgeList.get(r),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),i){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(et.isTrue(null!==e,\"found null for first outgoing dirEdge\"),et.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],i=0,r=this.iterator();r.hasNext();){r.next().getEdgeRing()===n&&i++}return i}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=w.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=w.INTERIOR;break}if(i.isInResult()){t=w.EXTERIOR;break}}}if(t===w.NONE)return null;for(var r=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(r===w.INTERIOR):(s.isInResult()&&(r=w.EXTERIOR),a.isInResult()&&(r=w.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Pe(w.NONE);for(var n=this.iterator();n.hasNext();)for(var i=n.next().getEdge().getLabel(),r=0;r<2;r++){var o=i.getLocation(r);o!==w.INTERIOR&&o!==w.BOUNDARY||this._label.setLocation(r,w.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xn),kn=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new Ge(t,new Yn)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xe),jn=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};jn.prototype.compareTo=function(t){var e=t;return jn.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},jn.prototype.interfaces_=function(){return[E]},jn.prototype.getClass=function(){return jn},jn.orientation=function(t){return 1===Lt.increasingDirection(t)},jn.compareOriented=function(t,e,n,i){for(var r=e?1:-1,o=i?1:-1,s=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var c=t[u].compareTo(n[l]);if(0!==c)return c;var p=(u+=r)===s,h=(l+=o)===a;if(p&&!h)return-1;if(!p&&h)return 1;if(p&&h)return 0}};var Hn=function(){this._edges=new Nt,this._ocaMap=new p};Hn.prototype.print=function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},Hn.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Hn.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Hn.prototype.iterator=function(){return this._edges.iterator()},Hn.prototype.getEdges=function(){return this._edges},Hn.prototype.get=function(t){return this._edges.get(t)},Hn.prototype.findEqualEdge=function(t){var e=new jn(t.getCoordinates());return this._ocaMap.get(e)},Hn.prototype.add=function(t){this._edges.add(t);var e=new jn(t.getCoordinates());this._ocaMap.put(e,t)},Hn.prototype.interfaces_=function(){return[]},Hn.prototype.getClass=function(){return Hn};var Wn=function(){};Wn.prototype.processIntersections=function(t,e,n,i){},Wn.prototype.isDone=function(){},Wn.prototype.interfaces_=function(){return[]},Wn.prototype.getClass=function(){return Wn};var Kn=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Kn.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Kn.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},Kn.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Kn.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Kn.prototype.getLineIntersector=function(){return this._li},Kn.prototype.hasProperIntersection=function(){return this._hasProper},Kn.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Kn.prototype.hasIntersection=function(){return this._hasIntersection},Kn.prototype.isDone=function(){return!1},Kn.prototype.hasInteriorIntersection=function(){return this._hasInterior},Kn.prototype.interfaces_=function(){return[Wn]},Kn.prototype.getClass=function(){return Kn},Kn.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jn=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new C(t),this.segmentIndex=e,this.dist=n};Jn.prototype.getSegmentIndex=function(){return this.segmentIndex},Jn.prototype.getCoordinate=function(){return this.coord},Jn.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},Jn.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jn.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jn.prototype.toString=function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},Jn.prototype.getDistance=function(){return this.dist},Jn.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jn.prototype.interfaces_=function(){return[E]},Jn.prototype.getClass=function(){return Jn};var Qn=function(){this._nodeMap=new p,this.edge=null;var t=arguments[0];this.edge=t};Qn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Qn.prototype.iterator=function(){return this._nodeMap.values().iterator()},Qn.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},Qn.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Qn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return r&&(o[s]=e.coord),new ni(o,new Pe(this.edge._label))},Qn.prototype.add=function(t,e,n){var i=new Jn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)},Qn.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Qn.prototype.interfaces_=function(){return[]},Qn.prototype.getClass=function(){return Qn};var Zn=function(){};Zn.prototype.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=this.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return Zn.toIntArray(n)},Zn.prototype.findChainEnd=function(t,e){for(var n=Be.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){if(Be.quadrant(t[i-1],t[i])!==n)break;i++}return i-1},Zn.prototype.interfaces_=function(){return[]},Zn.prototype.getClass=function(){return Zn},Zn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var $n=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new j,this.env2=new j;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Zn;this.startIndex=e.getChainStartIndices(this.pts)};$n.prototype.getCoordinates=function(){return this.pts},$n.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},$n.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},$n.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],c=this.pts[r],p=this.pts[o],h=s.pts[a],f=s.pts[u];if(o-r==1&&u-a==1)return l.addIntersections(this.e,r,s.e,a),null;if(this.env1.init(c,p),this.env2.init(h,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((r+o)/2),d=Math.trunc((a+u)/2);r<g&&(a<d&&this.computeIntersectsForChain(r,g,s,a,d,l),d<u&&this.computeIntersectsForChain(r,g,s,d,u,l)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,l),d<u&&this.computeIntersectsForChain(g,o,s,d,u,l))}},$n.prototype.getStartIndexes=function(){return this.startIndex},$n.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},$n.prototype.interfaces_=function(){return[]},$n.prototype.getClass=function(){return $n};var ti=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},ei={NULL_VALUE:{configurable:!0}};ti.prototype.getDepth=function(t,e){return this._depth[t][e]},ti.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},ti.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==ti.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===ti.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._depth[i][r]===ti.NULL_VALUE}},ti.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}},ti.prototype.getDelta=function(t){return this._depth[t][Se.RIGHT]-this._depth[t][Se.LEFT]},ti.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?w.EXTERIOR:w.INTERIOR},ti.prototype.toString=function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]},ti.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var i=t.getLocation(e,n);i!==w.EXTERIOR&&i!==w.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=ti.depthAtLocation(i):this._depth[e][n]+=ti.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],o=arguments[1];arguments[2]===w.INTERIOR&&this._depth[r][o]++}},ti.prototype.interfaces_=function(){return[]},ti.prototype.getClass=function(){return ti},ti.depthAtLocation=function(t){return t===w.EXTERIOR?0:t===w.INTERIOR?1:ti.NULL_VALUE},ei.NULL_VALUE.get=function(){return-1},Object.defineProperties(ti,ei);var ni=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Qn(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ti,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.pts=i,this._label=r}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Pe.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var i=!0,r=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(i=!1),this.pts[s].equals2D(n.pts[--o])||(r=!1),!i&&!r)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new $n(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new j;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,i){var r=new C(t.getIntersection(i)),o=e,s=t.getEdgeDistance(n,i),a=o+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(o=a,s=0)}this.eiList.add(r,o,s)},e.prototype.toString=function(){var t=new D;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Se.ON),e.getLocation(1,Se.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Se.LEFT),e.getLocation(1,Se.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Se.RIGHT),e.getLocation(1,Se.RIGHT),2))},e}(Fe),ii=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Hn,this._bufParams=t||null};ii.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},ii.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip(),n.merge(i);var r=ii.depthDelta(i),o=e.getDepthDelta()+r;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(ii.depthDelta(t.getLabel()))},ii.prototype.buildSubgraphs=function(t,e){for(var n=new Nt,i=t.iterator();i.hasNext();){var r=i.next(),o=r.getRightmostCoordinate(),s=new An(n).getDepth(o);r.computeDepth(s),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},ii.prototype.createSubgraphs=function(t){for(var e=new Nt,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new Te;r.create(i),e.add(r)}}return $e.sort(e,$e.reverseOrder()),e},ii.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},ii.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new xn,n=new rt;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kn(n)),e},ii.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var i=new Mn(n,this._bufParams),r=new Bn(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new Ye(new kn),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new ke(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},ii.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings().iterator();i.hasNext();){var r=i.next(),o=r.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=r.getData(),a=new ni(r.getCoordinates(),new Pe(s));this.insertUniqueEdge(a)}}},ii.prototype.setNoder=function(t){this._workingNoder=t},ii.prototype.interfaces_=function(){return[]},ii.prototype.getClass=function(){return ii},ii.depthDelta=function(t){var e=t.getLocation(0,Se.LEFT),n=t.getLocation(0,Se.RIGHT);return e===w.INTERIOR&&n===w.EXTERIOR?1:e===w.EXTERIOR&&n===w.INTERIOR?-1:0},ii.convertSegStrings=function(t){for(var e=new _e,n=new Nt;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)};var ri=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=i,this._offsetX=r,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};ri.prototype.rescale=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],i=0;i<n.length;i++)n[i].x=n[i].x/this._scaleFactor+this._offsetX,n[i].y=n[i].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Y.out.println(n)}},ri.prototype.scale=function(){if(T(arguments[0],It)){for(var t=arguments[0],e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new gn(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],o=new Array(r.length).fill(null),s=0;s<r.length;s++)o[s]=new C(Math.round((r[s].x-this._offsetX)*this._scaleFactor),Math.round((r[s].y-this._offsetY)*this._scaleFactor),r[s].z);return Lt.removeRepeatedPoints(o)}},ri.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},ri.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},ri.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},ri.prototype.interfaces_=function(){return[In]},ri.prototype.getClass=function(){return ri};var oi=function(){this._li=new rt,this._segStrings=null;var t=arguments[0];this._segStrings=t},si={fact:{configurable:!0}};oi.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1].iterator();i.hasNext();)for(var r=i.next().getCoordinates(),o=1;o<r.length-1;o++)if(r[o].equals(n))throw new $(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)},oi.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],o=arguments[1],s=r.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var l=0;l<a.length-1;l++)this.checkInteriorIntersections(r,u,o,l);else if(4===arguments.length){var c=arguments[0],p=arguments[1],h=arguments[2],f=arguments[3];if(c===h&&p===f)return null;var g=c.getCoordinates()[p],d=c.getCoordinates()[p+1],y=h.getCoordinates()[f],_=h.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new $(\"found non-noded intersection at \"+g+\"-\"+d+\" and \"+y+\"-\"+_)}},oi.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},oi.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),i=0;i<n.length-2;i++)this.checkCollapse(n[i],n[i+1],n[i+2])},oi.prototype.hasInteriorIntersection=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},oi.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new $(\"found non-noded collapse at \"+oi.fact.createLineString([t,e,n]))},oi.prototype.interfaces_=function(){return[]},oi.prototype.getClass=function(){return oi},si.fact.get=function(){return new _e},Object.defineProperties(oi,si);var ai=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new m(\"Scale factor must be non-zero\");1!==e&&(this._pt=new C(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new C,this._p1Scaled=new C),this.initCorners(this._pt)},ui={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};ai.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>i||this._maxy<r||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return et.isTrue(!(s&&a),\"Found bad envelope test\"),a},ai.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new C(this._maxx,this._maxy),this._corner[1]=new C(this._minx,this._maxy),this._corner[2]=new C(this._minx,this._miny),this._corner[3]=new C(this._maxx,this._miny)},ai.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},ai.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},ai.prototype.getCoordinate=function(){return this._originalPt},ai.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},ai.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=ai.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new j(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},ai.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},ai.prototype.intersectsToleranceSquare=function(t,e){var n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},ai.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)},ai.prototype.interfaces_=function(){return[]},ai.prototype.getClass=function(){return ai},ui.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(ai,ui);var li=function(){this.tempEnv1=new j,this.selectedSegment=new dn};li.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},li.prototype.interfaces_=function(){return[]},li.prototype.getClass=function(){return li};var ci=function(){this._index=null;var t=arguments[0];this._index=t},pi={HotPixelSnapAction:{configurable:!0}};ci.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),o=new hi(e,n,i);return this._index.query(r,{interfaces_:function(){return[Ke]},visitItem:function(t){t.select(r,o)}}),o.isNodeAdded()}},ci.prototype.interfaces_=function(){return[]},ci.prototype.getClass=function(){return ci},pi.HotPixelSnapAction.get=function(){return hi},Object.defineProperties(ci,pi);var hi=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],i=e.getContext();if(null!==this._parentEdge&&i===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(i,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(li),fi=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new Nt};fi.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}},fi.prototype.isDone=function(){return!1},fi.prototype.getInteriorIntersections=function(){return this._interiorIntersections},fi.prototype.interfaces_=function(){return[Wn]},fi.prototype.getClass=function(){return fi};var gi=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rt,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};gi.prototype.checkCorrectness=function(t){var e=gn.getNodedSubstrings(t),n=new oi(e);try{n.checkValid()}catch(t){if(!(t instanceof z))throw t;t.printStackTrace()}},gi.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},gi.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},gi.prototype.findInteriorIntersections=function(t,e){var n=new fi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},gi.prototype.computeVertexSnaps=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof gn)for(var n=arguments[0],i=n.getCoordinates(),r=0;r<i.length;r++){var o=new ai(i[r],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,r)&&n.addIntersection(i[r],r)}},gi.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new xn,this._pointSnapper=new ci(this._noder.getIndex()),this.snapRound(t,this._li)},gi.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new ai(n,this._scaleFactor,this._li);this._pointSnapper.snap(i)}},gi.prototype.interfaces_=function(){return[In]},gi.prototype.getClass=function(){return gi};var di=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Cn,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},yi={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};di.prototype.bufferFixedPrecision=function(t){var e=new ri(new gi(new fe(1)),t.getScale()),n=new ii(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},di.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=di.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof we))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],i=di.precisionScaleFactor(this._argGeom,this._distance,n),r=new fe(i);this.bufferFixedPrecision(r)}},di.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fe.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},di.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},di.prototype.bufferOriginalPrecision=function(){try{var t=new ii(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof $))throw t;this._saveException=t}},di.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},di.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},di.prototype.interfaces_=function(){return[]},di.prototype.getClass=function(){return di},di.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new di(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=arguments[2],o=new di(n);o.setQuadrantSegments(r);return o.getResultGeometry(i)}if(arguments[2]instanceof Cn&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new di(s,u).getResultGeometry(a)}}else if(4===arguments.length){var l=arguments[0],c=arguments[1],p=arguments[2],h=arguments[3],f=new di(l);f.setQuadrantSegments(p),f.setEndCapStyle(h);return f.getResultGeometry(c)}},di.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=R.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,o)},yi.CAP_ROUND.get=function(){return Cn.CAP_ROUND},yi.CAP_BUTT.get=function(){return Cn.CAP_FLAT},yi.CAP_FLAT.get=function(){return Cn.CAP_FLAT},yi.CAP_SQUARE.get=function(){return Cn.CAP_SQUARE},yi.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(di,yi);var _i=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};_i.prototype.getCoordinates=function(){return this._pt},_i.prototype.getCoordinate=function(t){return this._pt[t]},_i.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},_i.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},_i.prototype.getDistance=function(){return this._distance},_i.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},_i.prototype.interfaces_=function(){return[]},_i.prototype.getClass=function(){return _i};var mi=function(){};mi.prototype.interfaces_=function(){return[]},mi.prototype.getClass=function(){return mi},mi.computeDistance=function(){if(arguments[2]instanceof _i&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=t.getCoordinates(),r=new dn,o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof _i&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];mi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)mi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof _i&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)mi.computeDistance(p,h,f);else if(p instanceof $t)mi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);mi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof _i&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var vi=function(t){this._maxPtDist=new _i,this._inputGeom=t||null},Ii={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};vi.prototype.computeMaxMidpointDistance=function(t){var e=new xi(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.computeMaxVertexDistance=function(t){var e=new Ei(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},vi.prototype.getDistancePoints=function(){return this._maxPtDist},vi.prototype.interfaces_=function(){return[]},vi.prototype.getClass=function(){return vi},Ii.MaxPointDistanceFilter.get=function(){return Ei},Ii.MaxMidpointDistanceFilter.get=function(){return xi},Object.defineProperties(vi,Ii);var Ei=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};Ei.prototype.filter=function(t){this._minPtDist.initialize(),mi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ei.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ei.prototype.interfaces_=function(){return[ft]},Ei.prototype.getClass=function(){return Ei};var xi=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};xi.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=new C((n.x+i.x)/2,(n.y+i.y)/2);this._minPtDist.initialize(),mi.computeDistance(this._geom,r,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xi.prototype.isDone=function(){return!1},xi.prototype.isGeometryChanged=function(){return!1},xi.prototype.getMaxPointDistance=function(){return this._maxPtDist},xi.prototype.interfaces_=function(){return[Ut]},xi.prototype.getClass=function(){return xi};var Ni=function(t){this._comps=t||null};Ni.prototype.filter=function(t){t instanceof $t&&this._comps.add(t)},Ni.prototype.interfaces_=function(){return[Vt]},Ni.prototype.getClass=function(){return Ni},Ni.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Ni.getPolygons(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $t?n.add(e):e instanceof zt&&e.apply(new Ni(n)),n}};var Ci=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};Ci.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof ee){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Kt&&this._lines.add(t)},Ci.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Ci.prototype.interfaces_=function(){return[lt]},Ci.prototype.getClass=function(){return Ci},Ci.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Ci.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(Ci.getLines(e,n))}},Ci.getLines=function(){if(1===arguments.length){var t=arguments[0];return Ci.getLines(t,!1)}if(2===arguments.length){if(T(arguments[0],It)&&T(arguments[1],It)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();Ci.getLines(r,n)}return n}if(arguments[0]instanceof ct&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new Nt;return o.apply(new Ci(a,s)),a}if(arguments[0]instanceof ct&&T(arguments[1],It)){var u=arguments[0],l=arguments[1];return u instanceof Kt?l.add(u):u.apply(new Ci(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&T(arguments[0],It)&&T(arguments[1],It)){for(var c=arguments[0],p=arguments[1],h=arguments[2],f=c.iterator();f.hasNext();){var g=f.next();Ci.getLines(g,p,h)}return p}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof ct&&T(arguments[1],It)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new Ci(y,_)),y}}};var Si=function(){if(this._boundaryRule=gt.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new m(\"Rule must be non-null\");this._boundaryRule=t}};Si.prototype.locateInternal=function(){if(arguments[0]instanceof C&&arguments[1]instanceof $t){var t=arguments[0],e=arguments[1];if(e.isEmpty())return w.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===w.EXTERIOR)return w.EXTERIOR;if(i===w.BOUNDARY)return w.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var o=e.getInteriorRingN(r),s=this.locateInPolygonRing(t,o);if(s===w.INTERIOR)return w.EXTERIOR;if(s===w.BOUNDARY)return w.BOUNDARY}return w.INTERIOR}if(arguments[0]instanceof C&&arguments[1]instanceof Kt){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return w.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?at.isOnLine(a,l)?w.INTERIOR:w.EXTERIOR:w.BOUNDARY}if(arguments[0]instanceof C&&arguments[1]instanceof Qt){var c=arguments[0];return arguments[1].getCoordinate().equals2D(c)?w.INTERIOR:w.EXTERIOR}},Si.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?at.locatePointInRing(t,e.getCoordinates()):w.EXTERIOR},Si.prototype.intersects=function(t,e){return this.locate(t,e)!==w.EXTERIOR},Si.prototype.updateLocationInfo=function(t){t===w.INTERIOR&&(this._isIn=!0),t===w.BOUNDARY&&this._numBoundaries++},Si.prototype.computeLocation=function(t,e){if(e instanceof Qt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Kt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $t)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof ne)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof zt)for(var u=new Un(e);u.hasNext();){var l=u.next();l!==e&&this.computeLocation(t,l)}},Si.prototype.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:e instanceof Kt?this.locateInternal(t,e):e instanceof $t?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?w.BOUNDARY:this._numBoundaries>0||this._isIn?w.INTERIOR:w.EXTERIOR)},Si.prototype.interfaces_=function(){return[]},Si.prototype.getClass=function(){return Si};var Li=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._component=i,this._segIndex=r,this._pt=o}},bi={INSIDE_AREA:{configurable:!0}};Li.prototype.isInsideArea=function(){return this._segIndex===Li.INSIDE_AREA},Li.prototype.getCoordinate=function(){return this._pt},Li.prototype.getGeometryComponent=function(){return this._component},Li.prototype.getSegmentIndex=function(){return this._segIndex},Li.prototype.interfaces_=function(){return[]},Li.prototype.getClass=function(){return Li},bi.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Li,bi);var wi=function(t){this._pts=t||null};wi.prototype.filter=function(t){t instanceof Qt&&this._pts.add(t)},wi.prototype.interfaces_=function(){return[Vt]},wi.prototype.getClass=function(){return wi},wi.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Qt?$e.singletonList(t):wi.getPoints(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Qt?n.add(e):e instanceof zt&&e.apply(new wi(n)),n}};var Oi=function(){this._locations=null;var t=arguments[0];this._locations=t};Oi.prototype.filter=function(t){(t instanceof Qt||t instanceof Kt||t instanceof $t)&&this._locations.add(new Li(t,0,t.getCoordinate()))},Oi.prototype.interfaces_=function(){return[Vt]},Oi.prototype.getClass=function(){return Oi},Oi.getLocations=function(t){var e=new Nt;return t.apply(new Oi(e)),e};var Ti=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Si,this._minDistanceLocation=null,this._minDistance=v.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=i,this._terminateDistance=r}};Ti.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=Ni.getPolygons(this._geom[e]);if(r.size()>0){var o=Oi.getLocations(this._geom[i]);if(this.computeContainmentDistance(o,r,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[i]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&T(arguments[0],xt)&&T(arguments[1],xt)){for(var s=arguments[0],a=arguments[1],u=arguments[2],l=0;l<s.size();l++)for(var c=s.get(l),p=0;p<a.size();p++)if(this.computeContainmentDistance(c,a.get(p),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Li&&arguments[1]instanceof $t){var h=arguments[0],f=arguments[1],g=arguments[2],d=h.getCoordinate();if(w.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=h,g[1]=new Li(f,d),null}},Ti.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=Ci.getLines(this._geom[0]),n=Ci.getLines(this._geom[1]),i=wi.getPoints(this._geom[0]),r=wi.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},Ti.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Ti.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Ti.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Ti.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Qt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),o=0;o<i.length-1;o++){var s=at.distancePointLine(r,i[o],i[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new dn(i[o],i[o+1]).closestPoint(r);n[0]=new Li(t,o,a),n[1]=new Li(e,0,r)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Kt){var u=arguments[0],l=arguments[1],c=arguments[2];if(u.getEnvelopeInternal().distance(l.getEnvelopeInternal())>this._minDistance)return null;for(var p=u.getCoordinates(),h=l.getCoordinates(),f=0;f<p.length-1;f++)for(var g=0;g<h.length-1;g++){var d=at.distanceLineLine(p[f],p[f+1],h[g],h[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new dn(p[f],p[f+1]),_=new dn(h[g],h[g+1]),m=y.closestPoints(_);c[0]=new Li(u,f,m[0]),c[1]=new Li(l,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Ti.prototype.computeMinDistancePoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o),a=r.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Li(r,0,r.getCoordinate()),n[1]=new Li(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new m(\"null geometries are not supported\");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Ti.prototype.computeMinDistanceLines=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.interfaces_=function(){return[]},Ti.prototype.getClass=function(){return Ti},Ti.distance=function(t,e){return new Ti(t,e).distance()},Ti.isWithinDistance=function(t,e,n){return new Ti(t,e,n).distance()<=n},Ti.nearestPoints=function(t,e){return new Ti(t,e).nearestPoints()};var Ri=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};Ri.prototype.getCoordinates=function(){return this._pt},Ri.prototype.getCoordinate=function(t){return this._pt[t]},Ri.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},Ri.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},Ri.prototype.toString=function(){return Z.toLineString(this._pt[0],this._pt[1])},Ri.prototype.getDistance=function(){return this._distance},Ri.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},Ri.prototype.interfaces_=function(){return[]},Ri.prototype.getClass=function(){return Ri};var Pi=function(){};Pi.prototype.interfaces_=function(){return[]},Pi.prototype.getClass=function(){return Pi},Pi.computeDistance=function(){if(arguments[2]instanceof Ri&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=new dn,r=t.getCoordinates(),o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];Pi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Pi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)Pi.computeDistance(p,h,f);else if(p instanceof $t)Pi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Pi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var Di=function(){this._g0=null,this._g1=null,this._ptDist=new Ri,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Mi={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Di.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Di.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new m(\"Fraction is not in range (0.0 - 1.0]\");this._densifyFrac=t},Di.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Di.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Di.prototype.computeOrientedDistance=function(t,e,n){var i=new Ai(e);if(t.apply(i),n.setMaximum(i.getMaxPointDistance()),this._densifyFrac>0){var r=new Fi(e,this._densifyFrac);t.apply(r),n.setMaximum(r.getMaxPointDistance())}},Di.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Di.prototype.interfaces_=function(){return[]},Di.prototype.getClass=function(){return Di},Di.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Di(t,e).distance()}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new Di(n,i);return o.setDensifyFraction(r),o.distance()}},Mi.MaxPointDistanceFilter.get=function(){return Ai},Mi.MaxDensifiedByFractionDistanceFilter.get=function(){return Fi},Object.defineProperties(Di,Mi);var Ai=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._euclideanDist=new Pi,this._geom=null;var t=arguments[0];this._geom=t};Ai.prototype.filter=function(t){this._minPtDist.initialize(),Pi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ai.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ai.prototype.interfaces_=function(){return[ft]},Ai.prototype.getClass=function(){return Ai};var Fi=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Fi.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=(i.x-n.x)/this._numSubSegs,o=(i.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*r,u=n.y+s*o,l=new C(a,u);this._minPtDist.initialize(),Pi.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Fi.prototype.isDone=function(){return!1},Fi.prototype.isGeometryChanged=function(){return!1},Fi.prototype.getMaxPointDistance=function(){return this._maxPtDist},Fi.prototype.interfaces_=function(){return[Ut]},Fi.prototype.getClass=function(){return Fi};var Gi=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qi={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Gi.prototype.checkMaximumDistance=function(t,e,n){var i=new Di(e,t);if(i.setDensifyFraction(.25),this._maxDistanceFound=i.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var r=i.getCoordinates();this._errorLocation=r[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too large (\"+this._maxDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\")\"}},Gi.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Gi.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Gi.VERBOSE&&Y.out.println(\"Min Dist= \"+this._minDistanceFound+\"  err= \"+(1-this._minDistanceFound/this._bufDistance)+\"  Max Dist= \"+this._maxDistanceFound+\"  err= \"+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Gi.prototype.checkNegativeValid=function(){if(!(this._input instanceof $t||this._input instanceof ne||this._input instanceof zt))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Gi.prototype.getErrorIndicator=function(){return this._errorIndicator},Gi.prototype.checkMinimumDistance=function(t,e,n){var i=new Ti(t,e,n);if(this._minDistanceFound=i.distance(),this._minDistanceFound<n){this._isValid=!1;var r=i.nearestPoints();this._errorLocation=i.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too small (\"+this._minDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\" )\"}},Gi.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Gi.prototype.getErrorLocation=function(){return this._errorLocation},Gi.prototype.getPolygonLines=function(t){for(var e=new Nt,n=new Ci(e),i=Ni.getPolygons(t).iterator();i.hasNext();){i.next().apply(n)}return t.getFactory().buildGeometry(e)},Gi.prototype.getErrorMessage=function(){return this._errMsg},Gi.prototype.interfaces_=function(){return[]},Gi.prototype.getClass=function(){return Gi},qi.VERBOSE.get=function(){return!1},qi.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gi,qi);var Bi=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Vi={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Bi.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Bi.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Bi.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new j(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new j(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg=\"Buffer envelope is incorrect\",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report(\"Envelope\")},Bi.prototype.checkDistance=function(){var t=new Gi(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report(\"Distance\")},Bi.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg=\"Area of positive buffer is smaller than input\",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg=\"Area of negative buffer is larger than input\",this._errorIndicator=this._result),this.report(\"Area\")},Bi.prototype.checkPolygonal=function(){this._result instanceof $t||this._result instanceof ne||(this._isValid=!1),this._errorMsg=\"Result is not polygonal\",this._errorIndicator=this._result,this.report(\"Polygonal\")},Bi.prototype.getErrorIndicator=function(){return this._errorIndicator},Bi.prototype.getErrorLocation=function(){return this._errorLocation},Bi.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg=\"Result is non-empty\",this._errorIndicator=this._result),void this.report(\"ExpectedEmpty\"))},Bi.prototype.report=function(t){if(!Bi.VERBOSE)return null;Y.out.println(\"Check \"+t+\": \"+(this._isValid?\"passed\":\"FAILED\"))},Bi.prototype.getErrorMessage=function(){return this._errorMsg},Bi.prototype.interfaces_=function(){return[]},Bi.prototype.getClass=function(){return Bi},Bi.isValidMsg=function(t,e,n){var i=new Bi(t,e,n);return i.isValid()?null:i.getErrorMessage()},Bi.isValid=function(t,e,n){return!!new Bi(t,e,n).isValid()},Vi.VERBOSE.get=function(){return!1},Vi.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Bi,Vi);var Ui=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};Ui.prototype.getCoordinates=function(){return this._pts},Ui.prototype.size=function(){return this._pts.length},Ui.prototype.getCoordinate=function(t){return this._pts[t]},Ui.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},Ui.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:pn.octant(this.getCoordinate(t),this.getCoordinate(t+1))},Ui.prototype.setData=function(t){this._data=t},Ui.prototype.getData=function(){return this._data},Ui.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},Ui.prototype.interfaces_=function(){return[hn]},Ui.prototype.getClass=function(){return Ui};var zi=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Nt,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zi.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zi.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zi.prototype.getIntersectionSegments=function(){return this._intSegments},zi.prototype.count=function(){return this._intersectionCount},zi.prototype.getIntersections=function(){return this._intersections},zi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zi.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zi.prototype.processIntersections=function(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,i)))return null}var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=r,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zi.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zi.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zi.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zi.prototype.interfaces_=function(){return[Wn]},zi.prototype.getClass=function(){return zi},zi.createAllIntersectionsFinder=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e},zi.createAnyIntersectionFinder=function(t){return new zi(t)},zi.createIntersectionCounter=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var Xi=function(){this._li=new rt,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};Xi.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},Xi.prototype.getIntersections=function(){return this._segInt.getIntersections()},Xi.prototype.isValid=function(){return this.execute(),this._isValid},Xi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Xi.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zi(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new xn;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},Xi.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new we(this.getErrorMessage(),this._segInt.getInteriorIntersection())},Xi.prototype.getErrorMessage=function(){if(this._isValid)return\"no intersections found\";var t=this._segInt.getIntersectionSegments();return\"found non-noded intersection between \"+Z.toLineString(t[0],t[1])+\" and \"+Z.toLineString(t[2],t[3])},Xi.prototype.interfaces_=function(){return[]},Xi.prototype.getClass=function(){return Xi},Xi.computeIntersections=function(t){var e=new Xi(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Yi=function t(){this._nv=null;var e=arguments[0];this._nv=new Xi(t.toSegmentStrings(e))};Yi.prototype.checkValid=function(){this._nv.checkValid()},Yi.prototype.interfaces_=function(){return[]},Yi.prototype.getClass=function(){return Yi},Yi.toSegmentStrings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ui(i.getCoordinates(),i))}return e},Yi.checkValid=function(t){new Yi(t).checkValid()};var ki=function(t){this._mapOp=t};ki.prototype.map=function(t){for(var e=new Nt,n=0;n<t.getNumGeometries();n++){var i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(_e.toGeometryArray(e))},ki.prototype.interfaces_=function(){return[]},ki.prototype.getClass=function(){return ki},ki.map=function(t,e){return new ki(e).map(t)};var ji=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Nt,this._resultLineList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};ji.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},ji.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},ji.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},ji.prototype.collectLineEdge=function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Lr.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},ji.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getEdge();if(n.isLineEdge()&&!i.isCoveredSet()){var r=this._op.isCoveredByA(n.getCoordinate());i.setCovered(r)}}},ji.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},ji.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(i),n.setInResult(!0)}},ji.prototype.collectBoundaryTouchEdge=function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(et.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Lr.isResultOfOp(i,e)&&e===Lr.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},ji.prototype.interfaces_=function(){return[]},ji.prototype.getClass=function(){return ji};var Hi=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new Nt;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Hi.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Hi.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Lr.INTERSECTION))){var i=n.getLabel();Lr.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},Hi.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Hi.prototype.interfaces_=function(){return[]},Hi.prototype.getClass=function(){return Hi};var Wi=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Wi.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformPolygon=function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof ee&&!i.isEmpty()||(n=!1);for(var r=new Nt,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof ee||(n=!1),r.add(s))}if(n)return this._factory.createPolygon(i,r.toArray([]));var a=new Nt;return null!==i&&a.add(i),a.addAll(r),this._factory.buildGeometry(a)},Wi.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Wi.prototype.getInputGeometry=function(){return this._inputGeom},Wi.prototype.transformMultiLineString=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformCoordinates=function(t,e){return this.copy(t)},Wi.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformMultiPoint=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformMultiPolygon=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.copy=function(t){return t.copy()},Wi.prototype.transformGeometryCollection=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this._pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_e.toGeometryArray(n)):this._factory.buildGeometry(n)},Wi.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Qt)return this.transformPoint(t,null);if(t instanceof te)return this.transformMultiPoint(t,null);if(t instanceof ee)return this.transformLinearRing(t,null);if(t instanceof Kt)return this.transformLineString(t,null);if(t instanceof Xt)return this.transformMultiLineString(t,null);if(t instanceof $t)return this.transformPolygon(t,null);if(t instanceof ne)return this.transformMultiPolygon(t,null);if(t instanceof zt)return this.transformGeometryCollection(t,null);throw new m(\"Unknown Geometry subtype: \"+t.getClass().getName())},Wi.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Wi.prototype.interfaces_=function(){return[]},Wi.prototype.getClass=function(){return Wi};var Ki=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new dn,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Kt&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];this._srcPts=i,this._isClosed=t.isClosed(i),this._snapTolerance=r}};Ki.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;i<n;i++){var r=t.get(i),o=this.findSnapForVertex(r,e);null!==o&&(t.set(i,new C(o)),0===i&&this._isClosed&&t.set(t.size()-1,new C(o)))}},Ki.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Ki.prototype.snapTo=function(t){var e=new St(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Ki.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;i<n;i++){var r=e[i],o=this.findSegmentIndexToSnap(r,t);o>=0&&t.add(o+1,new C(r),!1)}},Ki.prototype.findSegmentIndexToSnap=function(t,e){for(var n=v.MAX_VALUE,i=-1,r=0;r<e.size()-1;r++){if(this._seg.p0=e.get(r),this._seg.p1=e.get(r+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,i=r)}return i},Ki.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Ki.prototype.interfaces_=function(){return[]},Ki.prototype.getClass=function(){return Ki},Ki.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Ji=function(t){this._srcGeom=t||null},Qi={SNAP_PRECISION_FACTOR:{configurable:!0}};Ji.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Zi(e,n).transform(this._srcGeom)},Ji.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),i=new Zi(t,n,!0).transform(this._srcGeom),r=i;return e&&T(r,Zt)&&(r=i.buffer(0)),r},Ji.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Ji.prototype.extractTargetCoordinates=function(t){for(var e=new f,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},Ji.prototype.computeMinimumSegmentLength=function(t){for(var e=v.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);i<e&&(e=i)}return e},Ji.prototype.interfaces_=function(){return[]},Ji.prototype.getClass=function(){return Ji},Ji.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ji(t);i[0]=r.snapTo(e,n);var o=new Ji(e);return i[1]=o.snapTo(i[0],n),i},Ji.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ji.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fe.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1];return Math.min(Ji.computeOverlaySnapTolerance(r),Ji.computeOverlaySnapTolerance(o))}},Ji.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Ji.SNAP_PRECISION_FACTOR},Ji.snapToSelf=function(t,e,n){return new Ji(t).snapToSelf(e,n)},Qi.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Ji,Qi);var Zi=function(t){function e(e,n,i){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==i&&i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Ki(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Wi),$i=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};$i.prototype.getCommon=function(){return v.longBitsToDouble(this._commonBits)},$i.prototype.add=function(t){var e=v.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=$i.signExpBits(this._commonBits),this._isFirst=!1,null;if($i.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=$i.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=$i.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},$i.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=v.longBitsToDouble(t),n=\"0000000000000000000000000000000000000000000000000000000000000000\"+v.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+\"  \"+i.substring(1,12)+\"(exp) \"+i.substring(12)+\" [ \"+e+\" ]\"}},$i.prototype.interfaces_=function(){return[]},$i.prototype.getClass=function(){return $i},$i.getBit=function(t,e){return 0!=(t&1<<e)?1:0},$i.signExpBits=function(t){return t>>52},$i.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},$i.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if($i.getBit(t,i)!==$i.getBit(e,i))return n;n++}return 52};var tr=function(){this._commonCoord=null,this._ccFilter=new nr},er={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};tr.prototype.addCommonBits=function(t){var e=new ir(this._commonCoord);t.apply(e),t.geometryChanged()},tr.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new C(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new ir(e);return t.apply(n),t.geometryChanged(),t},tr.prototype.getCommonCoordinate=function(){return this._commonCoord},tr.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},tr.prototype.interfaces_=function(){return[]},tr.prototype.getClass=function(){return tr},er.CommonCoordinateFilter.get=function(){return nr},er.Translater.get=function(){return ir},Object.defineProperties(tr,er);var nr=function(){this._commonBitsX=new $i,this._commonBitsY=new $i};nr.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},nr.prototype.getCommonCoordinate=function(){return new C(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},nr.prototype.interfaces_=function(){return[ft]},nr.prototype.getClass=function(){return nr};var ir=function(){this.trans=null;var t=arguments[0];this.trans=t};ir.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},ir.prototype.isDone=function(){return!1},ir.prototype.isGeometryChanged=function(){return!0},ir.prototype.interfaces_=function(){return[Ut]},ir.prototype.getClass=function(){return ir};var rr=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rr.prototype.selfSnap=function(t){return new Ji(t).snapTo(t,this._snapTolerance)},rr.prototype.removeCommonBits=function(t){this._cbr=new tr,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rr.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rr.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Lr.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rr.prototype.checkValid=function(t){t.isValid()||Y.out.println(\"Snapped geometry is invalid\")},rr.prototype.computeSnapTolerance=function(){this._snapTolerance=Ji.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rr.prototype.snap=function(t){var e=this.removeCommonBits(t);return Ji.snap(e[0],e[1],this._snapTolerance)},rr.prototype.interfaces_=function(){return[]},rr.prototype.getClass=function(){return rr},rr.overlayOp=function(t,e,n){return new rr(t,e).getResultGeometry(n)},rr.union=function(t,e){return rr.overlayOp(t,e,Lr.UNION)},rr.intersection=function(t,e){return rr.overlayOp(t,e,Lr.INTERSECTION)},rr.symDifference=function(t,e){return rr.overlayOp(t,e,Lr.SYMDIFFERENCE)},rr.difference=function(t,e){return rr.overlayOp(t,e,Lr.DIFFERENCE)};var or=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};or.prototype.getResultGeometry=function(t){var e=null,n=!1,i=null;try{e=Lr.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof $))throw t;i=t}if(!n)try{e=rr.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof $?i:t}return e},or.prototype.interfaces_=function(){return[]},or.prototype.getClass=function(){return or},or.overlayOp=function(t,e,n){return new or(t,e).getResultGeometry(n)},or.union=function(t,e){return or.overlayOp(t,e,Lr.UNION)},or.intersection=function(t,e){return or.overlayOp(t,e,Lr.INTERSECTION)},or.symDifference=function(t,e){return or.overlayOp(t,e,Lr.SYMDIFFERENCE)},or.difference=function(t,e){return or.overlayOp(t,e,Lr.DIFFERENCE)};var sr=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sr.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sr.prototype.interfaces_=function(){return[]},sr.prototype.getClass=function(){return sr};var ar=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=i,this._xValue=r,this._obj=o}},ur={INSERT:{configurable:!0},DELETE:{configurable:!0}};ar.prototype.isDelete=function(){return this._eventType===ar.DELETE},ar.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},ar.prototype.getObject=function(){return this._obj},ar.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},ar.prototype.getInsertEvent=function(){return this._insertEvent},ar.prototype.isInsert=function(){return this._eventType===ar.INSERT},ar.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},ar.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},ar.prototype.interfaces_=function(){return[E]},ar.prototype.getClass=function(){return ar},ur.INSERT.get=function(){return 1},ur.DELETE.get=function(){return 2},Object.defineProperties(ar,ur);var lr=function(){};lr.prototype.interfaces_=function(){return[]},lr.prototype.getClass=function(){return lr};var cr=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};cr.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(cr.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},cr.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},cr.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},cr.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},cr.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next().getCoordinate();if(t.isIntersection(i))return!0}return!1},cr.prototype.hasProperIntersection=function(){return this._hasProper},cr.prototype.hasIntersection=function(){return this._hasIntersection},cr.prototype.isDone=function(){return this._isDone},cr.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},cr.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},cr.prototype.addIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},cr.prototype.interfaces_=function(){return[]},cr.prototype.getClass=function(){return cr},cr.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var pr=function(t){function e(){t.call(this),this.events=new Nt,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$e.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof cr&&T(arguments[0],xt)&&T(arguments[1],xt)){var i=arguments[0],r=arguments[1],o=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(o)}else if(\"boolean\"==typeof arguments[2]&&T(arguments[0],xt)&&arguments[1]instanceof cr){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var o=new sr(n,r),s=new ar(e,n.getMinX(r),o);this.events.add(s),this.events.add(new ar(n.getMaxX(r),s))}},e.prototype.processOverlaps=function(t,e,n,i){for(var r=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(r.computeIntersections(a,i),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var o=r.next();this.addEdge(o,i)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(lr),hr=function(){this._min=v.POSITIVE_INFINITY,this._max=v.NEGATIVE_INFINITY},fr={NodeComparator:{configurable:!0}};hr.prototype.getMin=function(){return this._min},hr.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},hr.prototype.getMax=function(){return this._max},hr.prototype.toString=function(){return Z.toLineString(new C(this._min,0),new C(this._max,0))},hr.prototype.interfaces_=function(){return[]},hr.prototype.getClass=function(){return hr},fr.NodeComparator.get=function(){return gr},Object.defineProperties(hr,fr);var gr=function(){};gr.prototype.compare=function(t,e){var n=t,i=e,r=(n._min+n._max)/2,o=(i._min+i._max)/2;return r<o?-1:r>o?1:0},gr.prototype.interfaces_=function(){return[N]},gr.prototype.getClass=function(){return gr};var dr=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],i=arguments[2];this._min=e,this._max=n,this._item=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),yr=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),_r=function(){this._leaves=new Nt,this._root=null,this._level=0};_r.prototype.buildTree=function(){$e.sort(this._leaves,new hr.NodeComparator);for(var t=this._leaves,e=null,n=new Nt;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_r.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error(\"Index cannot be added to once it has been queried\");this._leaves.add(new dr(t,e,n))},_r.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_r.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_r.prototype.printNode=function(t){Y.out.println(Z.toLineString(new C(t._min,this._level),new C(t._max,this._level)))},_r.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_r.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{var r=new yr(t.get(n),t.get(n+1));e.add(r)}}},_r.prototype.interfaces_=function(){return[]},_r.prototype.getClass=function(){return _r};var mr=function(){this._items=new Nt};mr.prototype.visitItem=function(t){this._items.add(t)},mr.prototype.getItems=function(){return this._items},mr.prototype.interfaces_=function(){return[Ke]},mr.prototype.getClass=function(){return mr};var vr=function(){this._index=null;var t=arguments[0];if(!T(t,Zt))throw new m(\"Argument must be Polygonal\");this._index=new xr(t)},Ir={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vr.prototype.locate=function(t){var e=new st(t),n=new Er(e);return this._index.query(t.y,t.y,n),e.getLocation()},vr.prototype.interfaces_=function(){return[Vn]},vr.prototype.getClass=function(){return vr},Ir.SegmentVisitor.get=function(){return Er},Ir.IntervalIndexedGeometry.get=function(){return xr},Object.defineProperties(vr,Ir);var Er=function(){this._counter=null;var t=arguments[0];this._counter=t};Er.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Er.prototype.interfaces_=function(){return[Ke]},Er.prototype.getClass=function(){return Er};var xr=function(){this._index=new _r;var t=arguments[0];this.init(t)};xr.prototype.init=function(t){for(var e=Ci.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},xr.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new dn(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n)}},xr.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mr;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._index.query(i,r,o)}},xr.prototype.interfaces_=function(){return[]},xr.prototype.getClass=function(){return xr};var Nr=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new he,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Si,2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=i,null!==n&&this.add(n)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=r,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var i=this._nodes.addNode(n).getLabel(),r=1;w.NONE;i.getLocation(t,Se.ON)===w.BOUNDARY&&r++;var o=e.determineBoundary(this._boundaryNodeRule,r);i.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new cr(n,!0,!1);o.setIsDoneIfProperInt(r);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof ee||this._parentGeom instanceof $t||this._parentGeom instanceof ne,u=i||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var i=new cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Qt){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,w.INTERIOR)}else if(arguments[0]instanceof C){var e=arguments[0];this.insertPoint(this._argIndex,e,w.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),w.EXTERIOR,w.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,w.INTERIOR,w.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],w.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],w.BOUNDARY)},e.prototype.addLineString=function(t){var e=Lt.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ni(e,new Pe(this._argIndex,w.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),et.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===w.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var i=Lt.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;var r=e,o=n;at.isCCW(i)&&(r=n,o=e);var s=new ni(i,new Pe(this._argIndex,w.BOUNDARY,r,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,i[0],w.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var i=this._nodes.addNode(e),r=i.getLabel();null===r?i._label=new Pe(t,n):r.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new pr},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var o=r.next();this.addSelfIntersectionNode(t,o.coord,i)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof ne&&(this._useBoundaryDeterminationRule=!1),e instanceof $t)this.addPolygon(e);else if(e instanceof Kt)this.addLineString(e);else if(e instanceof Qt)this.addPoint(e);else if(e instanceof te)this.addCollection(e);else if(e instanceof Xt)this.addCollection(e);else if(e instanceof ne)this.addCollection(e);else{if(!(e instanceof zt))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return T(this._parentGeom,Zt)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vr(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?w.BOUNDARY:w.INTERIOR},e}(Ye),Cr=function(){if(this._li=new rt,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Nr(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,e,i),this._arg[1]=new Nr(1,n,i)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];r.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(r.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,r,s),this._arg[1]=new Nr(1,o,s)}};Cr.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Cr.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Cr.prototype.interfaces_=function(){return[]},Cr.prototype.getClass=function(){return Cr};var Sr=function(){};Sr.prototype.interfaces_=function(){return[]},Sr.prototype.getClass=function(){return Sr},Sr.map=function(){if(arguments[0]instanceof ct&&T(arguments[1],Sr.MapOp)){for(var t=arguments[0],e=arguments[1],n=new Nt,i=0;i<t.getNumGeometries();i++){var r=e.map(t.getGeometryN(i));null!==r&&n.add(r)}return t.getFactory().buildGeometry(n)}if(T(arguments[0],It)&&T(arguments[1],Sr.MapOp)){for(var o=arguments[0],s=arguments[1],a=new Nt,u=o.iterator();u.hasNext();){var l=u.next(),c=s.map(l);null!==c&&a.add(c)}return a}},Sr.MapOp=function(){};var Lr=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Si,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Hn,this._resultPolyList=new Nt,this._resultLineList=new Nt,this._resultPointList=new Nt,this._graph=new Ye(new kn),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip();var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,i,r){var o=new Nt;return o.addAll(t),o.addAll(n),o.addAll(i),o.isEmpty()?e.createEmptyResult(r,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(this._ptLocator.locate(t,i)!==w.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new Nt,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new Nt;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Yi.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new ke(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var i=new ji(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);var r=new Hi(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea()&&!i.isInteriorAreaEdge()&&e.isResultOfOp(r.getLocation(0,Se.RIGHT),r.getLocation(1,Se.RIGHT),t)&&i.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;r<2;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(et.isTrue(!i.isNull(r,Se.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,Se.LEFT,i.getLocation(r,Se.LEFT)),et.isTrue(!i.isNull(r,Se.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,Se.RIGHT,i.getLocation(r,Se.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Cr);Lr.overlayOp=function(t,e,n){return new Lr(t,e).getResultGeometry(n)},Lr.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Lr.createEmptyResult(Lr.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return ki.map(t,{interfaces_:function(){return[Sr.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.INTERSECTION)},Lr.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.SYMDIFFERENCE)},Lr.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),o=-1;switch(t){case Lr.INTERSECTION:o=Math.min(i,r);break;case Lr.UNION:o=Math.max(i,r);break;case Lr.DIFFERENCE:o=i;break;case Lr.SYMDIFFERENCE:o=Math.max(i,r)}return o},Lr.createEmptyResult=function(t,e,n,i){var r=null;switch(Lr.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},Lr.difference=function(t,e){return t.isEmpty()?Lr.createEmptyResult(Lr.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.DIFFERENCE))},Lr.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Lr.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];switch(r===w.BOUNDARY&&(r=w.INTERIOR),o===w.BOUNDARY&&(o=w.INTERIOR),s){case Lr.INTERSECTION:return r===w.INTERIOR&&o===w.INTERIOR;case Lr.UNION:return r===w.INTERIOR||o===w.INTERIOR;case Lr.DIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR;case Lr.SYMDIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR||r!==w.INTERIOR&&o===w.INTERIOR}return!1}},Lr.INTERSECTION=1,Lr.UNION=2,Lr.DIFFERENCE=3,Lr.SYMDIFFERENCE=4;var br=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Si,this._seg=new dn;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};br.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),i=0;i<n.size()-1;i++){n.getCoordinate(i,this._seg.p0),n.getCoordinate(i+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},br.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?w.BOUNDARY:this._ptLocator.locate(t,this._g)},br.prototype.extractLinework=function(t){var e=new wr;t.apply(e);var n=e.getLinework(),i=_e.toLineStringArray(n);return t.getFactory().createMultiLineString(i)},br.prototype.interfaces_=function(){return[]},br.prototype.getClass=function(){return br};var wr=function(){this._linework=null,this._linework=new Nt};wr.prototype.getLinework=function(){return this._linework},wr.prototype.filter=function(t){if(t instanceof $t){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},wr.prototype.interfaces_=function(){return[Vt]},wr.prototype.getClass=function(){return wr};var Or=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Or.prototype.extractPoints=function(t,e,n){for(var i=t.getCoordinates(),r=0;r<i.length-1;r++)this.computeOffsetPoints(i[r],i[r+1],e,n)},Or.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Or.prototype.getPoints=function(t){for(var e=new Nt,n=Ci.getLines(this._g).iterator();n.hasNext();){var i=n.next();this.extractPoints(i,t,e)}return e},Or.prototype.computeOffsetPoints=function(t,e,n,i){var r=e.x-t.x,o=e.y-t.y,s=Math.sqrt(r*r+o*o),a=n*r/s,u=n*o/s,l=(e.x+t.x)/2,c=(e.y+t.y)/2;if(this._doLeft){var p=new C(l-u,c+a);i.add(p)}if(this._doRight){var h=new C(l+u,c-a);i.add(h)}},Or.prototype.interfaces_=function(){return[]},Or.prototype.getClass=function(){return Or};var Tr=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new Nt;var e=arguments[0],n=arguments[1],i=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,i],this._locFinder=[new br(this._geom[0],this._boundaryDistanceTolerance),new br(this._geom[1],this._boundaryDistanceTolerance),new br(this._geom[2],this._boundaryDistanceTolerance)]},Rr={TOLERANCE:{configurable:!0}};Tr.prototype.reportResult=function(t,e,n){Y.out.println(\"Overlay result invalid - A:\"+w.toLocationSymbol(e[0])+\" B:\"+w.toLocationSymbol(e[1])+\" expected:\"+(n?\"i\":\"e\")+\" actual:\"+w.toLocationSymbol(e[2]))},Tr.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Tr.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._location[0]=this._locFinder[0].getLocation(r),this._location[1]=this._locFinder[1].getLocation(r),this._location[2]=this._locFinder[2].getLocation(r),!!Tr.hasLocation(this._location,w.BOUNDARY)||this.isValidResult(i,this._location)}},Tr.prototype.addTestPts=function(t){var e=new Or(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Tr.prototype.isValidResult=function(t,e){var n=Lr.isResultOfOp(e[0],e[1],t),i=!(n^e[2]===w.INTERIOR);return i||this.reportResult(t,e,n),i},Tr.prototype.getInvalidLocation=function(){return this._invalidLocation},Tr.prototype.interfaces_=function(){return[]},Tr.prototype.getClass=function(){return Tr},Tr.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Tr.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Ji.computeSizeBasedSnapTolerance(t),Ji.computeSizeBasedSnapTolerance(e))},Tr.isValid=function(t,e,n,i){return new Tr(t,e,i).isValid(n)},Rr.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Tr,Rr);var Pr=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Pr.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this._skipEmpty&&i.isEmpty()||e.add(i)}},Pr.prototype.combine=function(){for(var t=new Nt,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Pr.prototype.interfaces_=function(){return[]},Pr.prototype.getClass=function(){return Pr},Pr.combine=function(){if(1===arguments.length){var t=arguments[0];return new Pr(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Pr(Pr.createList(e,n)).combine()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];return new Pr(Pr.createList(i,r,o)).combine()}},Pr.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Pr.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Nt;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=new Nt;return s.add(i),s.add(r),s.add(o),s}};var Dr=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Nt)},Mr={STRTREE_NODE_CAPACITY:{configurable:!0}};Dr.prototype.reduceToGeometries=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next(),r=null;T(i,xt)?r=this.unionTree(i):i instanceof ct&&(r=i),e.add(r)}return e},Dr.prototype.extractByEnvelope=function(t,e,n){for(var i=new Nt,r=0;r<e.getNumGeometries();r++){var o=e.getGeometryN(r);o.getEnvelopeInternal().intersects(t)?i.add(o):n.add(o)}return this._geomFactory.buildGeometry(i)},Dr.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){return Pr.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var r=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,r)},Dr.prototype.union=function(){if(null===this._inputPolys)throw new Error(\"union() method cannot be called twice\");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new sn(Dr.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var i=t.itemsTree();return this.unionTree(i)},Dr.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(i-n<=1){var r=Dr.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n==2)return this.unionSafe(Dr.getGeometry(e,n),Dr.getGeometry(e,n+1));var o=Math.trunc((i+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,i);return this.unionSafe(s,a)}},Dr.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},Dr.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Dr.prototype.unionActual=function(t,e){return Dr.restrictToPolygons(t.union(e))},Dr.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Dr.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var i=new Nt,r=this.extractByEnvelope(n,t,i),o=this.extractByEnvelope(n,e,i),s=this.unionActual(r,o);i.add(s);return Pr.combine(i)},Dr.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Dr.prototype.interfaces_=function(){return[]},Dr.prototype.getClass=function(){return Dr},Dr.restrictToPolygons=function(t){if(T(t,Zt))return t;var e=Ni.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_e.toPolygonArray(e))},Dr.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Dr.union=function(t){return new Dr(t).union()},Mr.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Dr,Mr);var Ar=function(){};Ar.prototype.interfaces_=function(){return[]},Ar.prototype.getClass=function(){return Ar},Ar.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.UNION)},t.GeoJSONReader=Ne,t.GeoJSONWriter=Ce,t.OverlayOp=Lr,t.UnionOp=Ar,t.BufferOp=di,Object.defineProperty(t,\"__esModule\",{value:!0})});\n\n\n/***/ }),\n\n/***/ 5813:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 5814:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_meta__ = __webpack_require__(5700);\n\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    Object(__WEBPACK_IMPORTED_MODULE_0__turf_meta__[\"a\" /* coordEach */])(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (bbox);\n\n\n/***/ }),\n\n/***/ 5815:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return earthRadius; });\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return feature; });\n/* unused harmony export geometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return point; });\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return radiansToLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return lengthToRadians; });\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5816:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return areaRingSum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return areaStream; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__noop__ = __webpack_require__(5709);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__stream__ = __webpack_require__(5715);\n\n\n\n\n\nvar areaRingSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])();\n\nvar areaSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineStart: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineEnd: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? __WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */] + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */];\n  },\n  sphere: function() {\n    areaSum.add(__WEBPACK_IMPORTED_MODULE_1__math__[\"w\" /* tau */]);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */];\n  lambda0 = lambda, cosPhi0 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi = phi / 2 + __WEBPACK_IMPORTED_MODULE_1__math__[\"q\" /* quarterPi */]), sinPhi0 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */];\n  phi = phi / 2 + __WEBPACK_IMPORTED_MODULE_1__math__[\"q\" /* quarterPi */]; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi),\n      sinPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(adLambda),\n      v = k * sdLambda * Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(adLambda);\n  areaRingSum.add(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"e\" /* atan2 */])(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(object) {\n  areaSum.reset();\n  Object(__WEBPACK_IMPORTED_MODULE_3__stream__[\"a\" /* default */])(object, areaStream);\n  return areaSum * 2;\n});\n\n\n/***/ }),\n\n/***/ 5817:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = circleStream;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cartesian__ = __webpack_require__(5725);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constant__ = __webpack_require__(5962);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__rotation__ = __webpack_require__(5737);\n\n\n\n\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(radius),\n      sinRadius = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * __WEBPACK_IMPORTED_MODULE_2__math__[\"w\" /* tau */];\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * __WEBPACK_IMPORTED_MODULE_2__math__[\"w\" /* tau */];\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"g\" /* spherical */])([cosRadius, -sinRadius * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(t), -sinRadius * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"a\" /* cartesian */])(point), point[0] -= cosRadius;\n  Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"e\" /* cartesianNormalizeInPlace */])(point);\n  var radius = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"b\" /* acos */])(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + __WEBPACK_IMPORTED_MODULE_2__math__[\"w\" /* tau */] - __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */]) % __WEBPACK_IMPORTED_MODULE_2__math__[\"w\" /* tau */];\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  var center = Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])([0, 0]),\n      radius = Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])(90),\n      precision = Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= __WEBPACK_IMPORTED_MODULE_2__math__[\"h\" /* degrees */], x[1] *= __WEBPACK_IMPORTED_MODULE_2__math__[\"h\" /* degrees */];\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */],\n        p = precision.apply(this, arguments) * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */];\n    ring = [];\n    rotate = Object(__WEBPACK_IMPORTED_MODULE_3__rotation__[\"b\" /* rotateRadians */])(-c[0] * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */], -c[1] * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */], 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_1__constant__[\"a\" /* default */])(+_), circle) : precision;\n  };\n\n  return circle;\n});\n\n\n/***/ }),\n\n/***/ 5818:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n});\n\n\n/***/ }),\n\n/***/ 5819:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__noop__ = __webpack_require__(5709);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: __WEBPACK_IMPORTED_MODULE_0__noop__[\"a\" /* default */],\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n});\n\n\n/***/ }),\n\n/***/ 5820:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pointEqual__ = __webpack_require__(5821);\n\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pointEqual__[\"a\" /* default */])(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n});\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\n\n/***/ }),\n\n/***/ 5821:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(a[0] - b[0]) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */] && Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(a[1] - b[1]) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */];\n});\n\n\n/***/ }),\n\n/***/ 5822:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export bisectRight */\n/* unused harmony export bisectLeft */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ascending__ = __webpack_require__(5720);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bisector__ = __webpack_require__(5823);\n\n\n\nvar ascendingBisect = Object(__WEBPACK_IMPORTED_MODULE_1__bisector__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_0__ascending__[\"a\" /* default */]);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n/* harmony default export */ __webpack_exports__[\"a\"] = (bisectRight);\n\n\n/***/ }),\n\n/***/ 5823:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ascending__ = __webpack_require__(5720);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n});\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__ascending__[\"a\" /* default */])(f(d), x);\n  };\n}\n\n\n/***/ }),\n\n/***/ 5824:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = pair;\n/* unused harmony default export */ var _unused_webpack_default_export = (function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n});\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\n\n/***/ }),\n\n/***/ 5825:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__variance__ = __webpack_require__(5826);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(array, f) {\n  var v = Object(__WEBPACK_IMPORTED_MODULE_0__variance__[\"a\" /* default */])(array, f);\n  return v ? Math.sqrt(v) : v;\n});\n\n\n/***/ }),\n\n/***/ 5826:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(5726);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n});\n\n\n/***/ }),\n\n/***/ 5827:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n});\n\n\n/***/ }),\n\n/***/ 5828:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return slice; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return map; });\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\n\n/***/ }),\n\n/***/ 5829:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n});\n\n\n/***/ }),\n\n/***/ 5830:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export tickIncrement */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = tickStep;\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n});\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\n\n/***/ }),\n\n/***/ 5831:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n});\n\n\n/***/ }),\n\n/***/ 5832:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n});\n\n\n/***/ }),\n\n/***/ 5833:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__min__ = __webpack_require__(5832);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = Object(__WEBPACK_IMPORTED_MODULE_0__min__[\"a\" /* default */])(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n});\n\nfunction length(d) {\n  return d.length;\n}\n\n\n/***/ }),\n\n/***/ 5834:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__cartesian__ = __webpack_require__(5725);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(5697);\n\n\n\n\nvar sum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(lambda), -Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + __WEBPACK_IMPORTED_MODULE_2__math__[\"q\" /* quarterPi */],\n        sinPhi0 = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(phi0),\n        cosPhi0 = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + __WEBPACK_IMPORTED_MODULE_2__math__[\"q\" /* quarterPi */],\n          sinPhi1 = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(phi1),\n          cosPhi1 = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */],\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"e\" /* atan2 */])(k * sign * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"t\" /* sin */])(absDelta), cosPhi0 * cosPhi1 + k * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(absDelta)));\n      angle += antimeridian ? delta + sign * __WEBPACK_IMPORTED_MODULE_2__math__[\"w\" /* tau */] : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"c\" /* cartesianCross */])(Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"a\" /* cartesian */])(point0), Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"a\" /* cartesian */])(point1));\n        Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"e\" /* cartesianNormalizeInPlace */])(arc);\n        var intersection = Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"c\" /* cartesianCross */])(normal, arc);\n        Object(__WEBPACK_IMPORTED_MODULE_1__cartesian__[\"e\" /* cartesianNormalizeInPlace */])(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"c\" /* asin */])(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -__WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */] || angle < __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */] && sum < -__WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */]) ^ (winding & 1);\n});\n\n\n/***/ }),\n\n/***/ 5835:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__length__ = __webpack_require__(5836);\n\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return Object(__WEBPACK_IMPORTED_MODULE_0__length__[\"a\" /* default */])(object);\n});\n\n\n/***/ }),\n\n/***/ 5836:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__noop__ = __webpack_require__(5709);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__stream__ = __webpack_require__(5715);\n\n\n\n\n\nvar lengthSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  point: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineStart: lengthLineStart,\n  lineEnd: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  polygonStart: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  polygonEnd: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */]\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */];\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */];\n  lambda0 = lambda, sinPhi0 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi), cosPhi0 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */];\n  var sinPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi),\n      cosPhi = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi),\n      delta = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(lambda - lambda0),\n      cosDelta = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(delta),\n      sinDelta = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"e\" /* atan2 */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"u\" /* sqrt */])(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(object) {\n  lengthSum.reset();\n  Object(__WEBPACK_IMPORTED_MODULE_3__stream__[\"a\" /* default */])(object, lengthStream);\n  return +lengthSum;\n});\n\n\n/***/ }),\n\n/***/ 5837:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__noop__ = __webpack_require__(5709);\n\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: __WEBPACK_IMPORTED_MODULE_0__noop__[\"a\" /* default */],\n  lineEnd: __WEBPACK_IMPORTED_MODULE_0__noop__[\"a\" /* default */],\n  polygonStart: __WEBPACK_IMPORTED_MODULE_0__noop__[\"a\" /* default */],\n  polygonEnd: __WEBPACK_IMPORTED_MODULE_0__noop__[\"a\" /* default */],\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (boundsStream);\n\n\n/***/ }),\n\n/***/ 5838:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__conicEqualArea__ = __webpack_require__(5763);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__conicEqualArea__[\"a\" /* default */])()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n});\n\n\n/***/ }),\n\n/***/ 5839:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__buffer__ = __webpack_require__(5819);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__polygon__ = __webpack_require__(5820);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__polygonContains__ = __webpack_require__(5834);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_d3_array__ = __webpack_require__(5760);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = Object(__WEBPACK_IMPORTED_MODULE_0__buffer__[\"a\" /* default */])(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = Object(__WEBPACK_IMPORTED_MODULE_4_d3_array__[\"a\" /* merge */])(segments);\n        var startInside = Object(__WEBPACK_IMPORTED_MODULE_3__polygonContains__[\"a\" /* default */])(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          Object(__WEBPACK_IMPORTED_MODULE_1__polygon__[\"a\" /* default */])(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n});\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - __WEBPACK_IMPORTED_MODULE_2__math__[\"l\" /* halfPi */] - __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */] : __WEBPACK_IMPORTED_MODULE_2__math__[\"l\" /* halfPi */] - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - __WEBPACK_IMPORTED_MODULE_2__math__[\"l\" /* halfPi */] - __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */] : __WEBPACK_IMPORTED_MODULE_2__math__[\"l\" /* halfPi */] - b[1]);\n}\n\n\n/***/ }),\n\n/***/ 5840:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = equirectangularRaw;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(5706);\n\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */])(equirectangularRaw)\n      .scale(152.63);\n});\n\n\n/***/ }),\n\n/***/ 5841:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_bbox__ = __webpack_require__(5739);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_bbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_bbox__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon__ = __webpack_require__(6004);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__combineFeatures__ = __webpack_require__(5758);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__createFeatureCollectionFromFeature__ = __webpack_require__(167);\n/**\r\n * uses bbox function from Turf to create a new geojson that is a bounding box around all the input layers\r\n */var bboxFunction=function bboxFunction(geojsonList){if(geojsonList.length<1){return{newJson:'select a layer'};}var combinedgeojsons=Object(__WEBPACK_IMPORTED_MODULE_2__combineFeatures__[\"a\" /* default */])(geojsonList);var bbox_res=__WEBPACK_IMPORTED_MODULE_0__turf_bbox___default()(combinedgeojsons);var bboxPolygon_res=__WEBPACK_IMPORTED_MODULE_1__turf_bbox_polygon___default()(bbox_res);// returns a feature... we want all jsons as feature collections\nvar bboxFeatureCollection=Object(__WEBPACK_IMPORTED_MODULE_3__createFeatureCollectionFromFeature__[\"a\" /* default */])([bboxPolygon_res]);return{bbox:bbox_res,newJson:bboxFeatureCollection};};/* harmony default export */ __webpack_exports__[\"a\"] = (bboxFunction);\n\n/***/ }),\n\n/***/ 5842:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = createCell;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cellHalfedgeStart;\n/* unused harmony export cellHalfedgeEnd */\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = sortCellHalfedges;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = clipCells;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Edge__ = __webpack_require__(5770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Diagram__ = __webpack_require__(5728);\n\n\n\nfunction createCell(site) {\n  return __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */].length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */][halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */].length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!__WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */][halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */][halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */][halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] || Math.abs(endY - startY) > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */]) {\n          halfedges.splice(iHalfedge, 0, __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */].push(Object(__WEBPACK_IMPORTED_MODULE_0__Edge__[\"b\" /* createBorderEdge */])(site, end,\n              Math.abs(endX - x0) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] && y1 - endY > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? [x0, Math.abs(startX - x0) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? startY : y1]\n              : Math.abs(endY - y1) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] && x1 - endX > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? [Math.abs(startY - y1) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? startX : x1, y1]\n              : Math.abs(endX - x1) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] && endY - y0 > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? [x1, Math.abs(startX - x1) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? startY : y0]\n              : Math.abs(endY - y0) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] && endX - x0 > __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? [Math.abs(startY - y0) < __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"f\" /* epsilon */] ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */].push(Object(__WEBPACK_IMPORTED_MODULE_0__Edge__[\"b\" /* createBorderEdge */])(site = cover.site, v00, v01)) - 1,\n        __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */].push(Object(__WEBPACK_IMPORTED_MODULE_0__Edge__[\"b\" /* createBorderEdge */])(site, v01, v11)) - 1,\n        __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */].push(Object(__WEBPACK_IMPORTED_MODULE_0__Edge__[\"b\" /* createBorderEdge */])(site, v11, v10)) - 1,\n        __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"e\" /* edges */].push(Object(__WEBPACK_IMPORTED_MODULE_0__Edge__[\"b\" /* createBorderEdge */])(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][iCell]) {\n      if (!cell.halfedges.length) {\n        delete __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"b\" /* cells */][iCell];\n      }\n    }\n  }\n}\n\n\n/***/ }),\n\n/***/ 5843:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return firstCircle; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = attachCircle;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = detachCircle;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RedBlackTree__ = __webpack_require__(5769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Diagram__ = __webpack_require__(5728);\n\n\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  Object(__WEBPACK_IMPORTED_MODULE_0__RedBlackTree__[\"a\" /* RedBlackNode */])(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -__WEBPACK_IMPORTED_MODULE_1__Diagram__[\"g\" /* epsilon2 */]) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"c\" /* circles */]._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"c\" /* circles */].insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    __WEBPACK_IMPORTED_MODULE_1__Diagram__[\"c\" /* circles */].remove(circle);\n    circlePool.push(circle);\n    Object(__WEBPACK_IMPORTED_MODULE_0__RedBlackTree__[\"a\" /* RedBlackNode */])(circle);\n    arc.circle = null;\n  }\n}\n\n\n/***/ }),\n\n/***/ 5844:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_boolean_point_in_polygon__ = __webpack_require__(6016);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(6017);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_meta__ = __webpack_require__(5700);\n\n\n\n\n/**\n * Finds {@link Points} that fall within {@link (Multi)Polygon(s)}.\n *\n * @name pointsWithinPolygon\n * @param {Feauture|FeatureCollection<Point>} points Points as input search\n * @param {FeatureCollection|Geoemtry|Feature<Polygon|MultiPolygon>} polygons Points must be within these (Multi)Polygon(s)\n * @returns {FeatureCollection<Point>} points that land within at least one polygon\n * @example\n * var points = turf.points([\n *     [-46.6318, -23.5523],\n *     [-46.6246, -23.5325],\n *     [-46.6062, -23.5513],\n *     [-46.663, -23.554],\n *     [-46.643, -23.557]\n * ]);\n *\n * var searchWithin = turf.polygon([[\n *     [-46.653,-23.543],\n *     [-46.634,-23.5346],\n *     [-46.613,-23.543],\n *     [-46.614,-23.559],\n *     [-46.631,-23.567],\n *     [-46.653,-23.560],\n *     [-46.653,-23.543]\n * ]]);\n *\n * var ptsWithin = turf.pointsWithinPolygon(points, searchWithin);\n *\n * //addToMap\n * var addToMap = [points, searchWithin, ptsWithin]\n * turf.featureEach(ptsWithin, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction pointsWithinPolygon(points, polygons) {\n    var results = [];\n    Object(__WEBPACK_IMPORTED_MODULE_2__turf_meta__[\"e\" /* geomEach */])(polygons, function (polygon) {\n        Object(__WEBPACK_IMPORTED_MODULE_2__turf_meta__[\"b\" /* featureEach */])(points, function (point) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__turf_boolean_point_in_polygon__[\"a\" /* default */])(point, polygon)) results.push(point);\n        });\n    });\n    return Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* featureCollection */])(results);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (pointsWithinPolygon);\n\n\n/***/ }),\n\n/***/ 5845:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rbush__ = __webpack_require__(6020);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_meta__ = __webpack_require__(5700);\n\n\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * import geojsonRbush from 'geojson-rbush';\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = Object(__WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */])(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature<any>} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.insert(polygon)\n     */\n    tree.insert = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        } else {\n            feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        }\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {BBox[]|FeatureCollection<any>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygons = {\n     *   \"type\": \"FeatureCollection\",\n     *   \"features\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *       }\n     *     },\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     *       }\n     *     }\n     *   ]\n     * }\n     * tree.load(polygons)\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of BBox\n        if (Array.isArray(features)) {\n            features.forEach(function (bbox) {\n                var feature = bboxPolygon(bbox);\n                feature.bbox = bbox;\n                load.push(feature);\n            });\n        } else {\n            // Load FeatureCollection\n            Object(__WEBPACK_IMPORTED_MODULE_1__turf_meta__[\"b\" /* featureEach */])(features, function (feature) {\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {BBox|Feature<any>} feature remove single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.remove(polygon)\n     */\n    tree.remove = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        }\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.remove.call(this, feature);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson search with GeoJSON\n     * @returns {FeatureCollection<any>} all features that intersects with the given GeoJSON.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.search(polygon)\n     */\n    tree.search = function (geojson) {\n        var features = __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.search.call(this, this.toBBox(geojson));\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.collides(polygon)\n     */\n    tree.collides = function (geojson) {\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection<any>} all the features in RBush\n     * @example\n     * tree.all()\n     * //=FeatureCollection\n     */\n    tree.all = function () {\n        var features = __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.all.call(this);\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     * //=JSON object\n     */\n    tree.toJSON = function () {\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return __WEBPACK_IMPORTED_MODULE_0__rbush__[\"a\" /* default */].prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollectio|Feature<any>} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else bbox = turfBBox(geojson);\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @private\n * @name bboxPolygon\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n    var coordinates = [[lowLeft, lowRight, topRight, topLeft, lowLeft]];\n\n    return {\n        type: 'Feature',\n        bbox: bbox,\n        properties: {},\n        geometry: {\n            type: 'Polygon',\n            coordinates: coordinates\n        }\n    };\n}\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @private\n * @name bbox\n * @param {FeatureCollection|Feature<any>} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction turfBBox(geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    Object(__WEBPACK_IMPORTED_MODULE_1__turf_meta__[\"a\" /* coordEach */])(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (geojsonRbush);\n\n\n/***/ }),\n\n/***/ 5846:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(6023);\n\n\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    var coordinates1 = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(from);\n    var coordinates2 = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(to);\n    var dLat = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])((coordinates2[1] - coordinates1[1]));\n    var dLon = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])((coordinates2[0] - coordinates1[0]));\n    var lat1 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates1[1]);\n    var lat2 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates2[1]);\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"c\" /* radiansToLength */])(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (distance);\n\n\n/***/ }),\n\n/***/ 5847:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_helpers__ = __webpack_require__(6027);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_meta__ = __webpack_require__(5700);\n\n\n\n\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|MultiPolygon|Polygon>} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    var results = [];\n    Object(__WEBPACK_IMPORTED_MODULE_2__turf_meta__[\"d\" /* flattenEach */])(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* featureCollection */])(results);\n}\n\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    switch (geometry.type) {\n    case 'Polygon':\n        coords = Object(__WEBPACK_IMPORTED_MODULE_1__turf_invariant__[\"c\" /* getCoords */])(geometry);\n        break;\n    case 'LineString':\n        coords = [Object(__WEBPACK_IMPORTED_MODULE_1__turf_invariant__[\"c\" /* getCoords */])(geometry)];\n    }\n    coords.forEach(function (coord) {\n        var segments = createSegments(coord, geojson.properties);\n        segments.forEach(function (segment) {\n            segment.id = results.length;\n            results.push(segment);\n        });\n    });\n}\n\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {LineString} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"b\" /* lineString */])([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = (x1 < x2) ? x1 : x2;\n    var south = (y1 < y2) ? y1 : y2;\n    var east = (x1 > x2) ? x1 : x2;\n    var north = (y1 > y2) ? y1 : y2;\n    return [west, south, east, north];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (lineSegment);\n\n\n/***/ }),\n\n/***/ 5848:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_geojson_rbush__ = __webpack_require__(5845);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_line_segment__ = __webpack_require__(5847);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_helpers__ = __webpack_require__(6028);\n\n\n\n\n\n\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === 'LineString') line1 = Object(__WEBPACK_IMPORTED_MODULE_4__turf_helpers__[\"a\" /* feature */])(line1);\n    if (line2.type === 'LineString') line2 = Object(__WEBPACK_IMPORTED_MODULE_4__turf_helpers__[\"a\" /* feature */])(line2);\n    if (line1.type === 'Feature' &&\n        line2.type === 'Feature' &&\n        line1.geometry.type === 'LineString' &&\n        line2.geometry.type === 'LineString' &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) results.push(intersect);\n        return Object(__WEBPACK_IMPORTED_MODULE_4__turf_helpers__[\"b\" /* featureCollection */])(results);\n    }\n\n    // Handles complex GeoJSON Geometries\n    var tree = Object(__WEBPACK_IMPORTED_MODULE_0_geojson_rbush__[\"a\" /* default */])();\n    tree.load(Object(__WEBPACK_IMPORTED_MODULE_1__turf_line_segment__[\"a\" /* default */])(line2));\n    Object(__WEBPACK_IMPORTED_MODULE_3__turf_meta__[\"b\" /* featureEach */])(Object(__WEBPACK_IMPORTED_MODULE_1__turf_line_segment__[\"a\" /* default */])(line1), function (segment) {\n        Object(__WEBPACK_IMPORTED_MODULE_3__turf_meta__[\"b\" /* featureEach */])(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = Object(__WEBPACK_IMPORTED_MODULE_2__turf_invariant__[\"c\" /* getCoords */])(intersect).join(',');\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return Object(__WEBPACK_IMPORTED_MODULE_4__turf_helpers__[\"b\" /* featureCollection */])(results);\n}\n\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = Object(__WEBPACK_IMPORTED_MODULE_2__turf_invariant__[\"c\" /* getCoords */])(line1);\n    var coords2 = Object(__WEBPACK_IMPORTED_MODULE_2__turf_invariant__[\"c\" /* getCoords */])(line2);\n    if (coords1.length !== 2) {\n        throw new Error('<intersects> line1 must only contain 2 coordinates');\n    }\n    if (coords2.length !== 2) {\n        throw new Error('<intersects> line2 must only contain 2 coordinates');\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    var numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    var numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + (uA * (x2 - x1));\n        var y = y1 + (uA * (y2 - y1));\n        return Object(__WEBPACK_IMPORTED_MODULE_4__turf_helpers__[\"c\" /* point */])([x, y]);\n    }\n    return null;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (lineIntersect);\n\n\n/***/ }),\n\n/***/ 5849:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 5850:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar findLayerById=function findLayerById(layerId,layers){return layers.find(function(l){return l.id===layerId;});};/* harmony default export */ __webpack_exports__[\"a\"] = (findLayerById);\n\n/***/ }),\n\n/***/ 5940:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__DialogActions_SubmitOrCancelAction__ = __webpack_require__(5714);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__DialogActions_OkAction__ = __webpack_require__(5724);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_geoprocessing_intersectFunction__ = __webpack_require__(5808);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_geoprocessing_differenceFunction__ = __webpack_require__(5943);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__utils_geoprocessing_unionFunction__ = __webpack_require__(5949);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils_geoprocessing_bufferFunction__ = __webpack_require__(5953);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__utils_geoprocessing_bboxFunction__ = __webpack_require__(5841);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__utils_geoprocessing_voronoiFunction__ = __webpack_require__(6006);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__utils_geoprocessing_clipFunction__ = __webpack_require__(6014);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_react_loadable__ = __webpack_require__(146);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_react_loadable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_react_loadable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__utils_Loading_LoadingCirular__ = __webpack_require__(6038);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__MultiLayerSelect__ = __webpack_require__(6039);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__LayerNameTextField__ = __webpack_require__(5730);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_notistack__ = __webpack_require__(77);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_notistack___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_notistack__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__ = __webpack_require__(6055);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__DialogContent_DialogFeedback__ = __webpack_require__(5773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__BboxTextField__ = __webpack_require__(6056);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__utils_findLayerById__ = __webpack_require__(5850);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__LayersSelect__ = __webpack_require__(5731);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**\r\n * Contains content of All geoprocessing.\r\n */var BufferContent=__WEBPACK_IMPORTED_MODULE_12_react_loadable___default()({loader:function loader(){return __webpack_require__.e/* import() */(12).then(__webpack_require__.bind(null, 6057));},delay:300,// 0.3 seconds\nloading:__WEBPACK_IMPORTED_MODULE_13__utils_Loading_LoadingCirular__[\"a\" /* default */]});var LayerLayerGeoprocessingContent=__WEBPACK_IMPORTED_MODULE_12_react_loadable___default()({loader:function loader(){return __webpack_require__.e/* import() */(11).then(__webpack_require__.bind(null, 6058));},delay:300,// 0.3 seconds\nloading:__WEBPACK_IMPORTED_MODULE_13__utils_Loading_LoadingCirular__[\"a\" /* default */]});var styles=function styles(theme){return{dialogPaper:{minHeight:'50vh',//overflowY: \"visible\",\nmaxHeight:'100vh'},spaced:{marginBottom:50},spacedALittle:{marginTop:theme.spacing.unit*3},container:{display:'flex',flexWrap:'wrap',width:'100%'}};};var GeoProcessingDialog=function(_Component){_inherits(GeoProcessingDialog,_Component);function GeoProcessingDialog(){var _ref;var _temp,_this,_ret;_classCallCheck(this,GeoProcessingDialog);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=GeoProcessingDialog.__proto__||Object.getPrototypeOf(GeoProcessingDialog)).call.apply(_ref,[this].concat(args))),_this),_this.state={processingFunction:null,layerIds:[],//Ids of the selectedLayers\noutputName:'',errorMessage:'',distance:'',bbox:['','','',''],clipLayer:''},_this.setLayerIds=function(layerIds){_this.setState({layerIds:layerIds});},_this.setSingleLayerId=function(layerId){var layerIds=_this.state.layerIds;layerIds[0]=layerId;_this.setState({layerIds:layerIds});},_this.setProcessingFunction=function(type){var func=null;switch(type){case'intersect':func=__WEBPACK_IMPORTED_MODULE_5__utils_geoprocessing_intersectFunction__[\"a\" /* default */];break;case'union':func=__WEBPACK_IMPORTED_MODULE_7__utils_geoprocessing_unionFunction__[\"a\" /* default */];break;case'difference':func=__WEBPACK_IMPORTED_MODULE_6__utils_geoprocessing_differenceFunction__[\"a\" /* default */];break;case'buffer':func=__WEBPACK_IMPORTED_MODULE_8__utils_geoprocessing_bufferFunction__[\"a\" /* default */];break;case'bbox':func=__WEBPACK_IMPORTED_MODULE_9__utils_geoprocessing_bboxFunction__[\"a\" /* default */];break;case'voronoi':func=__WEBPACK_IMPORTED_MODULE_10__utils_geoprocessing_voronoiFunction__[\"a\" /* default */];break;case'clip':func=__WEBPACK_IMPORTED_MODULE_11__utils_geoprocessing_clipFunction__[\"a\" /* default */];break;default:break;}_this.setState({processingFunction:func});},_this.calculate=function(){var _this$props=_this.props,closeDialog=_this$props.closeDialog,type=_this$props.type,layers=_this$props.layers,enqueueSnackbar=_this$props.enqueueSnackbar;var _this$state=_this.state,bbox=_this$state.bbox,processingFunction=_this$state.processingFunction,layerIds=_this$state.layerIds,outputName=_this$state.outputName,distance=_this$state.distance,clipLayer=_this$state.clipLayer;var selectedLayersDataList=[];for(var i in layerIds){//let layer = layers.find( l => l.id === layerIds[i] );\nvar layer=Object(__WEBPACK_IMPORTED_MODULE_20__utils_findLayerById__[\"a\" /* default */])(layerIds[i],layers);if(layer){var data=layer?layer.data:null;data.dispName=layer.displayName;selectedLayersDataList.push(data);}}var newJson=void 0;var feedbackText='';if(type==='buffer'){newJson=processingFunction(selectedLayersDataList[0],distance);}else if(type==='bbox'){var res=processingFunction(selectedLayersDataList);newJson=res.newJson;if(res.bbox){feedbackText='bbox calculated. [minX, minY, maxX, maxY] = [ '+Object(__WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__[\"a\" /* default */])(res.bbox[0],4)+', '+Object(__WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__[\"a\" /* default */])(res.bbox[1],4)+', '+Object(__WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__[\"a\" /* default */])(res.bbox[2],4)+', '+Object(__WEBPACK_IMPORTED_MODULE_17__utils_roundToNdecimals__[\"a\" /* default */])(res.bbox[3],4)+' ]';}}else if(type==='voronoi'){newJson=processingFunction(selectedLayersDataList,bbox);newJson.opacity=0.5;}else if(type==='clip'){var clipAreaLayer=layers.find(function(l){return l.id===clipLayer;});var errorMessage='';if(clipAreaLayer&&selectedLayersDataList.length>0){var clipArea=clipAreaLayer.data;var newJsons=processingFunction(selectedLayersDataList,clipArea);if(newJson==='Select layers to proceed'){errorMessage=newJson;_this.setState({errorMessage:errorMessage});}else{newJsons.forEach(function(newJson){if(typeof newJson==='string'){enqueueSnackbar(newJson,{variant:'error'});}else{var newName=newJson?'clip_'+newJson.dispName:';';_this.submitNewLayer(newJson,'',newName,false);}});}}else if(!clipAreaLayer){errorMessage='select clip layer';_this.setState({errorMessage:errorMessage});}else if(selectedLayersDataList.length===0){errorMessage='Select layers to proceed';_this.setState({errorMessage:errorMessage});}if(errorMessage.length===0){closeDialog();}}else if(type==='intersect'||type==='union'||type==='difference'){newJson=processingFunction(selectedLayersDataList[0],selectedLayersDataList[1]);}if(newJson){_this.submitNewLayer(newJson,feedbackText,outputName);}},_this.submitNewLayer=function(newJson,feedbackText,outputName){var closeAfter=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var _this$props2=_this.props,receiveNewJson=_this$props2.receiveNewJson,type=_this$props2.type,enqueueSnackbar=_this$props2.enqueueSnackbar,closeDialog=_this$props2.closeDialog;if(newJson.type===\"FeatureCollection\"){receiveNewJson(newJson,outputName);var succesMessage=type+' layer was successfully created';feedbackText=feedbackText?feedbackText:succesMessage;try{enqueueSnackbar(feedbackText,{variant:'success'});}catch(error){console.log('error supressed');}if(closeAfter){closeDialog();}}else{_this.setState({errorMessage:newJson});}},_this.setError=function(message){_this.setState({errorMessage:message});},_this.handleClose=function(){var closeDialog=_this.props.closeDialog;closeDialog();},_this.setName=function(name){_this.setState({outputName:name});},_this.changeDistance=function(value){_this.setState({distance:value});},_this.setBbox=function(bbox){_this.setState({bbox:bbox});},_this.setClipLayer=function(layerId){_this.setState({clipLayer:layerId});},_this.getContent=function(type){var _this$props3=_this.props,layers=_this$props3.layers,classes=_this$props3.classes;var _this$state2=_this.state,outputName=_this$state2.outputName,errorMessage=_this$state2.errorMessage,distance=_this$state2.distance,layerIds=_this$state2.layerIds,bbox=_this$state2.bbox;if(type==='intersect'||type==='difference'||type==='union'){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(LayerLayerGeoprocessingContent,{errorMessage:errorMessage,layers:layers,layerIds:layerIds,setLayerIds:_this.setLayerIds.bind(_this),outputName:outputName,setName:_this.setName.bind(_this),type:type});};if(type==='buffer'){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(BufferContent,{errorMessage:errorMessage,layers:layers,changeLayer:_this.setSingleLayerId.bind(_this),distance:distance,changeDistance:_this.changeDistance.bind(_this),outputName:outputName,setName:_this.setName.bind(_this),layerId:layerIds[0]});}if(type==='bbox'){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"g\" /* DialogContent */],{classes:{root:classes.dialogPaper}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_14__MultiLayerSelect__[\"a\" /* default */],{layers:layers,setLayerIds:_this.setLayerIds.bind(_this)}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_15__LayerNameTextField__[\"a\" /* default */],{layerName:outputName,setName:_this.setName.bind(_this),defaultName:outputName,layers:layers,layerIndex:-1,promt:'Output layer name'}));}if(type==='voronoi'){var layerOptions=layers.filter(function(layer){return layer.type===\"Point\";});return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"g\" /* DialogContent */],{classes:{root:classes.dialogPaper}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_18__DialogContent_DialogFeedback__[\"a\" /* default */],{message:type+' operation only accepts Point layers'}),errorMessage.length>0?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_18__DialogContent_DialogFeedback__[\"a\" /* default */],{message:errorMessage,variant:'error'}):null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.spacedALittle}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_14__MultiLayerSelect__[\"a\" /* default */],{className:classes.spacedALittle,layers:layerOptions,setLayerIds:_this.setLayerIds.bind(_this)}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.spacedALittle}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_19__BboxTextField__[\"a\" /* default */],{optional:true,layers:layerOptions,setBbox:_this.setBbox.bind(_this),bbox:bbox,layerIds:layerIds,setError:_this.setError.bind(_this)}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_15__LayerNameTextField__[\"a\" /* default */],{layerName:outputName,setName:_this.setName.bind(_this),defaultName:outputName,layers:layers,layerIndex:-1,promt:'Output layer name'}));}if(type==='clip'){var polygonLayers=layers.filter(function(layer){return layer.type===\"Polygon\"||layer.type===\"MultiPolygon\";});var clipLayer=_this.state.clipLayer;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"g\" /* DialogContent */],{classes:{root:classes.dialogPaper}},errorMessage.length>0?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_18__DialogContent_DialogFeedback__[\"a\" /* default */],{message:errorMessage,variant:'error'}):null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.spacedALittle}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_14__MultiLayerSelect__[\"a\" /* default */],{className:classes.spacedALittle,layers:layers,setLayerIds:_this.setLayerIds.bind(_this),promt:'Choose layers to clip'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.spacedALittle}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_21__LayersSelect__[\"a\" /* default */],{className:classes.spaced,layers:polygonLayers,layerId:clipLayer,changeLayer:_this.setClipLayer.bind(_this),promt:'Choose clip layer (polygon)'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.spacedALittle}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"M\" /* Typography */],null,'This operation will clip all selected layers to the area defined by the clip polygon. Output layer names will by \\'clip_\\' + layer name '));}return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"g\" /* DialogContent */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"M\" /* Typography */],null,type));},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(GeoProcessingDialog,[{key:'componentDidMount',value:function componentDidMount(){var type=this.props.type;this.setProcessingFunction(type);this.setState({outputName:type});}},{key:'render',value:function render(){var _props=this.props,open=_props.open,layers=_props.layers,type=_props.type,classes=_props.classes;var content=layers.length>0?this.getContent(type):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"g\" /* DialogContent */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"M\" /* Typography */],null,'Add some layers first'));var actions=layers.length>0?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__DialogActions_SubmitOrCancelAction__[\"a\" /* default */],{submitText:'Calculate',submit:this.calculate,cancel:this.handleClose}):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__DialogActions_OkAction__[\"a\" /* default */],{ok:this.handleClose});var diaglogTitle=type.charAt(0).toUpperCase()+type.slice(1);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"e\" /* Dialog */],{fullWidth:true,open:open,onClose:this.handleClose,scroll:'paper','aria-labelledby':'scroll-dialog-title',classes:{paper:classes.dialogPaper}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"h\" /* DialogTitle */],{id:'scroll-dialog-title'},diaglogTitle),content,actions);}}]);return GeoProcessingDialog;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(Object(__WEBPACK_IMPORTED_MODULE_16_notistack__[\"withSnackbar\"])(GeoProcessingDialog)));\n\n/***/ }),\n\n/***/ 5941:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(5809);\r\nvar invariant_1 = __webpack_require__(5942);\r\nvar martinez = __importStar(__webpack_require__(5810));\r\n/**\r\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\r\n * finds their polygonal intersection. If they don't intersect, returns null.\r\n *\r\n * @name intersect\r\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\r\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\r\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\r\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *   [-122.801742, 45.48565],\r\n *   [-122.801742, 45.60491],\r\n *   [-122.584762, 45.60491],\r\n *   [-122.584762, 45.48565],\r\n *   [-122.801742, 45.48565]\r\n * ]]);\r\n *\r\n * var poly2 = turf.polygon([[\r\n *   [-122.520217, 45.535693],\r\n *   [-122.64038, 45.553967],\r\n *   [-122.720031, 45.526554],\r\n *   [-122.669906, 45.507309],\r\n *   [-122.723464, 45.446643],\r\n *   [-122.532577, 45.408574],\r\n *   [-122.487258, 45.477466],\r\n *   [-122.520217, 45.535693]\r\n * ]]);\r\n *\r\n * var intersection = turf.intersect(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, intersection];\r\n */\r\nfunction intersect(poly1, poly2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var geom1 = invariant_1.getGeom(poly1);\r\n    var geom2 = invariant_1.getGeom(poly2);\r\n    if (geom1.type === \"Polygon\" && geom2.type === \"Polygon\") {\r\n        var intersection = martinez.intersection(geom1.coordinates, geom2.coordinates);\r\n        if (intersection === null || intersection.length === 0) {\r\n            return null;\r\n        }\r\n        if (intersection.length === 1) {\r\n            var start = intersection[0][0][0];\r\n            var end = intersection[0][0][intersection[0][0].length - 1];\r\n            if (start[0] === end[0] && start[1] === end[1]) {\r\n                return helpers_1.polygon(intersection[0], options.properties);\r\n            }\r\n            return null;\r\n        }\r\n        return helpers_1.multiPolygon(intersection, options.properties);\r\n    }\r\n    else if (geom1.type === \"MultiPolygon\") {\r\n        var resultCoords = [];\r\n        // iterate through the polygon and run intersect with each part, adding to the resultCoords.\r\n        for (var _i = 0, _a = geom1.coordinates; _i < _a.length; _i++) {\r\n            var coords = _a[_i];\r\n            var subGeom = invariant_1.getGeom(helpers_1.polygon(coords));\r\n            var subIntersection = intersect(subGeom, geom2);\r\n            if (subIntersection) {\r\n                var subIntGeom = invariant_1.getGeom(subIntersection);\r\n                if (subIntGeom.type === \"Polygon\") {\r\n                    resultCoords.push(subIntGeom.coordinates);\r\n                }\r\n                else if (subIntGeom.type === \"MultiPolygon\") {\r\n                    resultCoords = resultCoords.concat(subIntGeom.coordinates);\r\n                }\r\n                else {\r\n                    throw new Error(\"intersection is invalid\");\r\n                }\r\n            }\r\n        }\r\n        // Make a polygon with the result\r\n        if (resultCoords.length === 0) {\r\n            return null;\r\n        }\r\n        if (resultCoords.length === 1) {\r\n            return helpers_1.polygon(resultCoords[0], options.properties);\r\n        }\r\n        else {\r\n            return helpers_1.multiPolygon(resultCoords, options.properties);\r\n        }\r\n    }\r\n    else if (geom2.type === \"MultiPolygon\") {\r\n        // geom1 is a polygon and geom2 a multiPolygon,\r\n        // put the multiPolygon first and fallback to the previous case.\r\n        return intersect(geom2, geom1);\r\n    }\r\n    else {\r\n        // handle invalid geometry types\r\n        throw new Error(\"poly1 and poly2 must be either polygons or multiPolygons\");\r\n    }\r\n}\r\nexports.default = intersect;\r\n\n\n/***/ }),\n\n/***/ 5942:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(5809);\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n/***/ }),\n\n/***/ 5943:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_difference__ = __webpack_require__(5944);\nvar differenceFunction=function differenceFunction(geojson1,geojson2){if(!(geojson1&&geojson2)){return'Two geometries are required';}else if(geojson1.features[0].geometry.type!=='Polygon'&&geojson1.features[0].geometry.type!=='MultiPolygon'){return'The geometries must be of type Polygon or MultiPolygon.';}else if(geojson1===geojson2){return'The geometries cannot be identical';}var newFeatures=[];geojson1.features.forEach(function(f1,i){var f1_temp=JSON.parse(JSON.stringify(f1));geojson2.features.forEach(function(f2){f1_temp=Object(__WEBPACK_IMPORTED_MODULE_0__turf_difference__[\"a\" /* default */])(f1_temp,f2);});newFeatures.push(f1_temp);});newFeatures.forEach(function(f,i){geojson1.features[i]=f;});//Remove all null or unidentified features\ngeojson1.features=geojson1.features.filter(function(f){return f!=null;});if(!geojson1.features[0]){return'There is no geometry left after performing the difference operation. Try swapping the order';}return geojson1;};/* harmony default export */ __webpack_exports__[\"a\"] = (differenceFunction);\n\n/***/ }),\n\n/***/ 5944:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_turf_jsts__ = __webpack_require__(5812);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_turf_jsts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_turf_jsts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_area__ = __webpack_require__(5945);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_helpers__ = __webpack_require__(5947);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_meta__ = __webpack_require__(5700);\n\n\n\n\n\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = Object(__WEBPACK_IMPORTED_MODULE_3__turf_invariant__[\"d\" /* getGeom */])(polygon1);\n    var geom2 = Object(__WEBPACK_IMPORTED_MODULE_3__turf_invariant__[\"d\" /* getGeom */])(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"a\" /* feature */])(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new __WEBPACK_IMPORTED_MODULE_0_turf_jsts__[\"GeoJSONReader\"]();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = __WEBPACK_IMPORTED_MODULE_0_turf_jsts__[\"OverlayOp\"].difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new __WEBPACK_IMPORTED_MODULE_0_turf_jsts__[\"GeoJSONWriter\"]();\n    var geom = writer.write(differenced);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"a\" /* feature */])(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__turf_area__[\"a\" /* default */])(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"d\" /* flattenEach */])(geom, function (feature$$1) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_1__turf_area__[\"a\" /* default */])(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (difference);\n\n\n/***/ }),\n\n/***/ 5945:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_meta__ = __webpack_require__(5700);\n\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__turf_meta__[\"f\" /* geomReduce */])(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (area);\n\n\n/***/ }),\n\n/***/ 5946:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return feature; });\n/* unused harmony export geometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return point; });\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return lineString; });\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5947:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return feature; });\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5948:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isNumber; });\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5949:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_union__ = __webpack_require__(5950);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_union___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_union__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__performActionOnAllFeaturePairs__ = __webpack_require__(5811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__combineFeatures__ = __webpack_require__(5758);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getSimpleJsonType__ = __webpack_require__(5952);\n/**\r\n * returns a union of two geojsons.\r\n */var unionFunction=function unionFunction(geojson1,geojson2){var type1=Object(__WEBPACK_IMPORTED_MODULE_3__getSimpleJsonType__[\"a\" /* default */])(geojson1);var type2=Object(__WEBPACK_IMPORTED_MODULE_3__getSimpleJsonType__[\"a\" /* default */])(geojson2);if(!(geojson1&&geojson2)){return'Two geometries are required';}else if(type1!==type2){return'The geometries must be of the same type.';}else if(geojson1===geojson2){return'The geometries cannot be identical';}var newGeojson=void 0;if(type1==='Polygon'){newGeojson=Object(__WEBPACK_IMPORTED_MODULE_1__performActionOnAllFeaturePairs__[\"a\" /* default */])(geojson1,geojson2,__WEBPACK_IMPORTED_MODULE_0__turf_union___default.a);}else{newGeojson=Object(__WEBPACK_IMPORTED_MODULE_2__combineFeatures__[\"a\" /* default */])([geojson1,geojson2]);}//Remove null or undefined features:\nnewGeojson.features=newGeojson.features.filter(function(f){return f!=null;});return newGeojson;};/* harmony default export */ __webpack_exports__[\"a\"] = (unionFunction);\n\n/***/ }),\n\n/***/ 5950:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar martinez = __webpack_require__(5810);\r\nvar invariant_1 = __webpack_require__(5951);\r\nvar helpers_1 = __webpack_require__(5813);\r\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\r\nfunction union(polygon1, polygon2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var coords1 = invariant_1.getGeom(polygon1).coordinates;\r\n    var coords2 = invariant_1.getGeom(polygon2).coordinates;\r\n    var unioned = martinez.union(coords1, coords2);\r\n    if (unioned.length === 0)\r\n        return null;\r\n    if (unioned.length === 1)\r\n        return helpers_1.polygon(unioned[0], options.properties);\r\n    else\r\n        return helpers_1.multiPolygon(unioned, options.properties);\r\n}\r\nexports.default = union;\r\n\n\n/***/ }),\n\n/***/ 5951:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(5813);\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n/***/ }),\n\n/***/ 5952:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// Polygon and Multipolygon are both classified as Polygon\n// LineString and MultiLineString are both calssified as Linestring\nvar getSimpleJsonType=function getSimpleJsonType(json){var type=void 0;switch(json.features[0].geometry.type){case'Polygon':case'MultiPolygon':type='Polygon';break;case'LineString':case'MultiLineString':type='LineString';break;case'Point':type='Point';break;default:break;}return type;};/* harmony default export */ __webpack_exports__[\"a\"] = (getSimpleJsonType);\n\n/***/ }),\n\n/***/ 5953:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_buffer__ = __webpack_require__(5954);\nvar bufferFunction=function bufferFunction(geojson,distance){if(!geojson){return'select a layer';}if(!distance){return'choose a distance in meters';}var newGeojson=Object(__WEBPACK_IMPORTED_MODULE_0__turf_buffer__[\"a\" /* default */])(geojson,distance,{units:'meters'});//Remove null or undefined features:\nnewGeojson.features=newGeojson.features.filter(function(f){return f!=null;});if(!newGeojson.features[0]){return'The geometry remaining';}return newGeojson;};/* harmony default export */ __webpack_exports__[\"a\"] = (bufferFunction);\n\n/***/ }),\n\n/***/ 5954:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_center__ = __webpack_require__(5955);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_bbox__ = __webpack_require__(5814);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_turf_jsts__ = __webpack_require__(5812);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_turf_jsts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_turf_jsts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_projection__ = __webpack_require__(5956);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_d3_geo__ = __webpack_require__(5959);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__turf_helpers__ = __webpack_require__(5815);\n\n\n\n\n\n\n\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=64] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n    // Optional params\n    options = options || {};\n    var units = options.units;\n    var steps = options.steps || 64;\n\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be an number');\n\n    // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n    if (radius === undefined) throw new Error('radius is required');\n    if (steps <= 0) throw new Error('steps must be greater than 0');\n\n    // default params\n    steps = steps || 64;\n    units = units || 'kilometers';\n\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"e\" /* geomEach */])(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"c\" /* featureCollection */])(results);\n    case 'FeatureCollection':\n        Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"b\" /* featureEach */])(geojson, function (feature$$1) {\n            var multiBuffered = bufferFeature(feature$$1, radius, units, steps);\n            if (multiBuffered) {\n                Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"b\" /* featureEach */])(multiBuffered, function (buffered) {\n                    if (buffered) results.push(buffered);\n                });\n            }\n        });\n        return Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"c\" /* featureCollection */])(results);\n    }\n    return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=64] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n    var properties = geojson.properties || {};\n    var geometry = (geojson.type === 'Feature') ? geojson.geometry : geojson;\n\n    // Geometry Types faster than jsts\n    if (geometry.type === 'GeometryCollection') {\n        var results = [];\n        Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"e\" /* geomEach */])(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"c\" /* featureCollection */])(results);\n    }\n\n    // Project GeoJSON to Transverse Mercator projection (convert to Meters)\n    var projected;\n    var bbox = Object(__WEBPACK_IMPORTED_MODULE_1__turf_bbox__[\"a\" /* default */])(geojson);\n    var needsTransverseMercator = bbox[1] > 50 && bbox[3] > 50;\n\n    if (needsTransverseMercator) {\n        projected = {\n            type: geometry.type,\n            coordinates: projectCoords(geometry.coordinates, defineProjection(geometry))\n        };\n    } else {\n        projected = Object(__WEBPACK_IMPORTED_MODULE_3__turf_projection__[\"a\" /* toMercator */])(geometry);\n    }\n\n    // JSTS buffer operation\n    var reader = new __WEBPACK_IMPORTED_MODULE_2_turf_jsts__[\"GeoJSONReader\"]();\n    var geom = reader.read(projected);\n    var distance = Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"g\" /* radiansToLength */])(Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"e\" /* lengthToRadians */])(radius, units), 'meters');\n    var buffered = __WEBPACK_IMPORTED_MODULE_2_turf_jsts__[\"BufferOp\"].bufferOp(geom, distance);\n    var writer = new __WEBPACK_IMPORTED_MODULE_2_turf_jsts__[\"GeoJSONWriter\"]();\n    buffered = writer.write(buffered);\n\n    // Detect if empty geometries\n    if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n    // Unproject coordinates (convert to Degrees)\n    var result;\n    if (needsTransverseMercator) {\n        result = {\n            type: buffered.type,\n            coordinates: unprojectCoords(buffered.coordinates, defineProjection(geometry))\n        };\n    } else {\n        result = Object(__WEBPACK_IMPORTED_MODULE_3__turf_projection__[\"b\" /* toWgs84 */])(buffered);\n    }\n\n    return (result.geometry) ? result : Object(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"b\" /* feature */])(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n    if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n    return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj(coords);\n    return coords.map(function (coord) {\n        return projectCoords(coord, proj);\n    });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj.invert(coords);\n    return coords.map(function (coord) {\n        return unprojectCoords(coord, proj);\n    });\n}\n\n/**\n * Define Transverse Mercator projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Transverse Mercator Projection\n */\nfunction defineProjection(geojson) {\n    var coords = Object(__WEBPACK_IMPORTED_MODULE_0__turf_center__[\"a\" /* default */])(geojson).geometry.coordinates.reverse();\n    var rotate = coords.map(function (coord) { return -coord; });\n    return Object(__WEBPACK_IMPORTED_MODULE_5_d3_geo__[\"a\" /* geoTransverseMercator */])()\n        .center(coords)\n        .rotate(rotate)\n        .scale(__WEBPACK_IMPORTED_MODULE_6__turf_helpers__[\"a\" /* earthRadius */]);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (buffer);\n\n\n/***/ }),\n\n/***/ 5955:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_bbox__ = __webpack_require__(5814);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(5815);\n\n\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.featureCollection([\n *   turf.point( [-97.522259, 35.4691]),\n *   turf.point( [-97.502754, 35.463455]),\n *   turf.point( [-97.508269, 35.463245])\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"d\" /* isObject */])(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n\n    var ext = Object(__WEBPACK_IMPORTED_MODULE_0__turf_bbox__[\"a\" /* default */])(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"f\" /* point */])([x, y], properties);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (center);\n\n\n/***/ }),\n\n/***/ 5956:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return toMercator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return toWgs84; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(5957);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_clone__ = __webpack_require__(5958);\n\n\n\n\n/**\n * Converts a WGS84 GeoJSON object into Mercator (EPSG:900913) projection\n *\n * @name toMercator\n * @param {GeoJSON|Position} geojson WGS84 GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-71,41]);\n * var converted = turf.toMercator(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toMercator(geojson, options) {\n    return convert(geojson, 'mercator', options);\n}\n\n/**\n * Converts a Mercator (EPSG:900913) GeoJSON object into WGS84 projection\n *\n * @name toWgs84\n * @param {GeoJSON|Position} geojson Mercator GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-7903683.846322424, 5012341.663847514]);\n * var converted = turf.toWgs84(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toWgs84(geojson, options) {\n    return convert(geojson, 'wgs84', options);\n}\n\n\n/**\n * Converts a GeoJSON coordinates to the defined `projection`\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON Feature or Geometry\n * @param {string} projection defines the projection system to convert the coordinates to\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n */\nfunction convert(geojson, projection, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n\n    // Handle Position\n    if (Array.isArray(geojson) && Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* isNumber */])(geojson[0])) geojson = (projection === 'mercator') ? convertToMercator(geojson) : convertToWgs84(geojson);\n\n    // Handle GeoJSON\n    else {\n        // Handle possible data mutation\n        if (mutate !== true) geojson = Object(__WEBPACK_IMPORTED_MODULE_2__turf_clone__[\"a\" /* default */])(geojson);\n\n        Object(__WEBPACK_IMPORTED_MODULE_0__turf_meta__[\"a\" /* coordEach */])(geojson, function (coord) {\n            var newCoord = (projection === 'mercator') ? convertToMercator(coord) : convertToWgs84(coord);\n            coord[0] = newCoord[0];\n            coord[1] = newCoord[1];\n        });\n    }\n    return geojson;\n}\n\n/**\n * Convert lon/lat values to 900913 x/y.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} lonLat WGS84 point\n * @returns {Array<number>} Mercator [x, y] point\n */\nfunction convertToMercator(lonLat) {\n    var D2R = Math.PI / 180,\n        // 900913 properties\n        A = 6378137.0,\n        MAXEXTENT = 20037508.342789244;\n\n    // compensate longitudes passing the 180th meridian\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n    var adjusted = (Math.abs(lonLat[0]) <= 180) ? lonLat[0] : (lonLat[0] - (sign(lonLat[0]) * 360));\n    var xy = [\n        A * adjusted * D2R,\n        A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * lonLat[1] * D2R)))\n    ];\n\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n    return xy;\n}\n\n/**\n * Convert 900913 x/y values to lon/lat.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} xy Mercator [x, y] point\n * @returns {Array<number>} WGS84 [lon, lat] point\n */\nfunction convertToWgs84(xy) {\n    // 900913 properties.\n    var R2D = 180 / Math.PI;\n    var A = 6378137.0;\n\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n}\n\n/**\n * Returns the sign of the input, or zero\n *\n * @private\n * @param {number} x input\n * @returns {number} -1|0|1 output\n */\nfunction sign(x) {\n    return (x < 0) ? -1 : (x > 0) ? 1 : 0;\n}\n\n\n\n\n/***/ }),\n\n/***/ 5957:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 5958:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (clone);\n\n\n/***/ }),\n\n/***/ 5959:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_area__ = __webpack_require__(5816);\n/* unused harmony reexport geoArea */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_bounds__ = __webpack_require__(5960);\n/* unused harmony reexport geoBounds */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_centroid__ = __webpack_require__(5961);\n/* unused harmony reexport geoCentroid */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_circle__ = __webpack_require__(5817);\n/* unused harmony reexport geoCircle */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_clip_extent__ = __webpack_require__(5759);\n/* unused harmony reexport geoClipExtent */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_contains__ = __webpack_require__(5980);\n/* unused harmony reexport geoContains */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_distance__ = __webpack_require__(5835);\n/* unused harmony reexport geoDistance */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_graticule__ = __webpack_require__(5981);\n/* unused harmony reexport geoGraticule */\n/* unused harmony reexport geoGraticule10 */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_interpolate__ = __webpack_require__(5982);\n/* unused harmony reexport geoInterpolate */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_length__ = __webpack_require__(5836);\n/* unused harmony reexport geoLength */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_path_index__ = __webpack_require__(5983);\n/* unused harmony reexport geoPath */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_projection_albers__ = __webpack_require__(5838);\n/* unused harmony reexport geoAlbers */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_projection_albersUsa__ = __webpack_require__(5993);\n/* unused harmony reexport geoAlbersUsa */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_projection_azimuthalEqualArea__ = __webpack_require__(5994);\n/* unused harmony reexport geoAzimuthalEqualArea */\n/* unused harmony reexport geoAzimuthalEqualAreaRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_projection_azimuthalEquidistant__ = __webpack_require__(5995);\n/* unused harmony reexport geoAzimuthalEquidistant */\n/* unused harmony reexport geoAzimuthalEquidistantRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__src_projection_conicConformal__ = __webpack_require__(5996);\n/* unused harmony reexport geoConicConformal */\n/* unused harmony reexport geoConicConformalRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__src_projection_conicEqualArea__ = __webpack_require__(5763);\n/* unused harmony reexport geoConicEqualArea */\n/* unused harmony reexport geoConicEqualAreaRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__src_projection_conicEquidistant__ = __webpack_require__(5997);\n/* unused harmony reexport geoConicEquidistant */\n/* unused harmony reexport geoConicEquidistantRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__src_projection_equirectangular__ = __webpack_require__(5840);\n/* unused harmony reexport geoEquirectangular */\n/* unused harmony reexport geoEquirectangularRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__src_projection_gnomonic__ = __webpack_require__(5998);\n/* unused harmony reexport geoGnomonic */\n/* unused harmony reexport geoGnomonicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__src_projection_identity__ = __webpack_require__(5999);\n/* unused harmony reexport geoIdentity */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__src_projection_index__ = __webpack_require__(5706);\n/* unused harmony reexport geoProjection */\n/* unused harmony reexport geoProjectionMutator */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__src_projection_mercator__ = __webpack_require__(5766);\n/* unused harmony reexport geoMercator */\n/* unused harmony reexport geoMercatorRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__src_projection_naturalEarth1__ = __webpack_require__(6000);\n/* unused harmony reexport geoNaturalEarth1 */\n/* unused harmony reexport geoNaturalEarth1Raw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__src_projection_orthographic__ = __webpack_require__(6001);\n/* unused harmony reexport geoOrthographic */\n/* unused harmony reexport geoOrthographicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__src_projection_stereographic__ = __webpack_require__(6002);\n/* unused harmony reexport geoStereographic */\n/* unused harmony reexport geoStereographicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__src_projection_transverseMercator__ = __webpack_require__(6003);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_26__src_projection_transverseMercator__[\"a\"]; });\n/* unused harmony reexport geoTransverseMercatorRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__src_rotation__ = __webpack_require__(5737);\n/* unused harmony reexport geoRotation */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__src_stream__ = __webpack_require__(5715);\n/* unused harmony reexport geoStream */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__src_transform__ = __webpack_require__(5738);\n/* unused harmony reexport geoTransform */\n\n\n\n\n // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/***/ }),\n\n/***/ 5960:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__area__ = __webpack_require__(5816);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__cartesian__ = __webpack_require__(5725);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__stream__ = __webpack_require__(5715);\n\n\n\n\n\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    __WEBPACK_IMPORTED_MODULE_1__area__[\"b\" /* areaStream */].polygonStart();\n  },\n  polygonEnd: function() {\n    __WEBPACK_IMPORTED_MODULE_1__area__[\"b\" /* areaStream */].polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (__WEBPACK_IMPORTED_MODULE_1__area__[\"a\" /* areaRingSum */] < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > __WEBPACK_IMPORTED_MODULE_3__math__[\"i\" /* epsilon */]) phi1 = 90;\n    else if (deltaSum < -__WEBPACK_IMPORTED_MODULE_3__math__[\"i\" /* epsilon */]) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = Object(__WEBPACK_IMPORTED_MODULE_2__cartesian__[\"a\" /* cartesian */])([lambda * __WEBPACK_IMPORTED_MODULE_3__math__[\"r\" /* radians */], phi * __WEBPACK_IMPORTED_MODULE_3__math__[\"r\" /* radians */]]);\n  if (p0) {\n    var normal = Object(__WEBPACK_IMPORTED_MODULE_2__cartesian__[\"c\" /* cartesianCross */])(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = Object(__WEBPACK_IMPORTED_MODULE_2__cartesian__[\"c\" /* cartesianCross */])(equatorial, normal);\n    Object(__WEBPACK_IMPORTED_MODULE_2__cartesian__[\"e\" /* cartesianNormalizeInPlace */])(inflection);\n    inflection = Object(__WEBPACK_IMPORTED_MODULE_2__cartesian__[\"g\" /* spherical */])(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * __WEBPACK_IMPORTED_MODULE_3__math__[\"h\" /* degrees */] * sign,\n        phii,\n        antimeridian = Object(__WEBPACK_IMPORTED_MODULE_3__math__[\"a\" /* abs */])(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * __WEBPACK_IMPORTED_MODULE_3__math__[\"h\" /* degrees */];\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * __WEBPACK_IMPORTED_MODULE_3__math__[\"h\" /* degrees */];\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(Object(__WEBPACK_IMPORTED_MODULE_3__math__[\"a\" /* abs */])(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  __WEBPACK_IMPORTED_MODULE_1__area__[\"b\" /* areaStream */].point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  __WEBPACK_IMPORTED_MODULE_1__area__[\"b\" /* areaStream */].lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  __WEBPACK_IMPORTED_MODULE_1__area__[\"b\" /* areaStream */].lineEnd();\n  if (Object(__WEBPACK_IMPORTED_MODULE_3__math__[\"a\" /* abs */])(deltaSum) > __WEBPACK_IMPORTED_MODULE_3__math__[\"i\" /* epsilon */]) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  Object(__WEBPACK_IMPORTED_MODULE_4__stream__[\"a\" /* default */])(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n});\n\n\n/***/ }),\n\n/***/ 5961:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__noop__ = __webpack_require__(5709);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__stream__ = __webpack_require__(5715);\n\n\n\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: __WEBPACK_IMPORTED_MODULE_1__noop__[\"a\" /* default */],\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */];\n  var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi);\n  centroidPointCartesian(cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda), cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda), Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */];\n  var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi);\n  x0 = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda);\n  y0 = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda);\n  z0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */];\n  var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi),\n      x = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda),\n      y = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda),\n      z = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi),\n      w = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */];\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi);\n  x0 = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda);\n  y0 = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda);\n  z0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */], phi *= __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */];\n  var cosPhi = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi),\n      x = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(lambda),\n      y = cosPhi * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(lambda),\n      z = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(cx * cx + cy * cy + cz * cz),\n      w = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  Object(__WEBPACK_IMPORTED_MODULE_2__stream__[\"a\" /* default */])(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < __WEBPACK_IMPORTED_MODULE_0__math__[\"j\" /* epsilon2 */]) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < __WEBPACK_IMPORTED_MODULE_0__math__[\"j\" /* epsilon2 */]) return [NaN, NaN];\n  }\n\n  return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(y, x) * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */], Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(z / Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(m)) * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */]];\n});\n\n\n/***/ }),\n\n/***/ 5962:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return function() {\n    return x;\n  };\n});\n\n\n/***/ }),\n\n/***/ 5963:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n});\n\n\n/***/ }),\n\n/***/ 5964:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pairs__ = __webpack_require__(5824);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = __WEBPACK_IMPORTED_MODULE_0__pairs__[\"a\" /* pair */];\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n});\n\n\n/***/ }),\n\n/***/ 5965:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = (function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n});\n\n\n/***/ }),\n\n/***/ 5966:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__array__ = __webpack_require__(5828);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bisect__ = __webpack_require__(5822);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constant__ = __webpack_require__(5967);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__extent__ = __webpack_require__(5827);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__identity__ = __webpack_require__(5968);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__range__ = __webpack_require__(5829);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ticks__ = __webpack_require__(5830);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__threshold_sturges__ = __webpack_require__(5831);\n\n\n\n\n\n\n\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  var value = __WEBPACK_IMPORTED_MODULE_4__identity__[\"a\" /* default */],\n      domain = __WEBPACK_IMPORTED_MODULE_3__extent__[\"a\" /* default */],\n      threshold = __WEBPACK_IMPORTED_MODULE_7__threshold_sturges__[\"a\" /* default */];\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = Object(__WEBPACK_IMPORTED_MODULE_6__ticks__[\"a\" /* tickStep */])(x0, x1, tz);\n      tz = Object(__WEBPACK_IMPORTED_MODULE_5__range__[\"a\" /* default */])(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[Object(__WEBPACK_IMPORTED_MODULE_1__bisect__[\"a\" /* default */])(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_2__constant__[\"a\" /* default */])(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_2__constant__[\"a\" /* default */])([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? Object(__WEBPACK_IMPORTED_MODULE_2__constant__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_0__array__[\"b\" /* slice */].call(_)) : Object(__WEBPACK_IMPORTED_MODULE_2__constant__[\"a\" /* default */])(_), histogram) : threshold;\n  };\n\n  return histogram;\n});\n\n\n/***/ }),\n\n/***/ 5967:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return function() {\n    return x;\n  };\n});\n\n\n/***/ }),\n\n/***/ 5968:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return x;\n});\n\n\n/***/ }),\n\n/***/ 5969:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__array__ = __webpack_require__(5828);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ascending__ = __webpack_require__(5720);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__number__ = __webpack_require__(5726);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__quantile__ = __webpack_require__(5761);\n\n\n\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, min, max) {\n  values = __WEBPACK_IMPORTED_MODULE_0__array__[\"a\" /* map */].call(values, __WEBPACK_IMPORTED_MODULE_2__number__[\"a\" /* default */]).sort(__WEBPACK_IMPORTED_MODULE_1__ascending__[\"a\" /* default */]);\n  return Math.ceil((max - min) / (2 * (Object(__WEBPACK_IMPORTED_MODULE_3__quantile__[\"a\" /* default */])(values, 0.75) - Object(__WEBPACK_IMPORTED_MODULE_3__quantile__[\"a\" /* default */])(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n});\n\n\n/***/ }),\n\n/***/ 5970:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__deviation__ = __webpack_require__(5825);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * Object(__WEBPACK_IMPORTED_MODULE_0__deviation__[\"a\" /* default */])(values) * Math.pow(values.length, -1 / 3)));\n});\n\n\n/***/ }),\n\n/***/ 5971:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n});\n\n\n/***/ }),\n\n/***/ 5972:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__number__ = __webpack_require__(5726);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_0__number__[\"a\" /* default */])(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n});\n\n\n/***/ }),\n\n/***/ 5973:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ascending__ = __webpack_require__(5720);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__number__ = __webpack_require__(5726);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__quantile__ = __webpack_require__(5761);\n\n\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_1__number__[\"a\" /* default */])(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = Object(__WEBPACK_IMPORTED_MODULE_1__number__[\"a\" /* default */])(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return Object(__WEBPACK_IMPORTED_MODULE_2__quantile__[\"a\" /* default */])(numbers.sort(__WEBPACK_IMPORTED_MODULE_0__ascending__[\"a\" /* default */]), 0.5);\n});\n\n\n/***/ }),\n\n/***/ 5974:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n});\n\n\n/***/ }),\n\n/***/ 5975:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = (function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n});\n\n\n/***/ }),\n\n/***/ 5976:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ascending__ = __webpack_require__(5720);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = __WEBPACK_IMPORTED_MODULE_0__ascending__[\"a\" /* default */];\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n});\n\n\n/***/ }),\n\n/***/ 5977:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = (function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n});\n\n\n/***/ }),\n\n/***/ 5978:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = (function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n});\n\n\n/***/ }),\n\n/***/ 5979:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transpose__ = __webpack_require__(5833);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__transpose__[\"a\" /* default */])(arguments);\n});\n\n\n/***/ }),\n\n/***/ 5980:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polygonContains__ = __webpack_require__(5834);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__distance__ = __webpack_require__(5835);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(5697);\n\n\n\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return Object(__WEBPACK_IMPORTED_MODULE_1__distance__[\"a\" /* default */])(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = Object(__WEBPACK_IMPORTED_MODULE_1__distance__[\"a\" /* default */])(coordinates[0], coordinates[1]),\n      ao = Object(__WEBPACK_IMPORTED_MODULE_1__distance__[\"a\" /* default */])(coordinates[0], point),\n      ob = Object(__WEBPACK_IMPORTED_MODULE_1__distance__[\"a\" /* default */])(point, coordinates[1]);\n  return ao + ob <= ab + __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */];\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!Object(__WEBPACK_IMPORTED_MODULE_0__polygonContains__[\"a\" /* default */])(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */], point[1] * __WEBPACK_IMPORTED_MODULE_2__math__[\"r\" /* radians */]];\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n});\n\n\n/***/ }),\n\n/***/ 5981:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* unused harmony export graticule10 */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_array__ = __webpack_require__(5760);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n\n\n\nfunction graticuleX(y0, y1, dy) {\n  var y = Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(y0, y1 - __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */], dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(x0, x1 - __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */], dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"f\" /* ceil */])(X0 / DX) * DX, X1, DX).map(X)\n        .concat(Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"f\" /* ceil */])(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"f\" /* ceil */])(x0 / dx) * dx, x1, dx).filter(function(x) { return Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(x % DX) > __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]; }).map(x))\n        .concat(Object(__WEBPACK_IMPORTED_MODULE_0_d3_array__[\"b\" /* range */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"f\" /* ceil */])(y0 / dy) * dy, y1, dy).filter(function(y) { return Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(y % DY) > __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]], [180, 90 - __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]]])\n      .extentMinor([[-180, -80 - __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]], [180, 80 + __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\n\n/***/ }),\n\n/***/ 5982:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(a, b) {\n  var x0 = a[0] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */],\n      y0 = a[1] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */],\n      x1 = b[0] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */],\n      y1 = b[1] * __WEBPACK_IMPORTED_MODULE_0__math__[\"r\" /* radians */],\n      cy0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y0),\n      sy0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y0),\n      cy1 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y1),\n      sy1 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y1),\n      kx0 = cy0 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x0),\n      ky0 = cy0 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x0),\n      kx1 = cy1 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x1),\n      ky1 = cy1 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x1),\n      d = 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"m\" /* haversin */])(y1 - y0) + cy0 * cy1 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"m\" /* haversin */])(x1 - x0))),\n      k = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(d);\n\n  var interpolate = d ? function(t) {\n    var B = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(t *= d) / k,\n        A = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(y, x) * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */],\n      Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(z, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(x * x + y * y)) * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */]\n    ];\n  } : function() {\n    return [x0 * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */], y0 * __WEBPACK_IMPORTED_MODULE_0__math__[\"h\" /* degrees */]];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n});\n\n\n/***/ }),\n\n/***/ 5983:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__identity__ = __webpack_require__(5762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stream__ = __webpack_require__(5715);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__area__ = __webpack_require__(5984);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__bounds__ = __webpack_require__(5837);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__centroid__ = __webpack_require__(5985);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__context__ = __webpack_require__(5986);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__measure__ = __webpack_require__(5987);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__string__ = __webpack_require__(5988);\n\n\n\n\n\n\n\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      Object(__WEBPACK_IMPORTED_MODULE_1__stream__[\"a\" /* default */])(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__stream__[\"a\" /* default */])(object, projectionStream(__WEBPACK_IMPORTED_MODULE_2__area__[\"a\" /* default */]));\n    return __WEBPACK_IMPORTED_MODULE_2__area__[\"a\" /* default */].result();\n  };\n\n  path.measure = function(object) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__stream__[\"a\" /* default */])(object, projectionStream(__WEBPACK_IMPORTED_MODULE_6__measure__[\"a\" /* default */]));\n    return __WEBPACK_IMPORTED_MODULE_6__measure__[\"a\" /* default */].result();\n  };\n\n  path.bounds = function(object) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__stream__[\"a\" /* default */])(object, projectionStream(__WEBPACK_IMPORTED_MODULE_3__bounds__[\"a\" /* default */]));\n    return __WEBPACK_IMPORTED_MODULE_3__bounds__[\"a\" /* default */].result();\n  };\n\n  path.centroid = function(object) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__stream__[\"a\" /* default */])(object, projectionStream(__WEBPACK_IMPORTED_MODULE_4__centroid__[\"a\" /* default */]));\n    return __WEBPACK_IMPORTED_MODULE_4__centroid__[\"a\" /* default */].result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, __WEBPACK_IMPORTED_MODULE_0__identity__[\"a\" /* default */]) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new __WEBPACK_IMPORTED_MODULE_7__string__[\"a\" /* default */]) : new __WEBPACK_IMPORTED_MODULE_5__context__[\"a\" /* default */](context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n});\n\n\n/***/ }),\n\n/***/ 5984:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__noop__ = __webpack_require__(5709);\n\n\n\n\nvar areaSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    areaRingSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineStart: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineEnd: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */];\n    areaSum.add(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (areaStream);\n\n\n/***/ }),\n\n/***/ 5985:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (centroidStream);\n\n\n/***/ }),\n\n/***/ 5986:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PathContext;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__noop__ = __webpack_require__(5709);\n\n\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, __WEBPACK_IMPORTED_MODULE_0__math__[\"w\" /* tau */]);\n        break;\n      }\n    }\n  },\n  result: __WEBPACK_IMPORTED_MODULE_1__noop__[\"a\" /* default */]\n};\n\n\n/***/ }),\n\n/***/ 5987:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__adder__ = __webpack_require__(5719);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__noop__ = __webpack_require__(5709);\n\n\n\n\nvar lengthSum = Object(__WEBPACK_IMPORTED_MODULE_0__adder__[\"a\" /* default */])(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */],\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = __WEBPACK_IMPORTED_MODULE_2__noop__[\"a\" /* default */];\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"u\" /* sqrt */])(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (lengthStream);\n\n\n/***/ }),\n\n/***/ 5988:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PathString;\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\n\n/***/ }),\n\n/***/ 5989:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(5839);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */])(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], -__WEBPACK_IMPORTED_MODULE_1__math__[\"l\" /* halfPi */]]\n));\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] : -__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */],\n          delta = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(lambda1 - lambda0);\n      if (Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(delta - __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */]) < __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? __WEBPACK_IMPORTED_MODULE_1__math__[\"l\" /* halfPi */] : -__WEBPACK_IMPORTED_MODULE_1__math__[\"l\" /* halfPi */]);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */]) { // line crosses antimeridian\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(lambda0 - sign0) < __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]) lambda0 -= sign0 * __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]; // handle degeneracies\n        if (Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(lambda1 - sign1) < __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]) lambda1 -= sign1 * __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */];\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(lambda0 - lambda1);\n  return Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(sinLambda0Lambda1) > __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]\n      ? Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"d\" /* atan */])((Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi0) * (cosPhi1 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi1)) * Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(lambda1)\n          - Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(phi1) * (cosPhi0 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(phi0)) * Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"t\" /* sin */])(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * __WEBPACK_IMPORTED_MODULE_1__math__[\"l\" /* halfPi */];\n    stream.point(-__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], phi);\n    stream.point(0, phi);\n    stream.point(__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], phi);\n    stream.point(__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], 0);\n    stream.point(__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], -phi);\n    stream.point(0, -phi);\n    stream.point(-__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], -phi);\n    stream.point(-__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], 0);\n    stream.point(-__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */], phi);\n  } else if (Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(from[0] - to[0]) > __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */]) {\n    var lambda = from[0] < to[0] ? __WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */] : -__WEBPACK_IMPORTED_MODULE_1__math__[\"o\" /* pi */];\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\n\n/***/ }),\n\n/***/ 5990:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cartesian__ = __webpack_require__(5725);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__circle__ = __webpack_require__(5817);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pointEqual__ = __webpack_require__(5821);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__index__ = __webpack_require__(5839);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(radius, delta) {\n  var cr = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(radius),\n      smallRadius = cr > 0,\n      notHemisphere = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* abs */])(cr) > __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */]; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    Object(__WEBPACK_IMPORTED_MODULE_1__circle__[\"a\" /* circleStream */])(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(lambda) * Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"g\" /* cos */])(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */] : -__WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */]), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || Object(__WEBPACK_IMPORTED_MODULE_3__pointEqual__[\"a\" /* default */])(point0, point2) || Object(__WEBPACK_IMPORTED_MODULE_3__pointEqual__[\"a\" /* default */])(point1, point2)) {\n            point1[0] += __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */];\n            point1[1] += __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */];\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !Object(__WEBPACK_IMPORTED_MODULE_3__pointEqual__[\"a\" /* default */])(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"a\" /* cartesian */])(a),\n        pb = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"a\" /* cartesian */])(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"c\" /* cartesianCross */])(pa, pb),\n        n2n2 = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"d\" /* cartesianDot */])(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"c\" /* cartesianCross */])(n1, n2),\n        A = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"f\" /* cartesianScale */])(n1, c1),\n        B = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"f\" /* cartesianScale */])(n2, c2);\n    Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"b\" /* cartesianAddInPlace */])(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"d\" /* cartesianDot */])(A, u),\n        uu = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"d\" /* cartesianDot */])(u, u),\n        t2 = w * w - uu * (Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"d\" /* cartesianDot */])(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"u\" /* sqrt */])(t2),\n        q = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"f\" /* cartesianScale */])(u, (-w - t) / uu);\n    Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"b\" /* cartesianAddInPlace */])(q, A);\n    q = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"g\" /* spherical */])(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* abs */])(delta - __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */]) < __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */],\n        meridian = polar || delta < __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */];\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (Object(__WEBPACK_IMPORTED_MODULE_2__math__[\"a\" /* abs */])(q[0] - lambda0) < __WEBPACK_IMPORTED_MODULE_2__math__[\"i\" /* epsilon */] ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */] ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"f\" /* cartesianScale */])(u, (-w + t) / uu);\n      Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"b\" /* cartesianAddInPlace */])(q1, A);\n      return [q, Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"g\" /* spherical */])(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */] - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return Object(__WEBPACK_IMPORTED_MODULE_4__index__[\"a\" /* default */])(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-__WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */], radius - __WEBPACK_IMPORTED_MODULE_2__math__[\"o\" /* pi */]]);\n});\n\n\n/***/ }),\n\n/***/ 5991:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__cartesian__ = __webpack_require__(5725);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transform__ = __webpack_require__(5738);\n\n\n\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"g\" /* cos */])(30 * __WEBPACK_IMPORTED_MODULE_1__math__[\"r\" /* radians */]); // cos(minimum angular distance)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n});\n\nfunction resampleNone(project) {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__transform__[\"a\" /* transformer */])({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"u\" /* sqrt */])(a * a + b * b + c * c),\n          phi2 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"c\" /* asin */])(c /= m),\n          lambda2 = Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(c) - 1) < __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */] || Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(lambda0 - lambda1) < __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */] ? (lambda0 + lambda1) / 2 : Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"e\" /* atan2 */])(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = Object(__WEBPACK_IMPORTED_MODULE_0__cartesian__[\"a\" /* cartesian */])([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\n\n/***/ }),\n\n/***/ 5992:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cylindricalEqualAreaRaw;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\n\n/***/ }),\n\n/***/ 5993:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__albers__ = __webpack_require__(5838);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__conicEqualArea__ = __webpack_require__(5763);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fit__ = __webpack_require__(5765);\n\n\n\n\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  var cache,\n      cacheStream,\n      lower48 = Object(__WEBPACK_IMPORTED_MODULE_1__albers__[\"a\" /* default */])(), lower48Point,\n      alaska = Object(__WEBPACK_IMPORTED_MODULE_2__conicEqualArea__[\"a\" /* default */])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = Object(__WEBPACK_IMPORTED_MODULE_2__conicEqualArea__[\"a\" /* default */])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */], y + 0.120 * k + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]], [x - 0.214 * k - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */], y + 0.234 * k - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */], y + 0.166 * k + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]], [x - 0.115 * k - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */], y + 0.234 * k - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return Object(__WEBPACK_IMPORTED_MODULE_3__fit__[\"a\" /* fitExtent */])(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return Object(__WEBPACK_IMPORTED_MODULE_3__fit__[\"b\" /* fitSize */])(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n});\n\n\n/***/ }),\n\n/***/ 5994:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export azimuthalEqualAreaRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__azimuthal__ = __webpack_require__(5727);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nvar azimuthalEqualAreaRaw = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"b\" /* azimuthalRaw */])(function(cxcy) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"a\" /* azimuthalInvert */])(function(z) {\n  return 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */])(z / 2);\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n});\n\n\n/***/ }),\n\n/***/ 5995:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export azimuthalEquidistantRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__azimuthal__ = __webpack_require__(5727);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nvar azimuthalEquidistantRaw = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"b\" /* azimuthalRaw */])(function(c) {\n  return (c = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"b\" /* acos */])(c)) && c / Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(c);\n});\n\nazimuthalEquidistantRaw.invert = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"a\" /* azimuthalInvert */])(function(z) {\n  return z;\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n});\n\n\n/***/ }),\n\n/***/ 5996:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export conicConformalRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__conic__ = __webpack_require__(5764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mercator__ = __webpack_require__(5766);\n\n\n\n\nfunction tany(y) {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"v\" /* tan */])((__WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y0),\n      n = y0 === y1 ? Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y0) : Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"n\" /* log */])(cy0 / Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y1)) / Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"n\" /* log */])(tany(y1) / tany(y0)),\n      f = cy0 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"p\" /* pow */])(tany(y0), n) / n;\n\n  if (!n) return __WEBPACK_IMPORTED_MODULE_2__mercator__[\"b\" /* mercatorRaw */];\n\n  function project(x, y) {\n    if (f > 0) { if (y < -__WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]) y = -__WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]; }\n    else { if (y > __WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]) y = __WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] - __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]; }\n    var r = f / Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"p\" /* pow */])(tany(y), n);\n    return [r * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(n * x), f - r * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"s\" /* sign */])(n) * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(x * x + fy * fy);\n    return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(x, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(fy)) / n * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"s\" /* sign */])(fy), 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"d\" /* atan */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"p\" /* pow */])(f / r, 1 / n)) - __WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */]];\n  };\n\n  return project;\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_1__conic__[\"a\" /* conicProjection */])(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n});\n\n\n/***/ }),\n\n/***/ 5997:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export conicEquidistantRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__conic__ = __webpack_require__(5764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__equirectangular__ = __webpack_require__(5840);\n\n\n\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y0),\n      n = y0 === y1 ? Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y0) : (cy0 - Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(n) < __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]) return __WEBPACK_IMPORTED_MODULE_2__equirectangular__[\"a\" /* equirectangularRaw */];\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(nx), g - gy * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"e\" /* atan2 */])(x, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"a\" /* abs */])(gy)) / n * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"s\" /* sign */])(gy), g - Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"s\" /* sign */])(n) * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"u\" /* sqrt */])(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_1__conic__[\"a\" /* conicProjection */])(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n});\n\n\n/***/ }),\n\n/***/ 5998:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export gnomonicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__azimuthal__ = __webpack_require__(5727);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nfunction gnomonicRaw(x, y) {\n  var cy = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y), k = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x) * cy;\n  return [cy * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x) / k, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y) / k];\n}\n\ngnomonicRaw.invert = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"a\" /* azimuthalInvert */])(__WEBPACK_IMPORTED_MODULE_0__math__[\"d\" /* atan */]);\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n});\n\n\n/***/ }),\n\n/***/ 5999:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__clip_extent__ = __webpack_require__(5759);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__identity__ = __webpack_require__(5762);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__transform__ = __webpack_require__(5738);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__fit__ = __webpack_require__(5765);\n\n\n\n\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? __WEBPACK_IMPORTED_MODULE_1__identity__[\"a\" /* default */] : Object(__WEBPACK_IMPORTED_MODULE_2__transform__[\"a\" /* transformer */])({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = __WEBPACK_IMPORTED_MODULE_1__identity__[\"a\" /* default */], // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = __WEBPACK_IMPORTED_MODULE_1__identity__[\"a\" /* default */], // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, __WEBPACK_IMPORTED_MODULE_1__identity__[\"a\" /* default */]) : Object(__WEBPACK_IMPORTED_MODULE_0__clip_extent__[\"a\" /* clipExtent */])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return Object(__WEBPACK_IMPORTED_MODULE_3__fit__[\"a\" /* fitExtent */])(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return Object(__WEBPACK_IMPORTED_MODULE_3__fit__[\"b\" /* fitSize */])(projection, size, object);\n    }\n  };\n});\n\n\n/***/ }),\n\n/***/ 6000:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export naturalEarth1Raw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(5706);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__math__ = __webpack_require__(5697);\n\n\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (Object(__WEBPACK_IMPORTED_MODULE_1__math__[\"a\" /* abs */])(delta) > __WEBPACK_IMPORTED_MODULE_1__math__[\"i\" /* epsilon */] && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0__index__[\"a\" /* default */])(naturalEarth1Raw)\n      .scale(175.295);\n});\n\n\n/***/ }),\n\n/***/ 6001:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export orthographicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__azimuthal__ = __webpack_require__(5727);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nfunction orthographicRaw(x, y) {\n  return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y) * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x), Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y)];\n}\n\northographicRaw.invert = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"a\" /* azimuthalInvert */])(__WEBPACK_IMPORTED_MODULE_0__math__[\"c\" /* asin */]);\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + __WEBPACK_IMPORTED_MODULE_0__math__[\"i\" /* epsilon */]);\n});\n\n\n/***/ }),\n\n/***/ 6002:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export stereographicRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__azimuthal__ = __webpack_require__(5727);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index__ = __webpack_require__(5706);\n\n\n\n\nfunction stereographicRaw(x, y) {\n  var cy = Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(y), k = 1 + Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"g\" /* cos */])(x) * cy;\n  return [cy * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(x) / k, Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"t\" /* sin */])(y) / k];\n}\n\nstereographicRaw.invert = Object(__WEBPACK_IMPORTED_MODULE_1__azimuthal__[\"a\" /* azimuthalInvert */])(function(z) {\n  return 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"d\" /* atan */])(z);\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (function() {\n  return Object(__WEBPACK_IMPORTED_MODULE_2__index__[\"a\" /* default */])(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n});\n\n\n/***/ }),\n\n/***/ 6003:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export transverseMercatorRaw */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__math__ = __webpack_require__(5697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mercator__ = __webpack_require__(5766);\n\n\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"n\" /* log */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"v\" /* tan */])((__WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */] + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"d\" /* atan */])(Object(__WEBPACK_IMPORTED_MODULE_0__math__[\"k\" /* exp */])(x)) - __WEBPACK_IMPORTED_MODULE_0__math__[\"l\" /* halfPi */]];\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  var m = Object(__WEBPACK_IMPORTED_MODULE_1__mercator__[\"a\" /* mercatorProjection */])(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n});\n\n\n/***/ }),\n\n/***/ 6004:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(6005);\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return helpers_1.polygon([[\n            lowLeft,\n            lowRight,\n            topRight,\n            topLeft,\n            lowLeft,\n        ]], options.properties, { bbox: bbox, id: options.id });\n}\nexports.default = bboxPolygon;\n\n\n/***/ }),\n\n/***/ 6005:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n/***/ }),\n\n/***/ 6006:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_voronoi__ = __webpack_require__(6007);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineFeatures__ = __webpack_require__(5758);\n/**\r\n * Creates voronoi area for a list of points\r\n */var voronoiFunction=function voronoiFunction(geojsonList,bbox){var newJson=void 0;if(geojsonList.length<1){return'select a layer';}var combinedgeojsons=Object(__WEBPACK_IMPORTED_MODULE_1__combineFeatures__[\"a\" /* default */])(geojsonList);if(!bbox[0]||!bbox[1]||!bbox[2]||!bbox[3]){newJson=Object(__WEBPACK_IMPORTED_MODULE_0__turf_voronoi__[\"a\" /* default */])(combinedgeojsons);}else{newJson=Object(__WEBPACK_IMPORTED_MODULE_0__turf_voronoi__[\"a\" /* default */])(combinedgeojsons,{bbox:bbox});}//Remove null or undefined features:\nnewJson.features=newJson.features.filter(function(f){return f!=null;});return newJson;};/* harmony default export */ __webpack_exports__[\"a\"] = (voronoiFunction);\n\n/***/ }),\n\n/***/ 6007:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_helpers__ = __webpack_require__(6008);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3_voronoi__ = __webpack_require__(6009);\n\n\n\n\n/**\n * @private\n * @param {Array<Array<number>>} coords representing a polygon\n * @returns {Feature<Polygon>} polygon\n */\nfunction coordsToPolygon(coords) {\n    coords = coords.slice();\n    coords.push(coords[0]);\n    return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"c\" /* polygon */])([coords]);\n}\n\n/**\n * Takes a FeatureCollection of points, and a bounding box, and returns a FeatureCollection\n * of Voronoi polygons.\n *\n * The Voronoi algorithim used comes from the d3-voronoi package.\n *\n * @name voronoi\n * @param {FeatureCollection<Point>} points to find the Voronoi polygons around.\n * @param {Object} [options={}] Optional parameters\n * @param {number[]} [options.bbox=[-180, -85, 180, -85]] clipping rectangle, in [minX, minY, maxX, MaxY] order.\n * @returns {FeatureCollection<Polygon>} a set of polygons, one per input point.\n * @example\n * var options = {\n *   bbox: [-70, 40, -60, 60]\n * };\n * var points = turf.randomPoint(100, options);\n * var voronoiPolygons = turf.voronoi(points, options);\n *\n * //addToMap\n * var addToMap = [voronoiPolygons, points];\n */\nfunction voronoi$1(points, options) {\n    // Optional params\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var bbox = options.bbox || [-180, -85, 180, 85];\n\n    // Input Validation\n    if (!points) throw new Error('points is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox is invalid');\n    Object(__WEBPACK_IMPORTED_MODULE_1__turf_invariant__[\"a\" /* collectionOf */])(points, 'Point', 'points');\n\n    // Main\n    return Object(__WEBPACK_IMPORTED_MODULE_0__turf_helpers__[\"a\" /* featureCollection */])(\n        Object(__WEBPACK_IMPORTED_MODULE_2_d3_voronoi__[\"a\" /* voronoi */])()\n            .x(function (feature) { return feature.geometry.coordinates[0]; })\n            .y(function (feature) { return feature.geometry.coordinates[1]; })\n            .extent([[bbox[0], bbox[1]], [bbox[2], bbox[3]]])\n            .polygons(points.features)\n            .map(coordsToPolygon)\n    );\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (voronoi$1);\n\n\n/***/ }),\n\n/***/ 6008:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return polygon; });\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6009:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_voronoi__ = __webpack_require__(6010);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_voronoi__[\"a\"]; });\n\n\n\n/***/ }),\n\n/***/ 6010:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constant__ = __webpack_require__(6011);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__point__ = __webpack_require__(6012);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Diagram__ = __webpack_require__(5728);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function() {\n  var x = __WEBPACK_IMPORTED_MODULE_1__point__[\"a\" /* x */],\n      y = __WEBPACK_IMPORTED_MODULE_1__point__[\"b\" /* y */],\n      extent = null;\n\n  function voronoi(data) {\n    return new __WEBPACK_IMPORTED_MODULE_2__Diagram__[\"d\" /* default */](data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / __WEBPACK_IMPORTED_MODULE_2__Diagram__[\"f\" /* epsilon */]) * __WEBPACK_IMPORTED_MODULE_2__Diagram__[\"f\" /* epsilon */], Math.round(y(d, i, data) / __WEBPACK_IMPORTED_MODULE_2__Diagram__[\"f\" /* epsilon */]) * __WEBPACK_IMPORTED_MODULE_2__Diagram__[\"f\" /* epsilon */]];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : Object(__WEBPACK_IMPORTED_MODULE_0__constant__[\"a\" /* default */])(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n});\n\n\n/***/ }),\n\n/***/ 6011:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = (function(x) {\n  return function() {\n    return x;\n  };\n});\n\n\n/***/ }),\n\n/***/ 6012:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = x;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = y;\nfunction x(d) {\n  return d[0];\n}\n\nfunction y(d) {\n  return d[1];\n}\n\n\n/***/ }),\n\n/***/ 6013:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = removeBeach;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = addBeach;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RedBlackTree__ = __webpack_require__(5769);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Cell__ = __webpack_require__(5842);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Circle__ = __webpack_require__(5843);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Edge__ = __webpack_require__(5770);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Diagram__ = __webpack_require__(5728);\n\n\n\n\n\n\nvar beachPool = [];\n\nfunction Beach() {\n  Object(__WEBPACK_IMPORTED_MODULE_0__RedBlackTree__[\"a\" /* RedBlackNode */])(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(beach);\n  __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"a\" /* beaches */].remove(beach);\n  beachPool.push(beach);\n  Object(__WEBPACK_IMPORTED_MODULE_0__RedBlackTree__[\"a\" /* RedBlackNode */])(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]\n      && Math.abs(y - lArc.circle.cy) < __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]\n      && Math.abs(y - rArc.circle.cy) < __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"d\" /* setEdgeEnd */])(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"c\" /* createEdge */])(lArc.site, rArc.site, null, vertex);\n\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(lArc);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"a\" /* beaches */]._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -__WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -__WEBPACK_IMPORTED_MODULE_4__Diagram__[\"f\" /* epsilon */]) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  Object(__WEBPACK_IMPORTED_MODULE_1__Cell__[\"c\" /* createCell */])(site);\n  var newArc = createBeach(site);\n  __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"a\" /* beaches */].insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(lArc);\n    rArc = createBeach(lArc.site);\n    __WEBPACK_IMPORTED_MODULE_4__Diagram__[\"a\" /* beaches */].insert(newArc, rArc);\n    newArc.edge = rArc.edge = Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"c\" /* createEdge */])(lArc.site, newArc.site);\n    Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(lArc);\n    Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"c\" /* createEdge */])(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(lArc);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"b\" /* detachCircle */])(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"d\" /* setEdgeEnd */])(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"c\" /* createEdge */])(lSite, site, null, vertex);\n  rArc.edge = Object(__WEBPACK_IMPORTED_MODULE_3__Edge__[\"c\" /* createEdge */])(site, rSite, null, vertex);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(lArc);\n  Object(__WEBPACK_IMPORTED_MODULE_2__Circle__[\"a\" /* attachCircle */])(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\n\n/***/ }),\n\n/***/ 6014:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getJsonType__ = __webpack_require__(166);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__intersectFunction__ = __webpack_require__(5808);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isLineSegmentWithinPolygon__ = __webpack_require__(6015);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_points_within_polygon__ = __webpack_require__(5844);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_line_split__ = __webpack_require__(6019);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line__ = __webpack_require__(6036);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line__);\n/**\r\n * Clips all geometry to fit inside the clipArea.\r\n */var clipFunction=function clipFunction(geojsonList,clipArea){if(geojsonList.length===0||!clipArea){return'Select layers to proceed';}var newJsons=geojsonList.map(function(data){var type=Object(__WEBPACK_IMPORTED_MODULE_0__getJsonType__[\"a\" /* default */])(data);var newJson=void 0;if(type==='Polygon'||type==='MultiPolygon'){newJson=Object(__WEBPACK_IMPORTED_MODULE_1__intersectFunction__[\"a\" /* default */])(data,clipArea);}if(type==='Point'){newJson=Object(__WEBPACK_IMPORTED_MODULE_3__turf_points_within_polygon__[\"a\" /* default */])(data,clipArea);}if(type==='LineString'||type==='MultiLineString'){newJson={\"type\":\"FeatureCollection\",\"features\":[]};data.features.forEach(function(line){clipArea.features.forEach(function(poly){//Transform Polygon layer to lines.\n//Split the lines where they intersect the polygon border lines\nvar splitLines=Object(__WEBPACK_IMPORTED_MODULE_4__turf_line_split__[\"a\" /* default */])(line,__WEBPACK_IMPORTED_MODULE_5__turf_polygon_to_line___default()(poly));//If line does not intersect with polygon border, it is either\n//completely inside or completely outside\nif(splitLines.features.length===0){if(Object(__WEBPACK_IMPORTED_MODULE_2__isLineSegmentWithinPolygon__[\"a\" /* default */])(line,clipArea)){newJson.features.push(line);}}//For all lines that intersect the polygon area, keep the parts that are inside\nsplitLines.features.forEach(function(lineSegment){if(Object(__WEBPACK_IMPORTED_MODULE_2__isLineSegmentWithinPolygon__[\"a\" /* default */])(lineSegment,clipArea)){newJson.features.push(lineSegment);}});});});}//Remove null or undefined features:\nnewJson.features=newJson.features.filter(function(f){return f!=null;});if(newJson){if(newJson.type===\"FeatureCollection\"){if(newJson.features.length===0){return data.dispName+'has no overlapping geometry';}newJson.dispName=data.dispName;return newJson;}if(typeof newJson==='string'){return data.dispName+': '+newJson;}}return'something went wrong during clip operations';});return newJsons;};/* harmony default export */ __webpack_exports__[\"a\"] = (clipFunction);\n\n/***/ }),\n\n/***/ 6015:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_points_within_polygon__ = __webpack_require__(5844);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_center__ = __webpack_require__(6018);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_center___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__turf_center__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_helpers__ = __webpack_require__(5740);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_helpers___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__);\n/**\r\n * Returns boolean. True if the center coordinate of the line segment is inside the clipArea. False otherwise.\r\n */var isLineSegmentWithinPolygon=function isLineSegmentWithinPolygon(lineSegment,clipArea){var segCoords=lineSegment.geometry.coordinates;var point2check=void 0;//Check any point that is not a start or end point.\nif(segCoords.length==2){point2check=__WEBPACK_IMPORTED_MODULE_1__turf_center___default()(lineSegment);}else{point2check=Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"point\"])(segCoords[1]);}var first_within=Object(__WEBPACK_IMPORTED_MODULE_0__turf_points_within_polygon__[\"a\" /* default */])(point2check,clipArea).features.length;if(first_within>0){return true;}return false;};/* harmony default export */ __webpack_exports__[\"a\"] = (isLineSegmentWithinPolygon);\n\n/***/ }),\n\n/***/ 6016:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_invariant__ = __webpack_require__(5705);\n\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var ignoreBoundary = options.ignoreBoundary;\n\n    // validation\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n\n    var pt = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(point);\n    var polys = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"c\" /* getCoords */])(polygon);\n    var type = (polygon.geometry) ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) return false;\n\n    // normalize to multipolygon\n    if (type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n}\n\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] &&\n           bbox[1] <= pt[1] &&\n           bbox[2] >= pt[0] &&\n           bbox[3] >= pt[1];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (booleanPointInPolygon);\n\n\n/***/ }),\n\n/***/ 6017:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6018:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = __webpack_require__(5739);\nvar helpers_1 = __webpack_require__(5740);\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox_1.default(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return helpers_1.point([x, y], options.properties, options);\n}\nexports.default = center;\n\n\n/***/ }),\n\n/***/ 6019:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_geojson_rbush__ = __webpack_require__(5845);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_square__ = __webpack_require__(6022);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_bbox__ = __webpack_require__(6024);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_truncate__ = __webpack_require__(6025);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_line_segment__ = __webpack_require__(5847);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__turf_line_intersect__ = __webpack_require__(5848);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__turf_nearest_point_on_line__ = __webpack_require__(6029);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__turf_helpers__ = __webpack_require__(6035);\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Split a LineString by another GeoJSON Feature.\n *\n * @name lineSplit\n * @param {Feature<LineString>} line LineString Feature to split\n * @param {Feature<any>} splitter Feature used to split line\n * @returns {FeatureCollection<LineString>} Split LineStrings\n * @example\n * var line = turf.lineString([[120, -25], [145, -25]]);\n * var splitter = turf.lineString([[130, -15], [130, -35]]);\n *\n * var split = turf.lineSplit(line, splitter);\n *\n * //addToMap\n * var addToMap = [line, splitter]\n */\nfunction lineSplit(line, splitter) {\n    if (!line) throw new Error('line is required');\n    if (!splitter) throw new Error('splitter is required');\n\n    var lineType = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"e\" /* getType */])(line);\n    var splitterType = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"e\" /* getType */])(splitter);\n\n    if (lineType !== 'LineString') throw new Error('line must be LineString');\n    if (splitterType === 'FeatureCollection') throw new Error('splitter cannot be a FeatureCollection');\n    if (splitterType === 'GeometryCollection') throw new Error('splitter cannot be a GeometryCollection');\n\n    // remove excessive decimals from splitter\n    // to avoid possible approximation issues in rbush\n    var truncatedSplitter = Object(__WEBPACK_IMPORTED_MODULE_3__turf_truncate__[\"a\" /* default */])(splitter, {precision: 7});\n\n    switch (splitterType) {\n    case 'Point':\n        return splitLineWithPoint(line, truncatedSplitter);\n    case 'MultiPoint':\n        return splitLineWithPoints(line, truncatedSplitter);\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n        return splitLineWithPoints(line, Object(__WEBPACK_IMPORTED_MODULE_5__turf_line_intersect__[\"a\" /* default */])(line, truncatedSplitter));\n    }\n}\n\n/**\n * Split LineString with MultiPoint\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {FeatureCollection<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoints(line, splitter) {\n    var results = [];\n    var tree = Object(__WEBPACK_IMPORTED_MODULE_0_geojson_rbush__[\"a\" /* default */])();\n\n    Object(__WEBPACK_IMPORTED_MODULE_8__turf_meta__[\"d\" /* flattenEach */])(splitter, function (point) {\n        // Add index/id to features (needed for filter)\n        results.forEach(function (feature, index) {\n            feature.id = index;\n        });\n        // First Point - doesn't need to handle any previous line results\n        if (!results.length) {\n            results = splitLineWithPoint(line, point).features;\n\n            // Add Square BBox to each feature for GeoJSON-RBush\n            results.forEach(function (feature) {\n                if (!feature.bbox) feature.bbox = Object(__WEBPACK_IMPORTED_MODULE_1__turf_square__[\"a\" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_2__turf_bbox__[\"a\" /* default */])(feature));\n            });\n            tree.load(Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"a\" /* featureCollection */])(results));\n        // Split with remaining points - lines might needed to be split multiple times\n        } else {\n            // Find all lines that are within the splitter's bbox\n            var search = tree.search(point);\n\n            if (search.features.length) {\n                // RBush might return multiple lines - only process the closest line to splitter\n                var closestLine = findClosestFeature(point, search);\n\n                // Remove closest line from results since this will be split into two lines\n                // This removes any duplicates inside the results & index\n                results = results.filter(function (feature) { return feature.id !== closestLine.id; });\n                tree.remove(closestLine);\n\n                // Append the two newly split lines into the results\n                Object(__WEBPACK_IMPORTED_MODULE_8__turf_meta__[\"b\" /* featureEach */])(splitLineWithPoint(closestLine, point), function (line) {\n                    results.push(line);\n                    tree.insert(line);\n                });\n            }\n        }\n    });\n    return Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"a\" /* featureCollection */])(results);\n}\n\n/**\n * Split LineString with Point\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoint(line, splitter) {\n    var results = [];\n\n    // handle endpoints\n    var startPoint = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"c\" /* getCoords */])(line)[0];\n    var endPoint = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"c\" /* getCoords */])(line)[line.geometry.coordinates.length - 1];\n    if (pointsEquals(startPoint, Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"b\" /* getCoord */])(splitter)) ||\n        pointsEquals(endPoint, Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"b\" /* getCoord */])(splitter))) return Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"a\" /* featureCollection */])([line]);\n\n    // Create spatial index\n    var tree = Object(__WEBPACK_IMPORTED_MODULE_0_geojson_rbush__[\"a\" /* default */])();\n    var segments = Object(__WEBPACK_IMPORTED_MODULE_4__turf_line_segment__[\"a\" /* default */])(line);\n    tree.load(segments);\n\n    // Find all segments that are within bbox of splitter\n    var search = tree.search(splitter);\n\n    // Return itself if point is not within spatial index\n    if (!search.features.length) return Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"a\" /* featureCollection */])([line]);\n\n    // RBush might return multiple lines - only process the closest line to splitter\n    var closestSegment = findClosestFeature(splitter, search);\n\n    // Initial value is the first point of the first segments (beginning of line)\n    var initialValue = [startPoint];\n    var lastCoords = Object(__WEBPACK_IMPORTED_MODULE_8__turf_meta__[\"c\" /* featureReduce */])(segments, function (previous, current, index) {\n        var currentCoords = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"c\" /* getCoords */])(current)[1];\n        var splitterCoords = Object(__WEBPACK_IMPORTED_MODULE_7__turf_invariant__[\"b\" /* getCoord */])(splitter);\n\n        // Location where segment intersects with line\n        if (index === closestSegment.id) {\n            previous.push(splitterCoords);\n            results.push(Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"b\" /* lineString */])(previous));\n            // Don't duplicate splitter coordinate (Issue #688)\n            if (pointsEquals(splitterCoords, currentCoords)) return [splitterCoords];\n            return [splitterCoords, currentCoords];\n\n        // Keep iterating over coords until finished or intersection is found\n        } else {\n            previous.push(currentCoords);\n            return previous;\n        }\n    }, initialValue);\n    // Append last line to final split results\n    if (lastCoords.length > 1) {\n        results.push(Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"b\" /* lineString */])(lastCoords));\n    }\n    return Object(__WEBPACK_IMPORTED_MODULE_9__turf_helpers__[\"a\" /* featureCollection */])(results);\n}\n\n\n/**\n * Find Closest Feature\n *\n * @private\n * @param {Feature<Point>} point Feature must be closest to this point\n * @param {FeatureCollection<LineString>} lines Collection of Features\n * @returns {Feature<LineString>} closest LineString\n */\nfunction findClosestFeature(point, lines) {\n    if (!lines.features.length) throw new Error('lines must contain features');\n    // Filter to one segment that is the closest to the line\n    if (lines.features.length === 1) return lines.features[0];\n\n    var closestFeature;\n    var closestDistance = Infinity;\n    Object(__WEBPACK_IMPORTED_MODULE_8__turf_meta__[\"b\" /* featureEach */])(lines, function (segment) {\n        var pt = Object(__WEBPACK_IMPORTED_MODULE_6__turf_nearest_point_on_line__[\"a\" /* default */])(segment, point);\n        var dist = pt.properties.dist;\n        if (dist < closestDistance) {\n            closestFeature = segment;\n            closestDistance = dist;\n        }\n    });\n    return closestFeature;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Array<number>} pt1 point\n * @param {Array<number>} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction pointsEquals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (lineSplit);\n\n\n/***/ }),\n\n/***/ 6020:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__quickselect__ = __webpack_require__(6021);\n\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        Object(__WEBPACK_IMPORTED_MODULE_0__quickselect__[\"a\" /* default */])(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (rbush);\n\n\n/***/ }),\n\n/***/ 6021:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (quickselect);\n\n\n/***/ }),\n\n/***/ 6022:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_distance__ = __webpack_require__(5846);\n\n\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {BBox} bbox extent in [west, south, east, north] order\n * @returns {BBox} a square surrounding `bbox`\n * @example\n * var bbox = [-20, -20, -15, 0];\n * var squared = turf.square(bbox);\n *\n * //addToMap\n * var addToMap = [turf.bboxPolygon(bbox), turf.bboxPolygon(squared)]\n */\nfunction square(bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var horizontalDistance = Object(__WEBPACK_IMPORTED_MODULE_0__turf_distance__[\"a\" /* default */])(bbox.slice(0, 2), [east, south]);\n    var verticalDistance = Object(__WEBPACK_IMPORTED_MODULE_0__turf_distance__[\"a\" /* default */])(bbox.slice(0, 2), [west, north]);\n    if (horizontalDistance >= verticalDistance) {\n        var verticalMidpoint = (south + north) / 2;\n        return [\n            west,\n            verticalMidpoint - ((east - west) / 2),\n            east,\n            verticalMidpoint + ((east - west) / 2)\n        ];\n    } else {\n        var horizontalMidpoint = (west + east) / 2;\n        return [\n            horizontalMidpoint - ((north - south) / 2),\n            south,\n            horizontalMidpoint + ((north - south) / 2),\n            north\n        ];\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (square);\n\n\n/***/ }),\n\n/***/ 6023:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return radiansToLength; });\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return degreesToRadians; });\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6024:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_meta__ = __webpack_require__(5700);\n\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    Object(__WEBPACK_IMPORTED_MODULE_0__turf_meta__[\"a\" /* coordEach */])(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (bbox);\n\n\n/***/ }),\n\n/***/ 6025:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(6026);\n\n\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* isObject */])(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    Object(__WEBPACK_IMPORTED_MODULE_0__turf_meta__[\"a\" /* coordEach */])(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (truncate);\n\n\n/***/ }),\n\n/***/ 6026:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6027:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return lineString; });\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6028:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return feature; });\n/* unused harmony export geometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return point; });\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6029:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_bearing__ = __webpack_require__(6030);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_distance__ = __webpack_require__(5846);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_destination__ = __webpack_require__(6032);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_line_intersect__ = __webpack_require__(5848);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_meta__ = __webpack_require__(5700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__turf_helpers__ = __webpack_require__(6034);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__turf_invariant__ = __webpack_require__(5705);\n\n\n\n\n\n\n\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"a\" /* isObject */])(options)) throw new Error('options is invalid');\n\n    // validation\n    var type = (lines.geometry) ? lines.geometry.type : lines.type;\n    if (type !== 'LineString' && type !== 'MultiLineString') {\n        throw new Error('lines must be LineString or MultiLineString');\n    }\n\n    var closestPt = Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"c\" /* point */])([Infinity, Infinity], {\n        dist: Infinity\n    });\n\n    var length = 0.0;\n    Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"d\" /* flattenEach */])(lines, function (line) {\n        var coords = Object(__WEBPACK_IMPORTED_MODULE_6__turf_invariant__[\"c\" /* getCoords */])(line);\n\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"c\" /* point */])(coords[i]);\n            start.properties.dist = Object(__WEBPACK_IMPORTED_MODULE_1__turf_distance__[\"a\" /* default */])(pt, start, options);\n            //stop\n            var stop = Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"c\" /* point */])(coords[i + 1]);\n            stop.properties.dist = Object(__WEBPACK_IMPORTED_MODULE_1__turf_distance__[\"a\" /* default */])(pt, stop, options);\n            // sectionLength\n            var sectionLength = Object(__WEBPACK_IMPORTED_MODULE_1__turf_distance__[\"a\" /* default */])(start, stop, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n            var direction = Object(__WEBPACK_IMPORTED_MODULE_0__turf_bearing__[\"a\" /* default */])(start, stop);\n            var perpendicularPt1 = Object(__WEBPACK_IMPORTED_MODULE_2__turf_destination__[\"a\" /* default */])(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = Object(__WEBPACK_IMPORTED_MODULE_2__turf_destination__[\"a\" /* default */])(pt, heightDistance, direction - 90, options);\n            var intersect = Object(__WEBPACK_IMPORTED_MODULE_3__turf_line_intersect__[\"a\" /* default */])(\n                Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"b\" /* lineString */])([perpendicularPt1.geometry.coordinates, perpendicularPt2.geometry.coordinates]),\n                Object(__WEBPACK_IMPORTED_MODULE_5__turf_helpers__[\"b\" /* lineString */])([start.geometry.coordinates, stop.geometry.coordinates])\n            );\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = Object(__WEBPACK_IMPORTED_MODULE_1__turf_distance__[\"a\" /* default */])(pt, intersectPt, options);\n                intersectPt.properties.location = length + Object(__WEBPACK_IMPORTED_MODULE_1__turf_distance__[\"a\" /* default */])(start, intersectPt, options);\n            }\n\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop.properties.dist < closestPt.properties.dist) {\n                closestPt = stop;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n\n    });\n\n    return closestPt;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (nearestPointOnLine);\n\n\n/***/ }),\n\n/***/ 6030:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(6031);\n\n\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nfunction bearing(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var final = options.final;\n\n    // Reverse calculation\n    if (final === true) return calculateFinalBearing(start, end);\n\n    var coordinates1 = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(start);\n    var coordinates2 = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(end);\n\n    var lon1 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates1[0]);\n    var lon2 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates2[0]);\n    var lat1 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates1[1]);\n    var lat2 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"c\" /* radiansToDegrees */])(Math.atan2(a, b));\n}\n\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (bearing);\n\n\n/***/ }),\n\n/***/ 6031:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return radiansToDegrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return degreesToRadians; });\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6032:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_invariant__ = __webpack_require__(5705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_helpers__ = __webpack_require__(6033);\n\n\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in degrees, radians, miles, or kilometers; and bearing in degrees. This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nfunction destination(origin, distance, bearing, options) {\n    // Optional parameters\n    options = options || {};\n    if (!Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"b\" /* isObject */])(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var properties = options.properties;\n\n    // Handle input\n    var coordinates1 = Object(__WEBPACK_IMPORTED_MODULE_0__turf_invariant__[\"b\" /* getCoord */])(origin);\n    var longitude1 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates1[0]);\n    var latitude1 = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(coordinates1[1]);\n    var bearing_rad = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"a\" /* degreesToRadians */])(bearing);\n    var radians = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"c\" /* lengthToRadians */])(distance, units);\n\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) * Math.sin(radians) * Math.cos(latitude1),\n        Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"e\" /* radiansToDegrees */])(longitude2);\n    var lat = Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"e\" /* radiansToDegrees */])(latitude2);\n\n    return Object(__WEBPACK_IMPORTED_MODULE_1__turf_helpers__[\"d\" /* point */])([lng, lat], properties);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (destination);\n\n\n/***/ }),\n\n/***/ 6033:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return point; });\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* unused harmony export lineString */\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return lengthToRadians; });\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return radiansToDegrees; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return degreesToRadians; });\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6034:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return point; });\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return lineString; });\n/* unused harmony export lineStrings */\n/* unused harmony export featureCollection */\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isObject; });\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6035:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export earthRadius */\n/* unused harmony export factors */\n/* unused harmony export unitsFactors */\n/* unused harmony export areaFactors */\n/* unused harmony export feature */\n/* unused harmony export geometry */\n/* unused harmony export point */\n/* unused harmony export points */\n/* unused harmony export polygon */\n/* unused harmony export polygons */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return lineString; });\n/* unused harmony export lineStrings */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return featureCollection; });\n/* unused harmony export multiLineString */\n/* unused harmony export multiPoint */\n/* unused harmony export multiPolygon */\n/* unused harmony export geometryCollection */\n/* unused harmony export round */\n/* unused harmony export radiansToLength */\n/* unused harmony export lengthToRadians */\n/* unused harmony export lengthToDegrees */\n/* unused harmony export bearingToAzimuth */\n/* unused harmony export radiansToDegrees */\n/* unused harmony export degreesToRadians */\n/* unused harmony export convertLength */\n/* unused harmony export convertArea */\n/* unused harmony export isNumber */\n/* unused harmony export isObject */\n/* unused harmony export validateBBox */\n/* unused harmony export validateId */\n/* unused harmony export radians2degrees */\n/* unused harmony export degrees2radians */\n/* unused harmony export distanceToDegrees */\n/* unused harmony export distanceToRadians */\n/* unused harmony export radiansToDistance */\n/* unused harmony export bearingToAngle */\n/* unused harmony export convertDistance */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\n\n\n\n/***/ }),\n\n/***/ 6036:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(5849);\nvar invariant_1 = __webpack_require__(6037);\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nfunction default_1(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\": return polygonToLine(geom, options);\n        case \"MultiPolygon\": return multiPolygonToLine(geom, options);\n        default: throw new Error(\"invalid poly\");\n    }\n}\nexports.default = default_1;\n/**\n * @private\n */\nfunction polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    var type = geom.type;\n    var coords = geom.coordinates;\n    var properties = options.properties ? options.properties : poly.type === \"Feature\" ? poly.properties : {};\n    return coordsToLine(coords, properties);\n}\nexports.polygonToLine = polygonToLine;\n/**\n * @private\n */\nfunction multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(multiPoly);\n    var type = geom.type;\n    var coords = geom.coordinates;\n    var properties = options.properties ? options.properties :\n        multiPoly.type === \"Feature\" ? multiPoly.properties : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return helpers_1.featureCollection(lines);\n}\nexports.multiPolygonToLine = multiPolygonToLine;\n/**\n * @private\n */\nfunction coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return helpers_1.multiLineString(coords, properties);\n    }\n    return helpers_1.lineString(coords[0], properties);\n}\nexports.coordsToLine = coordsToLine;\n\n\n/***/ }),\n\n/***/ 6037:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(5849);\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n/***/ }),\n\n/***/ 6038:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_LoadingTypes_CircularLoader__ = __webpack_require__(169);\nvar styles={};function LoadingCirular(props){if(props.isLoading){if(props.timedOut){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,'Loader timed out!');}else if(props.pastDelay){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__components_LoadingTypes_CircularLoader__[\"a\" /* default */],{fullpage:false});}else{return null;}}else if(props.error){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,'Error! Component failed to load');}else{return null;}}/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles)(LoadingCirular));\n\n/***/ }),\n\n/***/ 6039:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__material_ui_core__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_select__ = __webpack_require__(6040);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel__ = __webpack_require__(155);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__material_ui_core_styles_colorManipulator__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__material_ui_core_styles_colorManipulator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__material_ui_core_styles_colorManipulator__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}/**\r\n * Select that allows user to select multiple layers\r\n */var styles=function styles(theme){return{root:{flexGrow:1,marginBottom:theme.spacing.unit},input:{display:'flex',padding:0},valueContainer:{display:'flex',flexWrap:'wrap',flex:1,alignItems:'center'},chip:{margin:theme.spacing.unit/2+'px '+theme.spacing.unit/4+'px'},chipFocused:{backgroundColor:Object(__WEBPACK_IMPORTED_MODULE_6__material_ui_core_styles_colorManipulator__[\"emphasize\"])(theme.palette.type==='light'?theme.palette.grey[300]:theme.palette.grey[700],0.08)},noOptionsMessage:{padding:theme.spacing.unit+'px '+theme.spacing.unit*2+'px'},singleValue:{fontSize:16},placeholder:{position:'absolute',left:2,fontSize:16},paper:{position:'absolute',zIndex:1,marginTop:theme.spacing.unit,left:0,right:0},divider:{height:theme.spacing.unit*2}};};function NoOptionsMessage(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"M\" /* Typography */],Object.assign({color:'textSecondary',className:props.selectProps.classes.noOptionsMessage},props.innerProps),props.children);}function inputComponent(_ref){var inputRef=_ref.inputRef,props=_objectWithoutProperties(_ref,['inputRef']);return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',Object.assign({ref:inputRef},props));}function Control(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"J\" /* TextField */],Object.assign({fullWidth:true,InputProps:{inputComponent:inputComponent,inputProps:Object.assign({className:props.selectProps.classes.input,inputRef:props.innerRef,children:props.children},props.innerProps)}},props.selectProps.textFieldProps));}function Option(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"u\" /* MenuItem */],Object.assign({buttonRef:props.innerRef,selected:props.isFocused,component:'div',style:{fontWeight:props.isSelected?500:400}},props.innerProps),props.children);}function Placeholder(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"M\" /* Typography */],Object.assign({color:'textSecondary',className:props.selectProps.classes.placeholder},props.innerProps),props.children);}function SingleValue(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"M\" /* Typography */],Object.assign({className:props.selectProps.classes.singleValue},props.innerProps),props.children);}function ValueContainer(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:props.selectProps.classes.valueContainer},props.children);}function MultiValue(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"d\" /* Chip */],{tabIndex:-1,label:props.children,className:__WEBPACK_IMPORTED_MODULE_2_classnames___default()(props.selectProps.classes.chip,_defineProperty({},props.selectProps.classes.chipFocused,props.isFocused)),onDelete:props.removeProps.onClick,deleteIcon:__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5__material_ui_icons_Cancel___default.a,props.removeProps)});}function Menu(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"w\" /* Paper */],Object.assign({square:true,className:props.selectProps.classes.paper},props.innerProps),props.children);}var components={Control:Control,Menu:Menu,MultiValue:MultiValue,NoOptionsMessage:NoOptionsMessage,Option:Option,Placeholder:Placeholder,SingleValue:SingleValue,ValueContainer:ValueContainer};var MultiLayerSelect=function(_Component){_inherits(MultiLayerSelect,_Component);function MultiLayerSelect(){var _ref2;var _temp,_this,_ret;_classCallCheck(this,MultiLayerSelect);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref2=MultiLayerSelect.__proto__||Object.getPrototypeOf(MultiLayerSelect)).call.apply(_ref2,[this].concat(args))),_this),_this.state={suggestions:[],selectedItems:[]},_this.handleChange=function(value){var setLayerIds=_this.props.setLayerIds;var selectedIds=value.map(function(obj){return obj.value;});setLayerIds(selectedIds);_this.setState({multi:value});},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(MultiLayerSelect,[{key:'componentDidMount',value:function componentDidMount(){var layers=this.props.layers;var suggestions=layers.map(function(layer){return{value:layer.id,label:layer.displayName};});this.setState({suggestions:suggestions});}},{key:'render',value:function render(){var _props=this.props,classes=_props.classes,theme=_props.theme,promt=_props.promt;var suggestions=this.state.suggestions;var selectStyles={input:function input(base){return Object.assign({},base,{color:theme.palette.text.primary,'& input':{font:'inherit'}});}};var label=promt?promt:'choose layers *';return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:classes.root},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__material_ui_core__[\"v\" /* NoSsr */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_select__[\"a\" /* default */],{classes:classes,styles:selectStyles,textFieldProps:{label:label,InputLabelProps:{shrink:true}},options:suggestions,components:components,value:this.state.multi,onChange:this.handleChange,placeholder:'Select one or more layers',isMulti:true})));}}]);return MultiLayerSelect;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(MultiLayerSelect));\n\n/***/ }),\n\n/***/ 6040:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export SelectBase */\n/* unused harmony export Async */\n/* unused harmony export AsyncCreatable */\n/* unused harmony export Creatable */\n/* unused harmony export createFilter */\n/* unused harmony export makeAnimated */\n/* unused harmony export components */\n/* unused harmony export mergeStyles */\n/* unused harmony export defaultTheme */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raf__ = __webpack_require__(5729);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_raf___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_raf__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_emotion__ = __webpack_require__(6041);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_input_autosize__ = __webpack_require__(6048);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_react_input_autosize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_react_input_autosize__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_memoize_one__ = __webpack_require__(5772);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_transition_group__ = __webpack_require__(6049);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_react_transition_group___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_react_transition_group__);\n\n\n\n\n\n\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n// ==============================\n// NO OP\n// ==============================\n\nvar noop = function noop() {};\n\n// ==============================\n// Class Name Prefixer\n// ==============================\n\n/**\n String representation of component state for styling with class names.\n\n Expects an array of strings OR a string/object pair:\n - className(['comp', 'comp-arg', 'comp-arg-2'])\n   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'\n - className('comp', { some: true, state: false })\n   @returns 'react-select__comp react-select__comp--some'\n*/\nfunction applyPrefixToName(prefix, name) {\n  if (!name) {\n    return prefix;\n  } else if (name[0] === '-') {\n    return prefix + name;\n  } else {\n    return prefix + '__' + name;\n  }\n}\n\nfunction classNames(prefix, cssKey, state, className) {\n  var arr = [cssKey, className];\n  if (state && prefix) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key) && state[key]) {\n        arr.push('' + applyPrefixToName(prefix, key));\n      }\n    }\n  }\n\n  return arr.filter(function (i) {\n    return i;\n  }).map(function (i) {\n    return String(i).trim();\n  }).join(' ');\n}\n// ==============================\n// Clean Value\n// ==============================\n\nvar cleanValue = function cleanValue(value) {\n  if (Array.isArray(value)) return value.filter(Boolean);\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) return [value];\n  return [];\n};\n\n// ==============================\n// Handle Input Change\n// ==============================\n\nfunction handleInputChange(inputValue, actionMeta, onInputChange) {\n  if (onInputChange) {\n    var newValue = onInputChange(inputValue, actionMeta);\n    if (typeof newValue === 'string') return newValue;\n  }\n  return inputValue;\n}\n\n// ==============================\n// Scroll Helpers\n// ==============================\n\nfunction isDocumentElement(el) {\n  return [document.documentElement, document.body, window].indexOf(el) > -1;\n}\n\n// Normalized scrollTo & scrollTop\n// ------------------------------\n\nfunction getScrollTop(el) {\n  if (isDocumentElement(el)) {\n    return window.pageYOffset;\n  }\n  return el.scrollTop;\n}\n\nfunction scrollTo(el, top) {\n  // with a scroll distance, we perform scroll on the element\n  if (isDocumentElement(el)) {\n    window.scrollTo(0, top);\n    return;\n  }\n\n  el.scrollTop = top;\n}\n\n// Get Scroll Parent\n// ------------------------------\n\nfunction getScrollParent(element) {\n  var style = getComputedStyle(element);\n  var excludeStaticParent = style.position === 'absolute';\n  var overflowRx = /(auto|scroll)/;\n  var docEl = document.documentElement; // suck it, flow...\n\n  if (style.position === 'fixed') return docEl;\n\n  for (var parent = element; parent = parent.parentElement;) {\n    style = getComputedStyle(parent);\n    if (excludeStaticParent && style.position === 'static') {\n      continue;\n    }\n    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent;\n    }\n  }\n\n  return docEl;\n}\n\n// Animated Scroll To\n// ------------------------------\n\n/**\n  @param t: time (elapsed)\n  @param b: initial value\n  @param c: amount of change\n  @param d: duration\n*/\nfunction easeOutCubic(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}\n\nfunction animatedScrollTo(element, to) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n  var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n\n  var start = getScrollTop(element);\n  var change = to - start;\n  var increment = 10;\n  var currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    var val = easeOutCubic(currentTime, start, change, duration);\n    scrollTo(element, val);\n    if (currentTime < duration) {\n      __WEBPACK_IMPORTED_MODULE_0_raf___default()(animateScroll);\n    } else {\n      callback(element);\n    }\n  }\n  animateScroll();\n}\n\n// Scroll Into View\n// ------------------------------\n\nfunction scrollIntoView(menuEl, focusedEl) {\n  var menuRect = menuEl.getBoundingClientRect();\n  var focusedRect = focusedEl.getBoundingClientRect();\n  var overScroll = focusedEl.offsetHeight / 3;\n\n  if (focusedRect.bottom + overScroll > menuRect.bottom) {\n    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));\n  } else if (focusedRect.top - overScroll < menuRect.top) {\n    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));\n  }\n}\n\n// ==============================\n// Get bounding client object\n// ==============================\n\n// cannot get keys using array notation with DOMRect\nfunction getBoundingClientObj(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width\n  };\n}\n\n// ==============================\n// Touch Capability Detector\n// ==============================\n\nfunction isTouchCapable() {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Mobile Device Detector\n// ==============================\n\nfunction isMobileDevice() {\n  try {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Menu\n// ==============================\n\n// Get Menu Placement\n// ------------------------------\n\nfunction getMenuPlacement(_ref) {\n  var maxHeight = _ref.maxHeight,\n      menuEl = _ref.menuEl,\n      minHeight = _ref.minHeight,\n      placement = _ref.placement,\n      shouldScroll = _ref.shouldScroll,\n      isFixedPosition = _ref.isFixedPosition,\n      theme = _ref.theme;\n  var spacing = theme.spacing;\n\n  var scrollParent = getScrollParent(menuEl);\n  var defaultState = { placement: 'bottom', maxHeight: maxHeight };\n\n  // something went wrong, return default state\n  if (!menuEl || !menuEl.offsetParent) return defaultState;\n\n  // we can't trust `scrollParent.scrollHeight` --> it may increase when\n  // the menu is rendered\n\n  var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),\n      scrollHeight = _scrollParent$getBoun.height;\n\n  var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),\n      menuBottom = _menuEl$getBoundingCl.bottom,\n      menuHeight = _menuEl$getBoundingCl.height,\n      menuTop = _menuEl$getBoundingCl.top;\n\n  // $FlowFixMe function returns above if there's no offsetParent\n\n\n  var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),\n      containerTop = _menuEl$offsetParent$.top;\n\n  var viewHeight = window.innerHeight;\n  var scrollTop = getScrollTop(scrollParent);\n\n  var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);\n  var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);\n  var viewSpaceAbove = containerTop - marginTop;\n  var viewSpaceBelow = viewHeight - menuTop;\n  var scrollSpaceAbove = viewSpaceAbove + scrollTop;\n  var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;\n\n  var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;\n  var scrollUp = scrollTop + menuTop - marginTop;\n  var scrollDuration = 160;\n\n  switch (placement) {\n    case 'auto':\n    case 'bottom':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceBelow >= menuHeight) {\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (!isFixedPosition && scrollSpaceBelow >= minHeight || isFixedPosition && viewSpaceBelow >= minHeight) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom;\n\n        return {\n          placement: 'bottom',\n          maxHeight: constrainedHeight\n        };\n      }\n\n      // 4. Forked beviour when there isn't enough space below\n\n      // AUTO: flip the menu, render above\n      if (placement === 'auto' || isFixedPosition) {\n        // may need to be constrained after flipping\n        var _constrainedHeight = maxHeight;\n\n        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n          _constrainedHeight = isFixedPosition ? viewSpaceAbove - marginBottom - spacing.controlHeight : scrollSpaceAbove - marginBottom - spacing.controlHeight;\n        }\n\n        return { placement: 'top', maxHeight: _constrainedHeight };\n      }\n\n      // BOTTOM: allow browser to increase scrollable area and immediately set scroll\n      if (placement === 'bottom') {\n        scrollTo(scrollParent, scrollDown);\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n      break;\n    case 'top':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceAbove >= menuHeight) {\n        return { placement: 'top', maxHeight: maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return { placement: 'top', maxHeight: maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n        var _constrainedHeight2 = maxHeight;\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n          _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop;\n        }\n\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: _constrainedHeight2\n        };\n      }\n\n      // 4. not enough space, the browser WILL NOT increase scrollable area when\n      // absolutely positioned element rendered above the viewport (only below).\n      // Flip the menu, render below\n      return { placement: 'bottom', maxHeight: maxHeight };\n    default:\n      throw new Error('Invalid placement provided \"' + placement + '\".');\n  }\n\n  // fulfil contract with flow: implicit return value of undefined\n  return defaultState;\n}\n\n// Menu Component\n// ------------------------------\n\nfunction alignToControl(placement) {\n  var placementToCSSProp = { bottom: 'top', top: 'bottom' };\n  return placement ? placementToCSSProp[placement] : 'bottom';\n}\nvar coercePlacement = function coercePlacement(p) {\n  return p === 'auto' ? 'bottom' : p;\n};\n\nvar menuCSS = function menuCSS(_ref2) {\n  var _ref3;\n\n  var placement = _ref2.placement,\n      _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      spacing = _ref2$theme.spacing,\n      colors = _ref2$theme.colors;\n  return _ref3 = {}, defineProperty(_ref3, alignToControl(placement), '100%'), defineProperty(_ref3, 'backgroundColor', colors.neutral0), defineProperty(_ref3, 'borderRadius', borderRadius), defineProperty(_ref3, 'boxShadow', '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)'), defineProperty(_ref3, 'marginBottom', spacing.menuGutter), defineProperty(_ref3, 'marginTop', spacing.menuGutter), defineProperty(_ref3, 'position', 'absolute'), defineProperty(_ref3, 'width', '100%'), defineProperty(_ref3, 'zIndex', 1), _ref3;\n};\n\n// NOTE: internal only\nvar MenuPlacer = function (_Component) {\n  inherits(MenuPlacer, _Component);\n\n  function MenuPlacer() {\n    var _ref4;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, MenuPlacer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref4 = MenuPlacer.__proto__ || Object.getPrototypeOf(MenuPlacer)).call.apply(_ref4, [this].concat(args))), _this), _this.state = {\n      maxHeight: _this.props.maxMenuHeight,\n      placement: null\n    }, _this.getPlacement = function (ref) {\n      var _this$props = _this.props,\n          minMenuHeight = _this$props.minMenuHeight,\n          maxMenuHeight = _this$props.maxMenuHeight,\n          menuPlacement = _this$props.menuPlacement,\n          menuPosition = _this$props.menuPosition,\n          menuShouldScrollIntoView = _this$props.menuShouldScrollIntoView,\n          theme = _this$props.theme;\n      var getPortalPlacement = _this.context.getPortalPlacement;\n\n\n      if (!ref) return;\n\n      // DO NOT scroll if position is fixed\n      var isFixedPosition = menuPosition === 'fixed';\n      var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;\n\n      var state = getMenuPlacement({\n        maxHeight: maxMenuHeight,\n        menuEl: ref,\n        minHeight: minMenuHeight,\n        placement: menuPlacement,\n        shouldScroll: shouldScroll,\n        isFixedPosition: isFixedPosition,\n        theme: theme\n      });\n\n      if (getPortalPlacement) getPortalPlacement(state);\n\n      _this.setState(state);\n    }, _this.getUpdatedProps = function () {\n      var menuPlacement = _this.props.menuPlacement;\n\n      var placement = _this.state.placement || coercePlacement(menuPlacement);\n\n      return _extends({}, _this.props, { placement: placement, maxHeight: _this.state.maxHeight });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(MenuPlacer, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        ref: this.getPlacement,\n        placerProps: this.getUpdatedProps()\n      });\n    }\n  }]);\n  return MenuPlacer;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nMenuPlacer.contextTypes = {\n  getPortalPlacement: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func\n};\nvar Menu = function Menu(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  var cn = cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('menu', props)), { menu: true }, className);\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({ className: cn }, innerProps, { ref: innerRef }),\n    children\n  );\n};\n\n// ==============================\n// Menu List\n// ==============================\n\nvar menuListCSS = function menuListCSS(_ref5) {\n  var maxHeight = _ref5.maxHeight,\n      baseUnit = _ref5.theme.spacing.baseUnit;\n  return {\n    maxHeight: maxHeight,\n    overflowY: 'auto',\n    paddingBottom: baseUnit,\n    paddingTop: baseUnit,\n    position: 'relative', // required for offset[Height, Top] > keyboard scroll\n    WebkitOverflowScrolling: 'touch'\n  };\n};\nvar MenuList = function MenuList(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isMulti = props.isMulti,\n      innerRef = props.innerRef;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('menuList', props)), {\n        'menu-list': true,\n        'menu-list--is-multi': isMulti\n      }, className),\n      ref: innerRef\n    },\n    children\n  );\n};\n\n// ==============================\n// Menu Notices\n// ==============================\n\nvar noticeCSS = function noticeCSS(_ref6) {\n  var _ref6$theme = _ref6.theme,\n      baseUnit = _ref6$theme.spacing.baseUnit,\n      colors = _ref6$theme.colors;\n  return {\n    color: colors.neutral40,\n    padding: baseUnit * 2 + 'px ' + baseUnit * 3 + 'px',\n    textAlign: 'center'\n  };\n};\nvar noOptionsMessageCSS = noticeCSS;\nvar loadingMessageCSS = noticeCSS;\n\nvar NoOptionsMessage = function NoOptionsMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('noOptionsMessage', props)), {\n        'menu-notice': true,\n        'menu-notice--no-options': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\nNoOptionsMessage.defaultProps = {\n  children: 'No options'\n};\n\nvar LoadingMessage = function LoadingMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('loadingMessage', props)), {\n        'menu-notice': true,\n        'menu-notice--loading': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\nLoadingMessage.defaultProps = {\n  children: 'Loading...'\n};\n\n// ==============================\n// Menu Portal\n// ==============================\n\nvar menuPortalCSS = function menuPortalCSS(_ref7) {\n  var rect = _ref7.rect,\n      offset = _ref7.offset,\n      position = _ref7.position;\n  return {\n    left: rect.left,\n    position: position,\n    top: offset,\n    width: rect.width,\n    zIndex: 1\n  };\n};\n\nvar MenuPortal = function (_Component2) {\n  inherits(MenuPortal, _Component2);\n\n  function MenuPortal() {\n    var _ref8;\n\n    var _temp2, _this2, _ret2;\n\n    classCallCheck(this, MenuPortal);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this2 = possibleConstructorReturn(this, (_ref8 = MenuPortal.__proto__ || Object.getPrototypeOf(MenuPortal)).call.apply(_ref8, [this].concat(args))), _this2), _this2.state = { placement: null }, _this2.getPortalPlacement = function (_ref9) {\n      var placement = _ref9.placement;\n\n      var initialPlacement = coercePlacement(_this2.props.menuPlacement);\n\n      // avoid re-renders if the placement has not changed\n      if (placement !== initialPlacement) {\n        _this2.setState({ placement: placement });\n      }\n    }, _temp2), possibleConstructorReturn(_this2, _ret2);\n  }\n\n  createClass(MenuPortal, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        getPortalPlacement: this.getPortalPlacement\n      };\n    }\n\n    // callback for occassions where the menu must \"flip\"\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          appendTo = _props.appendTo,\n          children = _props.children,\n          controlElement = _props.controlElement,\n          menuPlacement = _props.menuPlacement,\n          position = _props.menuPosition,\n          getStyles = _props.getStyles;\n\n      var isFixed = position === 'fixed';\n\n      // bail early if required elements aren't present\n      if (!appendTo && !isFixed || !controlElement) {\n        return null;\n      }\n\n      var placement = this.state.placement || coercePlacement(menuPlacement);\n      var rect = getBoundingClientObj(controlElement);\n      var scrollDistance = isFixed ? 0 : window.pageYOffset;\n      var offset = rect[placement] + scrollDistance;\n      var state = { offset: offset, position: position, rect: rect };\n\n      // same wrapper element whether fixed or portalled\n      var menuWrapper = __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        'div',\n        { className: /*#__PURE__*/ /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('menuPortal', state)) },\n        children\n      );\n\n      return appendTo ? Object(__WEBPACK_IMPORTED_MODULE_3_react_dom__[\"createPortal\"])(menuWrapper, appendTo) : menuWrapper;\n    }\n  }]);\n  return MenuPortal;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\nMenuPortal.childContextTypes = {\n  getPortalPlacement: __WEBPACK_IMPORTED_MODULE_4_prop_types___default.a.func\n};\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) == 'object' && (typeof b === 'undefined' ? 'undefined' : _typeof(b)) == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    }\n    // end fast-deep-equal\n\n    // Custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nfunction exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n}\n\nvar diacritics = [{ base: 'A', letters: /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g }, { base: 'AA', letters: /[\\uA732]/g }, { base: 'AE', letters: /[\\u00C6\\u01FC\\u01E2]/g }, { base: 'AO', letters: /[\\uA734]/g }, { base: 'AU', letters: /[\\uA736]/g }, { base: 'AV', letters: /[\\uA738\\uA73A]/g }, { base: 'AY', letters: /[\\uA73C]/g }, { base: 'B', letters: /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g }, { base: 'C', letters: /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g }, { base: 'D', letters: /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g }, { base: 'DZ', letters: /[\\u01F1\\u01C4]/g }, { base: 'Dz', letters: /[\\u01F2\\u01C5]/g }, { base: 'E', letters: /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g }, { base: 'F', letters: /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g }, { base: 'G', letters: /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g }, { base: 'H', letters: /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g }, { base: 'I', letters: /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g }, { base: 'J', letters: /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g }, { base: 'K', letters: /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g }, { base: 'L', letters: /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g }, { base: 'LJ', letters: /[\\u01C7]/g }, { base: 'Lj', letters: /[\\u01C8]/g }, { base: 'M', letters: /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g }, { base: 'N', letters: /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g }, { base: 'NJ', letters: /[\\u01CA]/g }, { base: 'Nj', letters: /[\\u01CB]/g }, { base: 'O', letters: /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g }, { base: 'OI', letters: /[\\u01A2]/g }, { base: 'OO', letters: /[\\uA74E]/g }, { base: 'OU', letters: /[\\u0222]/g }, { base: 'P', letters: /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g }, { base: 'Q', letters: /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g }, { base: 'R', letters: /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g }, { base: 'S', letters: /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g }, { base: 'T', letters: /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g }, { base: 'TZ', letters: /[\\uA728]/g }, { base: 'U', letters: /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g }, { base: 'V', letters: /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g }, { base: 'VY', letters: /[\\uA760]/g }, { base: 'W', letters: /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g }, { base: 'X', letters: /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g }, { base: 'Y', letters: /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g }, { base: 'Z', letters: /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g }, { base: 'a', letters: /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g }, { base: 'aa', letters: /[\\uA733]/g }, { base: 'ae', letters: /[\\u00E6\\u01FD\\u01E3]/g }, { base: 'ao', letters: /[\\uA735]/g }, { base: 'au', letters: /[\\uA737]/g }, { base: 'av', letters: /[\\uA739\\uA73B]/g }, { base: 'ay', letters: /[\\uA73D]/g }, { base: 'b', letters: /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g }, { base: 'c', letters: /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g }, { base: 'd', letters: /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g }, { base: 'dz', letters: /[\\u01F3\\u01C6]/g }, { base: 'e', letters: /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g }, { base: 'f', letters: /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g }, { base: 'g', letters: /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g }, { base: 'h', letters: /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g }, { base: 'hv', letters: /[\\u0195]/g }, { base: 'i', letters: /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g }, { base: 'j', letters: /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g }, { base: 'k', letters: /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g }, { base: 'l', letters: /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g }, { base: 'lj', letters: /[\\u01C9]/g }, { base: 'm', letters: /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g }, { base: 'n', letters: /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g }, { base: 'nj', letters: /[\\u01CC]/g }, { base: 'o', letters: /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g }, { base: 'oi', letters: /[\\u01A3]/g }, { base: 'ou', letters: /[\\u0223]/g }, { base: 'oo', letters: /[\\uA74F]/g }, { base: 'p', letters: /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g }, { base: 'q', letters: /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g }, { base: 'r', letters: /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g }, { base: 's', letters: /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g }, { base: 't', letters: /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g }, { base: 'tz', letters: /[\\uA729]/g }, { base: 'u', letters: /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g }, { base: 'v', letters: /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g }, { base: 'vy', letters: /[\\uA761]/g }, { base: 'w', letters: /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g }, { base: 'x', letters: /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g }, { base: 'y', letters: /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g }, { base: 'z', letters: /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g }];\n\nvar stripDiacritics = function stripDiacritics(str) {\n\tfor (var i = 0; i < diacritics.length; i++) {\n\t\tstr = str.replace(diacritics[i].letters, diacritics[i].base);\n\t}\n\treturn str;\n};\n\nvar trimString = function trimString(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\nvar defaultStringify = function defaultStringify(option) {\n  return option.label + ' ' + option.value;\n};\n\nvar createFilter = function createFilter(config) {\n  return function (option, rawInput) {\n    var _ignoreCase$ignoreAcc = _extends({\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaultStringify,\n      trim: true,\n      matchFrom: 'any'\n    }, config),\n        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,\n        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,\n        stringify = _ignoreCase$ignoreAcc.stringify,\n        trim = _ignoreCase$ignoreAcc.trim,\n        matchFrom = _ignoreCase$ignoreAcc.matchFrom;\n\n    var input = trim ? trimString(rawInput) : rawInput;\n    var candidate = trim ? trimString(stringify(option)) : stringify(option);\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n      candidate = stripDiacritics(candidate);\n    }\n    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;\n  };\n};\n\n// Assistive text to describe visual elements. Hidden for sighted users.\nvar A11yText = function A11yText(props) {\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('span', _extends({\n    className: Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])({\n      zIndex: 9999,\n      border: 0,\n      clip: 'rect(1px, 1px, 1px, 1px)',\n      height: 1,\n      width: 1,\n      position: 'absolute',\n      overflow: 'hidden',\n      padding: 0,\n      whiteSpace: 'nowrap',\n      backgroundColor: 'red',\n      color: 'blue'\n    })\n  }, props));\n};\n\nvar DummyInput = function (_Component) {\n  inherits(DummyInput, _Component);\n\n  function DummyInput() {\n    classCallCheck(this, DummyInput);\n    return possibleConstructorReturn(this, (DummyInput.__proto__ || Object.getPrototypeOf(DummyInput)).apply(this, arguments));\n  }\n\n  createClass(DummyInput, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          inProp = _props.in,\n          out = _props.out,\n          onExited = _props.onExited,\n          appear = _props.appear,\n          enter = _props.enter,\n          exit = _props.exit,\n          innerRef = _props.innerRef,\n          props = objectWithoutProperties(_props, ['in', 'out', 'onExited', 'appear', 'enter', 'exit', 'innerRef']);\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('input', _extends({\n        ref: innerRef\n      }, props, {\n        className: Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])({\n          // get rid of any default styles\n          background: 0,\n          border: 0,\n          fontSize: 'inherit',\n          outline: 0,\n          padding: 0,\n\n          // important! without `width` browsers won't allow focus\n          width: 1,\n\n          // remove cursor on desktop\n          color: 'transparent',\n\n          // remove cursor on mobile whilst maintaining \"scroll into view\" behaviour\n          left: -100,\n          opacity: 0,\n          position: 'relative',\n          transform: 'scale(0)'\n        })\n      }));\n    }\n  }]);\n  return DummyInput;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nvar NodeResolver = function (_Component) {\n  inherits(NodeResolver, _Component);\n\n  function NodeResolver() {\n    classCallCheck(this, NodeResolver);\n    return possibleConstructorReturn(this, (NodeResolver.__proto__ || Object.getPrototypeOf(NodeResolver)).apply(this, arguments));\n  }\n\n  createClass(NodeResolver, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.innerRef(Object(__WEBPACK_IMPORTED_MODULE_3_react_dom__[\"findDOMNode\"])(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.innerRef(null);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return NodeResolver;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nvar STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position'];\n\nvar LOCK_STYLES = {\n  boxSizing: 'border-box', // account for possible declaration `width: 100%;` on body\n  overflow: 'hidden',\n  position: 'relative',\n  height: '100%'\n};\n\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\n\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\n\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n}\n\n// `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar activeScrollLocks = 0;\n\nvar ScrollLock = function (_Component) {\n  inherits(ScrollLock, _Component);\n\n  function ScrollLock() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollLock);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).call.apply(_ref, [this].concat(args))), _this), _this.originalStyles = {}, _this.listenerOptions = {\n      capture: false,\n      passive: false\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ScrollLock, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!canUseDOM) return;\n\n      var _props = this.props,\n          accountForScrollbars = _props.accountForScrollbars,\n          touchScrollTarget = _props.touchScrollTarget;\n\n      var target = document.body;\n      var targetStyle = target && target.style;\n\n      if (accountForScrollbars) {\n        // store any styles already applied to the body\n        STYLE_KEYS.forEach(function (key) {\n          var val = targetStyle && targetStyle[key];\n          _this2.originalStyles[key] = val;\n        });\n      }\n\n      // apply the lock styles and padding if this is the first scroll lock\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        var currentPadding = parseInt(this.originalStyles.paddingRight, 10) || 0;\n        var clientWidth = document.body ? document.body.clientWidth : 0;\n        var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;\n\n        Object.keys(LOCK_STYLES).forEach(function (key) {\n          var val = LOCK_STYLES[key];\n          if (targetStyle) {\n            targetStyle[key] = val;\n          }\n        });\n\n        if (targetStyle) {\n          targetStyle.paddingRight = adjustedPadding + 'px';\n        }\n      }\n\n      // account for touch devices\n      if (target && isTouchDevice()) {\n        // Mobile Safari ignores { overflow: hidden } declaration on the body.\n        target.addEventListener('touchmove', preventTouchMove, this.listenerOptions);\n\n        // Allow scroll on provided target\n        if (touchScrollTarget) {\n          touchScrollTarget.addEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n          touchScrollTarget.addEventListener('touchmove', allowTouchMove, this.listenerOptions);\n        }\n      }\n\n      // increment active scroll locks\n      activeScrollLocks += 1;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      if (!canUseDOM) return;\n\n      var _props2 = this.props,\n          accountForScrollbars = _props2.accountForScrollbars,\n          touchScrollTarget = _props2.touchScrollTarget;\n\n      var target = document.body;\n      var targetStyle = target && target.style;\n\n      // safely decrement active scroll locks\n      activeScrollLocks = Math.max(activeScrollLocks - 1, 0);\n\n      // reapply original body styles, if any\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        STYLE_KEYS.forEach(function (key) {\n          var val = _this3.originalStyles[key];\n          if (targetStyle) {\n            targetStyle[key] = val;\n          }\n        });\n      }\n\n      // remove touch listeners\n      if (target && isTouchDevice()) {\n        target.removeEventListener('touchmove', preventTouchMove, this.listenerOptions);\n\n        if (touchScrollTarget) {\n          touchScrollTarget.removeEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n          touchScrollTarget.removeEventListener('touchmove', allowTouchMove, this.listenerOptions);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n  return ScrollLock;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nScrollLock.defaultProps = {\n  accountForScrollbars: true\n};\n\n// NOTE:\n// We shouldn't need this after updating to React v16.3.0, which introduces:\n// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref\n// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref\n\nvar ScrollBlock = function (_PureComponent) {\n  inherits(ScrollBlock, _PureComponent);\n\n  function ScrollBlock() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollBlock);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollBlock.__proto__ || Object.getPrototypeOf(ScrollBlock)).call.apply(_ref, [this].concat(args))), _this), _this.state = { touchScrollTarget: null }, _this.getScrollTarget = function (ref) {\n      if (ref === _this.state.touchScrollTarget) return;\n      _this.setState({ touchScrollTarget: ref });\n    }, _this.blurSelectInput = function () {\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // must be in state to trigger a re-render, only runs once per instance\n\n\n  // this will close the menu when a user clicks outside\n\n\n  createClass(ScrollBlock, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          isEnabled = _props.isEnabled;\n      var touchScrollTarget = this.state.touchScrollTarget;\n\n      // bail early if not enabled\n\n      if (!isEnabled) return children;\n\n      /*\n       * Div\n       * ------------------------------\n       * blocks scrolling on non-body elements behind the menu\n        * NodeResolver\n       * ------------------------------\n       * we need a reference to the scrollable element to \"unlock\" scroll on\n       * mobile devices\n        * ScrollLock\n       * ------------------------------\n       * actually does the scroll locking\n       */\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        'div',\n        null,\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div', {\n          onClick: this.blurSelectInput,\n          className: Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])({ position: 'fixed', left: 0, bottom: 0, right: 0, top: 0 })\n        }),\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          NodeResolver,\n          { innerRef: this.getScrollTarget },\n          children\n        ),\n        touchScrollTarget ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(ScrollLock, { touchScrollTarget: touchScrollTarget }) : null\n      );\n    }\n  }]);\n  return ScrollBlock;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"PureComponent\"]);\n\nvar ScrollCaptor = function (_Component) {\n  inherits(ScrollCaptor, _Component);\n\n  function ScrollCaptor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollCaptor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollCaptor.__proto__ || Object.getPrototypeOf(ScrollCaptor)).call.apply(_ref, [this].concat(args))), _this), _this.isBottom = false, _this.isTop = false, _this.cancelScroll = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }, _this.handleEventDelta = function (event, delta) {\n      var _this$props = _this.props,\n          onBottomArrive = _this$props.onBottomArrive,\n          onBottomLeave = _this$props.onBottomLeave,\n          onTopArrive = _this$props.onTopArrive,\n          onTopLeave = _this$props.onTopLeave;\n      var _this$scrollTarget = _this.scrollTarget,\n          scrollTop = _this$scrollTarget.scrollTop,\n          scrollHeight = _this$scrollTarget.scrollHeight,\n          clientHeight = _this$scrollTarget.clientHeight;\n\n      var target = _this.scrollTarget;\n      var isDeltaPositive = delta > 0;\n      var availableScroll = scrollHeight - clientHeight - scrollTop;\n      var shouldCancelScroll = false;\n\n      // reset bottom/top flags\n      if (availableScroll > delta && _this.isBottom) {\n        if (onBottomLeave) onBottomLeave(event);\n        _this.isBottom = false;\n      }\n      if (isDeltaPositive && _this.isTop) {\n        if (onTopLeave) onTopLeave(event);\n        _this.isTop = false;\n      }\n\n      // bottom limit\n      if (isDeltaPositive && delta > availableScroll) {\n        if (onBottomArrive && !_this.isBottom) {\n          onBottomArrive(event);\n        }\n        target.scrollTop = scrollHeight;\n        shouldCancelScroll = true;\n        _this.isBottom = true;\n\n        // top limit\n      } else if (!isDeltaPositive && -delta > scrollTop) {\n        if (onTopArrive && !_this.isTop) {\n          onTopArrive(event);\n        }\n        target.scrollTop = 0;\n        shouldCancelScroll = true;\n        _this.isTop = true;\n      }\n\n      // cancel scroll\n      if (shouldCancelScroll) {\n        _this.cancelScroll(event);\n      }\n    }, _this.onWheel = function (event) {\n      _this.handleEventDelta(event, event.deltaY);\n    }, _this.onTouchStart = function (event) {\n      // set touch start so we can calculate touchmove delta\n      _this.touchStart = event.changedTouches[0].clientY;\n    }, _this.onTouchMove = function (event) {\n      var deltaY = _this.touchStart - event.changedTouches[0].clientY;\n      _this.handleEventDelta(event, deltaY);\n    }, _this.getScrollTarget = function (ref) {\n      _this.scrollTarget = ref;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ScrollCaptor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startListening(this.scrollTarget);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopListening(this.scrollTarget);\n    }\n  }, {\n    key: 'startListening',\n    value: function startListening(el) {\n      // bail early if no scroll available\n      if (el.scrollHeight <= el.clientHeight) return;\n\n      // all the if statements are to appease Flow 😢\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('wheel', this.onWheel, false);\n      }\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('touchstart', this.onTouchStart, false);\n      }\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('touchmove', this.onTouchMove, false);\n      }\n    }\n  }, {\n    key: 'stopListening',\n    value: function stopListening(el) {\n      // bail early if no scroll available\n      if (el.scrollHeight <= el.clientHeight) return;\n\n      // all the if statements are to appease Flow 😢\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('wheel', this.onWheel, false);\n      }\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('touchstart', this.onTouchStart, false);\n      }\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('touchmove', this.onTouchMove, false);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        NodeResolver,\n        { innerRef: this.getScrollTarget },\n        this.props.children\n      );\n    }\n  }]);\n  return ScrollCaptor;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nvar ScrollCaptorSwitch = function (_Component2) {\n  inherits(ScrollCaptorSwitch, _Component2);\n\n  function ScrollCaptorSwitch() {\n    classCallCheck(this, ScrollCaptorSwitch);\n    return possibleConstructorReturn(this, (ScrollCaptorSwitch.__proto__ || Object.getPrototypeOf(ScrollCaptorSwitch)).apply(this, arguments));\n  }\n\n  createClass(ScrollCaptorSwitch, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          isEnabled = _props.isEnabled,\n          props = objectWithoutProperties(_props, ['isEnabled']);\n\n      return isEnabled ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(ScrollCaptor, props) : this.props.children;\n    }\n  }]);\n  return ScrollCaptorSwitch;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nScrollCaptorSwitch.defaultProps = { isEnabled: true };\n\nvar instructionsAriaMessage = function instructionsAriaMessage(event) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isSearchable = context.isSearchable,\n      isMulti = context.isMulti,\n      label = context.label;\n\n  switch (event) {\n    case 'menu':\n      return 'Use Up and Down to choose options, press Backspace to select the currently focused option, press Escape to exit the menu, press Tab to select the option and exit the menu.';\n    case 'input':\n      return (label ? label : 'Select') + ' is focused ' + (isSearchable ? ',type to refine list' : '') + ', press Down to open the menu, ' + (isMulti ? ' press left to focus selected values' : '');\n    case 'value':\n      return 'Use left and right to toggle between focused values, press Enter to remove the currently focused value';\n  }\n};\n\nvar valueEventAriaMessage = function valueEventAriaMessage(event, context) {\n  var value = context.value;\n\n  if (!value) return;\n  switch (event) {\n    case 'deselect-option':\n    case 'pop-value':\n    case 'remove-value':\n      return 'option ' + value + ', deselected.';\n    case 'select-option':\n      return 'option ' + value + ', selected.';\n  }\n};\n\nvar valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {\n  var focusedValue = _ref.focusedValue,\n      getOptionLabel = _ref.getOptionLabel,\n      selectValue = _ref.selectValue;\n  return 'value ' + getOptionLabel(focusedValue) + ' focused, ' + (selectValue.indexOf(focusedValue) + 1) + ' of ' + selectValue.length + '.';\n};\nvar optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {\n  var focusedOption = _ref2.focusedOption,\n      getOptionLabel = _ref2.getOptionLabel,\n      options = _ref2.options;\n  return 'option ' + getOptionLabel(focusedOption) + ' focused, ' + (options.indexOf(focusedOption) + 1) + ' of ' + options.length + '.';\n};\nvar resultsAriaMessage = function resultsAriaMessage(_ref3) {\n  var inputValue = _ref3.inputValue,\n      screenReaderMessage = _ref3.screenReaderMessage;\n  return '' + screenReaderMessage + (inputValue ? ' for search term ' + inputValue : '') + '.';\n};\n\nvar formatGroupLabel = function formatGroupLabel(group) {\n  return group.label;\n};\n\nvar getOptionLabel = function getOptionLabel(option) {\n  return option.label;\n};\n\nvar getOptionValue = function getOptionValue(option) {\n  return option.value;\n};\n\nvar isOptionDisabled = function isOptionDisabled(option) {\n  return !!option.isDisabled;\n};\n\n// ==============================\n// Root Container\n// ==============================\n\nvar containerCSS = function containerCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isRtl = _ref.isRtl;\n  return {\n    direction: isRtl ? 'rtl' : null,\n    pointerEvents: isDisabled ? 'none' : null, // cancel mouse events when disabled\n    position: 'relative'\n  };\n};\nvar SelectContainer = function SelectContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isDisabled = props.isDisabled,\n      isRtl = props.isRtl;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('container', props)), {\n        '--is-disabled': isDisabled,\n        '--is-rtl': isRtl\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\n// ==============================\n// Value Container\n// ==============================\n\nvar valueContainerCSS = function valueContainerCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap',\n    padding: spacing.baseUnit / 2 + 'px ' + spacing.baseUnit * 2 + 'px',\n    WebkitOverflowScrolling: 'touch',\n    position: 'relative',\n    overflow: 'hidden'\n  };\n};\nvar ValueContainer = function (_Component) {\n  inherits(ValueContainer, _Component);\n\n  function ValueContainer() {\n    classCallCheck(this, ValueContainer);\n    return possibleConstructorReturn(this, (ValueContainer.__proto__ || Object.getPrototypeOf(ValueContainer)).apply(this, arguments));\n  }\n\n  createClass(ValueContainer, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          cx = _props.cx,\n          isMulti = _props.isMulti,\n          getStyles = _props.getStyles,\n          hasValue = _props.hasValue;\n\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        'div',\n        {\n          className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('valueContainer', this.props)), {\n            'value-container': true,\n            'value-container--is-multi': isMulti,\n            'value-container--has-value': hasValue\n          }, className)\n        },\n        children\n      );\n    }\n  }]);\n  return ValueContainer;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\n// ==============================\n// Indicator Container\n// ==============================\n\nvar indicatorsContainerCSS = function indicatorsContainerCSS() {\n  return {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    display: 'flex',\n    flexShrink: 0\n  };\n};\nvar IndicatorsContainer = function IndicatorsContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles;\n\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('indicatorsContainer', props)), {\n        'indicators': true\n      }, className)\n    },\n    children\n  );\n};\n\n// ==============================\n// Dropdown & Clear Icons\n// ==============================\n\nvar Svg = function Svg(_ref) {\n  var size = _ref.size,\n      props = objectWithoutProperties(_ref, ['size']);\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('svg', _extends({\n    height: size,\n    width: size,\n    viewBox: '0 0 20 20',\n    'aria-hidden': 'true',\n    focusable: 'false',\n    className: /*#__PURE__*/ /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])({\n      display: 'inline-block',\n      fill: 'currentColor',\n      lineHeight: 1,\n      stroke: 'currentColor',\n      strokeWidth: 0\n    })\n  }, props));\n};\n\nvar CrossIcon = function CrossIcon(props) {\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    Svg,\n    _extends({ size: 20 }, props),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('path', { d: 'M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z' })\n  );\n};\nvar DownChevron = function DownChevron(props) {\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    Svg,\n    _extends({ size: 20 }, props),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('path', { d: 'M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z' })\n  );\n};\n\n// ==============================\n// Dropdown & Clear Buttons\n// ==============================\n\nvar baseCSS = function baseCSS(_ref2) {\n  var isFocused = _ref2.isFocused,\n      _ref2$theme = _ref2.theme,\n      baseUnit = _ref2$theme.spacing.baseUnit,\n      colors = _ref2$theme.colors;\n  return {\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n\n    ':hover': {\n      color: isFocused ? colors.neutral80 : colors.neutral40\n    }\n  };\n};\n\nvar dropdownIndicatorCSS = baseCSS;\nvar DropdownIndicator = function DropdownIndicator(props) {\n  var _props$children = props.children,\n      children = _props$children === undefined ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(DownChevron, null) : _props$children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('dropdownIndicator', props)), {\n        'indicator': true,\n        'dropdown-indicator': true\n      }, className)\n    }),\n    children\n  );\n};\n\nvar clearIndicatorCSS = baseCSS;\nvar ClearIndicator = function ClearIndicator(props) {\n  var _props$children2 = props.children,\n      children = _props$children2 === undefined ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(CrossIcon, null) : _props$children2,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('clearIndicator', props)), {\n        'indicator': true,\n        'clear-indicator': true\n      }, className)\n    }),\n    children\n  );\n};\n\n// ==============================\n// Separator\n// ==============================\n\nvar indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref3) {\n  var isDisabled = _ref3.isDisabled,\n      _ref3$theme = _ref3.theme,\n      baseUnit = _ref3$theme.spacing.baseUnit,\n      colors = _ref3$theme.colors;\n  return {\n    alignSelf: 'stretch',\n    backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,\n    marginBottom: baseUnit * 2,\n    marginTop: baseUnit * 2,\n    width: 1\n  };\n};\n\nvar IndicatorSeparator = function IndicatorSeparator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('span', _extends({}, innerProps, {\n    className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('indicatorSeparator', props)), { 'indicator-separator': true }, className)\n  }));\n};\n\n// ==============================\n// Loading\n// ==============================\n\nvar keyframesName = 'react-select-loading-indicator';\n\nvar loadingIndicatorCSS = function loadingIndicatorCSS(_ref4) {\n  var isFocused = _ref4.isFocused,\n      size = _ref4.size,\n      _ref4$theme = _ref4.theme,\n      colors = _ref4$theme.colors,\n      baseUnit = _ref4$theme.spacing.baseUnit;\n  return {\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n    alignSelf: 'center',\n    fontSize: size,\n    lineHeight: 1,\n    marginRight: size,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n};\n\nvar LoadingDot = function LoadingDot(_ref5) {\n  var color = _ref5.color,\n      delay = _ref5.delay,\n      offset = _ref5.offset;\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('span', {\n    className: Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])({\n      animationDuration: '1s',\n      animationDelay: delay + 'ms',\n      animationIterationCount: 'infinite',\n      animationName: keyframesName,\n      animationTimingFunction: 'ease-in-out',\n      backgroundColor: color,\n      borderRadius: '1em',\n      display: 'inline-block',\n      marginLeft: offset ? '1em' : null,\n      height: '1em',\n      verticalAlign: 'top',\n      width: '1em'\n    })\n  });\n};\n\n// eslint-disable-next-line no-unused-expressions\nObject(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"b\" /* injectGlobal */])('@keyframes ', keyframesName, '{0%,80%,100%{opacity:0;}40%{opacity:1;}};');\n\nvar LoadingIndicator = function LoadingIndicator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isFocused = props.isFocused,\n      isRtl = props.isRtl,\n      colors = props.theme.colors;\n\n  var color = isFocused ? colors.neutral80 : colors.neutral20;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('loadingIndicator', props)), {\n        'indicator': true,\n        'loading-indicator': true\n      }, className)\n    }),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(LoadingDot, { color: color, delay: 0, offset: isRtl }),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(LoadingDot, { color: color, delay: 160, offset: true }),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(LoadingDot, { color: color, delay: 320, offset: !isRtl })\n  );\n};\nLoadingIndicator.defaultProps = { size: 4 };\n\nvar css$1 = function css$$1(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      _ref$theme = _ref.theme,\n      colors = _ref$theme.colors,\n      borderRadius = _ref$theme.borderRadius,\n      spacing = _ref$theme.spacing;\n  return {\n    alignItems: 'center',\n    backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,\n    borderColor: isDisabled ? colors.neutral10 : isFocused ? colors.primary : colors.neutral20,\n    borderRadius: borderRadius,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    boxShadow: isFocused ? '0 0 0 1px ' + colors.primary : null,\n    cursor: 'default',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    minHeight: spacing.controlHeight,\n    outline: '0 !important',\n    position: 'relative',\n    transition: 'all 100ms',\n\n    '&:hover': {\n      borderColor: isFocused ? colors.primary : colors.neutral30\n    }\n  };\n};\n\nvar Control = function Control(props) {\n  var children = props.children,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      className = props.className,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      ref: innerRef,\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('control', props)), {\n        'control': true,\n        'control--is-disabled': isDisabled,\n        'control--is-focused': isFocused\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar groupCSS = function groupCSS(_ref) {\n  var spacing = _ref.theme.spacing;\n  return {\n    paddingBottom: spacing.baseUnit * 2,\n    paddingTop: spacing.baseUnit * 2\n  };\n};\n\nvar Group = function Group(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      Heading = props.Heading,\n      headingProps = props.headingProps,\n      label = props.label,\n      theme = props.theme;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('group', props)), { 'group': true }, className)\n    },\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n      Heading,\n      _extends({}, headingProps, { theme: theme, getStyles: getStyles, cx: cx }),\n      label\n    ),\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n      'div',\n      null,\n      children\n    )\n  );\n};\n\nvar groupHeadingCSS = function groupHeadingCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    color: '#999',\n    cursor: 'default',\n    display: 'block',\n    fontSize: '75%',\n    fontWeight: '500',\n    marginBottom: '0.25em',\n    paddingLeft: spacing.baseUnit * 3,\n    paddingRight: spacing.baseUnit * 3,\n    textTransform: 'uppercase'\n  };\n};\n\nvar GroupHeading = function GroupHeading(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      cleanProps = objectWithoutProperties(props, ['className', 'cx', 'getStyles']);\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('div', _extends({\n    className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('groupHeading', props)), { 'group-heading': true }, className)\n  }, cleanProps));\n};\n\nvar inputCSS = function inputCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    margin: spacing.baseUnit / 2,\n    paddingBottom: spacing.baseUnit / 2,\n    paddingTop: spacing.baseUnit / 2,\n    visibility: isDisabled ? 'hidden' : 'visible',\n    color: colors.neutral80\n  };\n};\nvar inputStyle = function inputStyle(isHidden) {\n  return {\n    background: 0,\n    border: 0,\n    fontSize: 'inherit',\n    opacity: isHidden ? 0 : 1,\n    outline: 0,\n    padding: 0,\n    color: 'inherit'\n  };\n};\n\nvar Input = function Input(_ref2) {\n  var className = _ref2.className,\n      cx = _ref2.cx,\n      getStyles = _ref2.getStyles,\n      innerRef = _ref2.innerRef,\n      isHidden = _ref2.isHidden,\n      isDisabled = _ref2.isDisabled,\n      props = objectWithoutProperties(_ref2, ['className', 'cx', 'getStyles', 'innerRef', 'isHidden', 'isDisabled']);\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    {\n      className: Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('input', props))\n    },\n    __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_react_input_autosize___default.a, _extends({\n      className: cx(null, { 'input': true }, className),\n      inputRef: innerRef,\n      inputStyle: inputStyle(isHidden),\n      disabled: isDisabled\n    }, props))\n  );\n};\n\nvar multiValueCSS = function multiValueCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      borderRadius = _ref$theme.borderRadius,\n      colors = _ref$theme.colors;\n  return {\n    backgroundColor: colors.neutral10,\n    borderRadius: borderRadius / 2,\n    display: 'flex',\n    margin: spacing.baseUnit / 2,\n    minWidth: 0 // resolves flex/text-overflow bug\n  };\n};\n\nvar multiValueLabelCSS = function multiValueLabelCSS(_ref2) {\n  var _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      colors = _ref2$theme.colors,\n      cropWithEllipsis = _ref2.cropWithEllipsis;\n  return {\n    borderRadius: borderRadius / 2,\n    color: colors.neutral80,\n    fontSize: '85%',\n    overflow: 'hidden',\n    padding: 3,\n    paddingLeft: 6,\n    textOverflow: cropWithEllipsis ? 'ellipsis' : null,\n    whiteSpace: 'nowrap'\n  };\n};\n\nvar multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {\n  var _ref3$theme = _ref3.theme,\n      spacing = _ref3$theme.spacing,\n      borderRadius = _ref3$theme.borderRadius,\n      colors = _ref3$theme.colors,\n      isFocused = _ref3.isFocused;\n  return {\n    alignItems: 'center',\n    borderRadius: borderRadius / 2,\n    backgroundColor: isFocused && colors.dangerLight,\n    display: 'flex',\n    paddingLeft: spacing.baseUnit,\n    paddingRight: spacing.baseUnit,\n    ':hover': {\n      backgroundColor: colors.dangerLight,\n      color: colors.danger\n    }\n  };\n};\n\nvar MultiValueGeneric = function MultiValueGeneric(_ref4) {\n  var children = _ref4.children,\n      innerProps = _ref4.innerProps;\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    innerProps,\n    children\n  );\n};\n\nvar MultiValueContainer = MultiValueGeneric;\nvar MultiValueLabel = MultiValueGeneric;\n\nvar MultiValueRemove = function (_Component) {\n  inherits(MultiValueRemove, _Component);\n\n  function MultiValueRemove() {\n    classCallCheck(this, MultiValueRemove);\n    return possibleConstructorReturn(this, (MultiValueRemove.__proto__ || Object.getPrototypeOf(MultiValueRemove)).apply(this, arguments));\n  }\n\n  createClass(MultiValueRemove, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          innerProps = _props.innerProps;\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        'div',\n        innerProps,\n        children\n      );\n    }\n  }]);\n  return MultiValueRemove;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nMultiValueRemove.defaultProps = {\n  children: __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(CrossIcon, { size: 14 })\n};\n\nvar MultiValue = function (_Component2) {\n  inherits(MultiValue, _Component2);\n\n  function MultiValue() {\n    classCallCheck(this, MultiValue);\n    return possibleConstructorReturn(this, (MultiValue.__proto__ || Object.getPrototypeOf(MultiValue)).apply(this, arguments));\n  }\n\n  createClass(MultiValue, [{\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          className = _props2.className,\n          components = _props2.components,\n          cx = _props2.cx,\n          data = _props2.data,\n          getStyles = _props2.getStyles,\n          innerProps = _props2.innerProps,\n          isDisabled = _props2.isDisabled,\n          removeProps = _props2.removeProps,\n          selectProps = _props2.selectProps;\n      var Container = components.Container,\n          Label = components.Label,\n          Remove = components.Remove;\n\n\n      var containerInnerProps = _extends({\n        className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('multiValue', this.props)), {\n          'multi-value': true,\n          'multi-value--is-disabled': isDisabled\n        }, className)\n      }, innerProps);\n\n      var labelInnerProps = {\n        className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('multiValueLabel', this.props)), {\n          'multi-value__label': true\n        }, className)\n      };\n\n      var removeInnerProps = _extends({\n        className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('multiValueRemove', this.props)), {\n          'multi-value__remove': true\n        }, className)\n      }, removeProps);\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        Container,\n        {\n          data: data,\n          innerProps: containerInnerProps,\n          selectProps: selectProps\n        },\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          Label,\n          {\n            data: data,\n            innerProps: labelInnerProps,\n            selectProps: selectProps\n          },\n          children\n        ),\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Remove, {\n          data: data,\n          innerProps: removeInnerProps,\n          selectProps: selectProps\n        })\n      );\n    }\n  }]);\n  return MultiValue;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nMultiValue.defaultProps = {\n  cropWithEllipsis: true\n};\n\nvar optionCSS = function optionCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      isSelected = _ref.isSelected,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    backgroundColor: isSelected ? colors.primary : isFocused ? colors.primary25 : 'transparent',\n    color: isDisabled ? colors.neutral20 : isSelected ? colors.neutral0 : 'inherit',\n    cursor: 'default',\n    display: 'block',\n    fontSize: 'inherit',\n    padding: spacing.baseUnit * 2 + 'px ' + spacing.baseUnit * 3 + 'px',\n    width: '100%',\n    userSelect: 'none',\n    WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n\n    // provide some affordance on touch devices\n    ':active': {\n      backgroundColor: isSelected ? colors.primary : colors.primary50\n    }\n  };\n};\n\nvar Option = function Option(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      isSelected = props.isSelected,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      ref: innerRef,\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('option', props)), {\n        'option': true,\n        'option--is-disabled': isDisabled,\n        'option--is-focused': isFocused,\n        'option--is-selected': isSelected\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar placeholderCSS = function placeholderCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    color: colors.neutral50,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar Placeholder = function Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('placeholder', props)), {\n        'placeholder': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar css$2 = function css$$1(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    color: isDisabled ? colors.neutral40 : colors.neutral80,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    maxWidth: 'calc(100% - ' + spacing.baseUnit * 2 + 'px)',\n    overflow: 'hidden',\n    position: 'absolute',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar SingleValue = function SingleValue(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      innerProps = props.innerProps;\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_2_emotion__[\"a\" /* css */])(getStyles('singleValue', props)), {\n        'single-value': true,\n        'single-value--is-disabled': isDisabled\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar components = {\n  ClearIndicator: ClearIndicator,\n  Control: Control,\n  DropdownIndicator: DropdownIndicator,\n  DownChevron: DownChevron,\n  CrossIcon: CrossIcon,\n  Group: Group,\n  GroupHeading: GroupHeading,\n  IndicatorsContainer: IndicatorsContainer,\n  IndicatorSeparator: IndicatorSeparator,\n  Input: Input,\n  LoadingIndicator: LoadingIndicator,\n  Menu: Menu,\n  MenuList: MenuList,\n  MenuPortal: MenuPortal,\n  LoadingMessage: LoadingMessage,\n  NoOptionsMessage: NoOptionsMessage,\n  MultiValue: MultiValue,\n  MultiValueContainer: MultiValueContainer,\n  MultiValueLabel: MultiValueLabel,\n  MultiValueRemove: MultiValueRemove,\n  Option: Option,\n  Placeholder: Placeholder,\n  SelectContainer: SelectContainer,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar defaultComponents = function defaultComponents(props) {\n  return _extends({}, components, props.components);\n};\n\nvar defaultStyles = {\n  clearIndicator: clearIndicatorCSS,\n  container: containerCSS,\n  control: css$1,\n  dropdownIndicator: dropdownIndicatorCSS,\n  group: groupCSS,\n  groupHeading: groupHeadingCSS,\n  indicatorsContainer: indicatorsContainerCSS,\n  indicatorSeparator: indicatorSeparatorCSS,\n  input: inputCSS,\n  loadingIndicator: loadingIndicatorCSS,\n  loadingMessage: loadingMessageCSS,\n  menu: menuCSS,\n  menuList: menuListCSS,\n  menuPortal: menuPortalCSS,\n  multiValue: multiValueCSS,\n  multiValueLabel: multiValueLabelCSS,\n  multiValueRemove: multiValueRemoveCSS,\n  noOptionsMessage: noOptionsMessageCSS,\n  option: optionCSS,\n  placeholder: placeholderCSS,\n  singleValue: css$2,\n  valueContainer: valueContainerCSS\n};\n\n// Merge Utility\n// Allows consumers to extend a base Select with additional styles\n\nfunction mergeStyles(source) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // initialize with source styles\n  var styles = _extends({}, source);\n\n  // massage in target styles\n  Object.keys(target).forEach(function (key) {\n    if (source[key]) {\n      styles[key] = function (rsCss, props) {\n        return target[key](source[key](rsCss, props), props);\n      };\n    } else {\n      styles[key] = target[key];\n    }\n  });\n\n  return styles;\n}\n\nvar colors = {\n  primary: '#2684FF',\n  primary75: '#4C9AFF',\n  primary50: '#B2D4FF',\n  primary25: '#DEEBFF',\n\n  danger: '#DE350B',\n  dangerLight: '#FFBDAD',\n\n  neutral0: 'hsl(0, 0%, 100%)',\n  neutral5: 'hsl(0, 0%, 95%)',\n  neutral10: 'hsl(0, 0%, 90%)',\n  neutral20: 'hsl(0, 0%, 80%)',\n  neutral30: 'hsl(0, 0%, 70%)',\n  neutral40: 'hsl(0, 0%, 60%)',\n  neutral50: 'hsl(0, 0%, 50%)',\n  neutral60: 'hsl(0, 0%, 40%)',\n  neutral70: 'hsl(0, 0%, 30%)',\n  neutral80: 'hsl(0, 0%, 20%)',\n  neutral90: 'hsl(0, 0%, 10%)'\n};\n\nvar borderRadius = 4;\nvar baseUnit = 4; /* Used to calculate consistent margin/padding on elements */\nvar controlHeight = 38; /* The minimum height of the control */\nvar menuGutter = baseUnit * 2; /* The amount of space between the control and menu */\n\nvar spacing = {\n  baseUnit: baseUnit,\n  controlHeight: controlHeight,\n  menuGutter: menuGutter\n};\n\nvar defaultTheme = {\n  borderRadius: borderRadius,\n  colors: colors,\n  spacing: spacing\n};\n\nvar defaultProps = {\n  backspaceRemovesValue: true,\n  blurInputOnSelect: isTouchCapable(),\n  captureMenuScroll: !isTouchCapable(),\n  closeMenuOnSelect: true,\n  closeMenuOnScroll: false,\n  components: {},\n  controlShouldRenderValue: true,\n  escapeClearsValue: false,\n  filterOption: createFilter(),\n  formatGroupLabel: formatGroupLabel,\n  getOptionLabel: getOptionLabel,\n  getOptionValue: getOptionValue,\n  isDisabled: false,\n  isLoading: false,\n  isMulti: false,\n  isRtl: false,\n  isSearchable: true,\n  isOptionDisabled: isOptionDisabled,\n  loadingMessage: function loadingMessage() {\n    return 'Loading...';\n  },\n  maxMenuHeight: 300,\n  minMenuHeight: 140,\n  menuIsOpen: false,\n  menuPlacement: 'bottom',\n  menuPosition: 'absolute',\n  menuShouldBlockScroll: false,\n  menuShouldScrollIntoView: !isMobileDevice(),\n  noOptionsMessage: function noOptionsMessage() {\n    return 'No options';\n  },\n  openMenuOnFocus: false,\n  openMenuOnClick: true,\n  options: [],\n  pageSize: 5,\n  placeholder: 'Select...',\n  screenReaderStatus: function screenReaderStatus(_ref) {\n    var count = _ref.count;\n    return count + ' result' + (count !== 1 ? 's' : '') + ' available';\n  },\n  styles: {},\n  tabIndex: '0',\n  tabSelectsValue: true\n};\n\nvar instanceId = 1;\n\nvar Select = function (_Component) {\n  inherits(Select, _Component);\n\n  // Lifecycle\n  // ------------------------------\n\n  // Refs\n  // ------------------------------\n\n  // Misc. Instance Properties\n  // ------------------------------\n\n  function Select(props) {\n    classCallCheck(this, Select);\n\n    var _this = possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = props.value;\n\n    _this.cacheComponents = Object(__WEBPACK_IMPORTED_MODULE_6_memoize_one__[\"a\" /* default */])(_this.cacheComponents, exportedEqual).bind(_this);\n    _this.cacheComponents(props.components);\n    _this.instancePrefix = 'react-select-' + (_this.props.instanceId || ++instanceId);\n\n    var selectValue = cleanValue(value);\n    var menuOptions = _this.buildMenuOptions(props, selectValue);\n\n    _this.state.menuOptions = menuOptions;\n    _this.state.selectValue = selectValue;\n    return _this;\n  } // TODO\n\n\n  createClass(Select, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startListeningComposition();\n      this.startListeningToTouch();\n\n      if (this.props.closeMenuOnScroll && document && document.addEventListener) {\n        // Listen to all scroll events, and filter them out inside of 'onScroll'\n        document.addEventListener('scroll', this.onScroll, true);\n      }\n\n      if (this.props.autoFocus) {\n        this.focusInput();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          options = _props.options,\n          value = _props.value,\n          inputValue = _props.inputValue;\n      // re-cache custom components\n\n      this.cacheComponents(nextProps.components);\n      // rebuild the menu options\n      if (nextProps.value !== value || nextProps.options !== options || nextProps.inputValue !== inputValue) {\n        var _selectValue = cleanValue(nextProps.value);\n        var _menuOptions = this.buildMenuOptions(nextProps, _selectValue);\n        var _focusedValue = this.getNextFocusedValue(_selectValue);\n        var _focusedOption = this.getNextFocusedOption(_menuOptions.focusable);\n        this.setState({ menuOptions: _menuOptions, selectValue: _selectValue, focusedOption: _focusedOption, focusedValue: _focusedValue });\n      }\n      // some updates should toggle the state of the input visibility\n      if (this.inputIsHiddenAfterUpdate != null) {\n        this.setState({\n          inputIsHidden: this.inputIsHiddenAfterUpdate\n        });\n        delete this.inputIsHiddenAfterUpdate;\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props2 = this.props,\n          isDisabled = _props2.isDisabled,\n          menuIsOpen = _props2.menuIsOpen;\n      var isFocused = this.state.isFocused;\n\n\n      if (\n      // ensure focus is restored correctly when the control becomes enabled\n      isFocused && !isDisabled && prevProps.isDisabled ||\n      // ensure focus is on the Input when the menu opens\n      isFocused && menuIsOpen && !prevProps.menuIsOpen) {\n        this.focusInput();\n      }\n\n      // scroll the focused option into view if necessary\n      if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {\n        scrollIntoView(this.menuListRef, this.focusedOptionRef);\n      }\n      this.scrollToFocusedOptionOnUpdate = false;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopListeningComposition();\n      this.stopListeningToTouch();\n      document.removeEventListener('scroll', this.onScroll, true);\n    }\n  }, {\n    key: 'onMenuOpen',\n\n    // ==============================\n    // Consumer Handlers\n    // ==============================\n\n    value: function onMenuOpen() {\n      this.props.onMenuOpen();\n    }\n  }, {\n    key: 'onMenuClose',\n    value: function onMenuClose() {\n      var _props3 = this.props,\n          isSearchable = _props3.isSearchable,\n          isMulti = _props3.isMulti;\n\n      this.announceAriaLiveContext({\n        event: 'input',\n        context: { isSearchable: isSearchable, isMulti: isMulti }\n      });\n      this.onInputChange('', { action: 'menu-close' });\n      this.props.onMenuClose();\n    }\n  }, {\n    key: 'onInputChange',\n    value: function onInputChange(newValue, actionMeta) {\n      this.props.onInputChange(newValue, actionMeta);\n    }\n\n    // ==============================\n    // Methods\n    // ==============================\n\n  }, {\n    key: 'focusInput',\n    value: function focusInput() {\n      if (!this.inputRef) return;\n      this.inputRef.focus();\n    }\n  }, {\n    key: 'blurInput',\n    value: function blurInput() {\n      if (!this.inputRef) return;\n      this.inputRef.blur();\n    }\n\n    // aliased for consumers\n\n  }, {\n    key: 'openMenu',\n    value: function openMenu(focusOption) {\n      var _state = this.state,\n          menuOptions = _state.menuOptions,\n          selectValue = _state.selectValue;\n      var isMulti = this.props.isMulti;\n\n      var openAtIndex = focusOption === 'first' ? 0 : menuOptions.focusable.length - 1;\n\n      if (!isMulti) {\n        var selectedIndex = menuOptions.focusable.indexOf(selectValue[0]);\n        if (selectedIndex > -1) {\n          openAtIndex = selectedIndex;\n        }\n      }\n\n      this.scrollToFocusedOptionOnUpdate = true;\n      this.inputIsHiddenAfterUpdate = false;\n\n      this.onMenuOpen();\n      this.setState({\n        focusedValue: null,\n        focusedOption: menuOptions.focusable[openAtIndex]\n      });\n\n      this.announceAriaLiveContext({ event: 'menu' });\n    }\n  }, {\n    key: 'focusValue',\n    value: function focusValue(direction) {\n      var _props4 = this.props,\n          isMulti = _props4.isMulti,\n          isSearchable = _props4.isSearchable;\n      var _state2 = this.state,\n          selectValue = _state2.selectValue,\n          focusedValue = _state2.focusedValue;\n\n      // Only multiselects support value focusing\n\n      if (!isMulti) return;\n\n      this.setState({\n        focusedOption: null\n      });\n\n      var focusedIndex = selectValue.indexOf(focusedValue);\n      if (!focusedValue) {\n        focusedIndex = -1;\n        this.announceAriaLiveContext({ event: 'value' });\n      }\n\n      var lastIndex = selectValue.length - 1;\n      var nextFocus = -1;\n      if (!selectValue.length) return;\n\n      switch (direction) {\n        case 'previous':\n          if (focusedIndex === 0) {\n            // don't cycle from the start to the end\n            nextFocus = 0;\n          } else if (focusedIndex === -1) {\n            // if nothing is focused, focus the last value first\n            nextFocus = lastIndex;\n          } else {\n            nextFocus = focusedIndex - 1;\n          }\n          break;\n        case 'next':\n          if (focusedIndex > -1 && focusedIndex < lastIndex) {\n            nextFocus = focusedIndex + 1;\n          }\n          break;\n      }\n\n      if (nextFocus === -1) {\n        this.announceAriaLiveContext({\n          event: 'input',\n          context: { isSearchable: isSearchable, isMulti: isMulti }\n        });\n      }\n\n      this.setState({\n        inputIsHidden: nextFocus === -1 ? false : true,\n        focusedValue: selectValue[nextFocus]\n      });\n    }\n  }, {\n    key: 'focusOption',\n    value: function focusOption() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'first';\n      var pageSize = this.props.pageSize;\n      var _state3 = this.state,\n          focusedOption = _state3.focusedOption,\n          menuOptions = _state3.menuOptions;\n\n      var options = menuOptions.focusable;\n\n      if (!options.length) return;\n      var nextFocus = 0; // handles 'first'\n      var focusedIndex = options.indexOf(focusedOption);\n      if (!focusedOption) {\n        focusedIndex = -1;\n        this.announceAriaLiveContext({ event: 'menu' });\n      }\n\n      if (direction === 'up') {\n        nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1;\n      } else if (direction === 'down') {\n        nextFocus = (focusedIndex + 1) % options.length;\n      } else if (direction === 'pageup') {\n        nextFocus = focusedIndex - pageSize;\n        if (nextFocus < 0) nextFocus = 0;\n      } else if (direction === 'pagedown') {\n        nextFocus = focusedIndex + pageSize;\n        if (nextFocus > options.length - 1) nextFocus = options.length - 1;\n      } else if (direction === 'last') {\n        nextFocus = options.length - 1;\n      }\n      this.scrollToFocusedOptionOnUpdate = true;\n      this.setState({\n        focusedOption: options[nextFocus],\n        focusedValue: null\n      });\n    }\n  }, {\n    key: 'getTheme',\n\n\n    // ==============================\n    // Getters\n    // ==============================\n\n    value: function getTheme() {\n      // Use the default theme if there are no customizations.\n      if (!this.props.theme) {\n        return defaultTheme;\n      }\n      // If the theme prop is a function, assume the function\n      // knows how to merge the passed-in default theme with\n      // its own modifications.\n      if (typeof this.props.theme === 'function') {\n        return this.props.theme(defaultTheme);\n      }\n      // Otherwise, if a plain theme object was passed in,\n      // overlay it with the default theme.\n      return _extends({}, defaultTheme, this.props.theme);\n    }\n  }, {\n    key: 'getCommonProps',\n    value: function getCommonProps() {\n      var clearValue = this.clearValue,\n          getStyles = this.getStyles,\n          setValue = this.setValue,\n          selectOption = this.selectOption,\n          props = this.props;\n      var classNamePrefix = props.classNamePrefix,\n          isMulti = props.isMulti,\n          isRtl = props.isRtl,\n          options = props.options;\n      var selectValue = this.state.selectValue;\n\n      var hasValue = this.hasValue();\n      var getValue = function getValue() {\n        return selectValue;\n      };\n      var cxPrefix = classNamePrefix;\n\n      var cx = classNames.bind(null, cxPrefix);\n      return {\n        cx: cx,\n        clearValue: clearValue,\n        getStyles: getStyles,\n        getValue: getValue,\n        hasValue: hasValue,\n        isMulti: isMulti,\n        isRtl: isRtl,\n        options: options,\n        selectOption: selectOption,\n        setValue: setValue,\n        selectProps: props,\n        theme: this.getTheme()\n      };\n    }\n  }, {\n    key: 'getNextFocusedValue',\n    value: function getNextFocusedValue(nextSelectValue) {\n      if (this.clearFocusValueOnUpdate) {\n        this.clearFocusValueOnUpdate = false;\n        return null;\n      }\n      var _state4 = this.state,\n          focusedValue = _state4.focusedValue,\n          lastSelectValue = _state4.selectValue;\n\n      var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);\n      if (lastFocusedIndex > -1) {\n        var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);\n        if (nextFocusedIndex > -1) {\n          // the focused value is still in the selectValue, return it\n          return focusedValue;\n        } else if (lastFocusedIndex < nextSelectValue.length) {\n          // the focusedValue is not present in the next selectValue array by\n          // reference, so return the new value at the same index\n          return nextSelectValue[lastFocusedIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'getNextFocusedOption',\n    value: function getNextFocusedOption(options) {\n      var lastFocusedOption = this.state.focusedOption;\n\n      return lastFocusedOption && options.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options[0];\n    }\n\n    // ==============================\n    // Helpers\n    // ==============================\n\n  }, {\n    key: 'hasValue',\n    value: function hasValue() {\n      var selectValue = this.state.selectValue;\n\n      return selectValue.length > 0;\n    }\n  }, {\n    key: 'hasOptions',\n    value: function hasOptions() {\n      return !!this.state.menuOptions.render.length;\n    }\n  }, {\n    key: 'countOptions',\n    value: function countOptions() {\n      return this.state.menuOptions.focusable.length;\n    }\n  }, {\n    key: 'isClearable',\n    value: function isClearable() {\n      var _props5 = this.props,\n          isClearable = _props5.isClearable,\n          isMulti = _props5.isMulti;\n\n      // single select, by default, IS NOT clearable\n      // multi select, by default, IS clearable\n\n      if (isClearable === undefined) return isMulti;\n\n      return isClearable;\n    }\n  }, {\n    key: 'isOptionDisabled',\n    value: function isOptionDisabled$$1(option, selectValue) {\n      return typeof this.props.isOptionDisabled === 'function' ? this.props.isOptionDisabled(option, selectValue) : false;\n    }\n  }, {\n    key: 'isOptionSelected',\n    value: function isOptionSelected(option, selectValue) {\n      var _this2 = this;\n\n      if (selectValue.indexOf(option) > -1) return true;\n      if (typeof this.props.isOptionSelected === 'function') {\n        return this.props.isOptionSelected(option, selectValue);\n      }\n      var candidate = this.getOptionValue(option);\n      return selectValue.some(function (i) {\n        return _this2.getOptionValue(i) === candidate;\n      });\n    }\n  }, {\n    key: 'filterOption',\n    value: function filterOption(option, inputValue) {\n      return this.props.filterOption ? this.props.filterOption(option, inputValue) : true;\n    }\n  }, {\n    key: 'formatOptionLabel',\n    value: function formatOptionLabel(data, context) {\n      if (typeof this.props.formatOptionLabel === 'function') {\n        var _inputValue = this.props.inputValue;\n        var _selectValue2 = this.state.selectValue;\n\n        return this.props.formatOptionLabel(data, {\n          context: context,\n          inputValue: _inputValue,\n          selectValue: _selectValue2\n        });\n      } else {\n        return this.getOptionLabel(data);\n      }\n    }\n  }, {\n    key: 'formatGroupLabel',\n    value: function formatGroupLabel$$1(data) {\n      return this.props.formatGroupLabel(data);\n    }\n\n    // ==============================\n    // Mouse Handlers\n    // ==============================\n\n  }, {\n    key: 'startListeningComposition',\n\n\n    // ==============================\n    // Composition Handlers\n    // ==============================\n\n    value: function startListeningComposition() {\n      if (document && document.addEventListener) {\n        document.addEventListener('compositionstart', this.onCompositionStart, false);\n        document.addEventListener('compositionend', this.onCompositionEnd, false);\n      }\n    }\n  }, {\n    key: 'stopListeningComposition',\n    value: function stopListeningComposition() {\n      if (document && document.removeEventListener) {\n        document.removeEventListener('compositionstart', this.onCompositionStart);\n        document.removeEventListener('compositionend', this.onCompositionEnd);\n      }\n    }\n  }, {\n    key: 'startListeningToTouch',\n\n\n    // ==============================\n    // Touch Handlers\n    // ==============================\n\n    value: function startListeningToTouch() {\n      if (document && document.addEventListener) {\n        document.addEventListener('touchstart', this.onTouchStart, false);\n        document.addEventListener('touchmove', this.onTouchMove, false);\n        document.addEventListener('touchend', this.onTouchEnd, false);\n      }\n    }\n  }, {\n    key: 'stopListeningToTouch',\n    value: function stopListeningToTouch() {\n      if (document && document.removeEventListener) {\n        document.removeEventListener('touchstart', this.onTouchStart);\n        document.removeEventListener('touchmove', this.onTouchMove);\n        document.removeEventListener('touchend', this.onTouchEnd);\n      }\n    }\n\n    // ==============================\n    // Focus Handlers\n    // ==============================\n\n    // ==============================\n    // Keyboard Handlers\n    // ==============================\n\n  }, {\n    key: 'buildMenuOptions',\n\n\n    // ==============================\n    // Menu Options\n    // ==============================\n\n    value: function buildMenuOptions(props, selectValue) {\n      var _this3 = this;\n\n      var _props$inputValue = props.inputValue,\n          inputValue = _props$inputValue === undefined ? '' : _props$inputValue,\n          options = props.options;\n\n\n      var toOption = function toOption(option, id) {\n        var isDisabled = _this3.isOptionDisabled(option, selectValue);\n        var isSelected = _this3.isOptionSelected(option, selectValue);\n        var label = _this3.getOptionLabel(option);\n        var value = _this3.getOptionValue(option);\n\n        if (_this3.shouldHideSelectedOptions() && isSelected || !_this3.filterOption({ label: label, value: value, data: option }, inputValue)) {\n          return;\n        }\n\n        var onHover = isDisabled ? undefined : function () {\n          return _this3.onOptionHover(option);\n        };\n        var onSelect = isDisabled ? undefined : function () {\n          return _this3.selectOption(option);\n        };\n        var optionId = _this3.getElementId('option') + '-' + id;\n\n        return {\n          innerProps: {\n            id: optionId,\n            onClick: onSelect,\n            onMouseMove: onHover,\n            onMouseOver: onHover,\n            role: 'option',\n            tabIndex: -1\n          },\n          data: option,\n          isDisabled: isDisabled,\n          isSelected: isSelected,\n          key: optionId,\n          label: label,\n          type: 'option',\n          value: value\n        };\n      };\n\n      return options.reduce(function (acc, item, itemIndex) {\n        if (item.options) {\n          // TODO needs a tidier implementation\n          if (!_this3.hasGroups) _this3.hasGroups = true;\n\n          var items = item.options;\n\n          var children = items.map(function (child, i) {\n            var option = toOption(child, itemIndex + '-' + i);\n            if (option && !option.isDisabled) acc.focusable.push(child);\n            return option;\n          }).filter(Boolean);\n          if (children.length) {\n            var groupId = _this3.getElementId('group') + '-' + itemIndex;\n            acc.render.push({\n              type: 'group',\n              key: groupId,\n              data: item,\n              options: children\n            });\n          }\n        } else {\n          var option = toOption(item, '' + itemIndex);\n          if (option) {\n            acc.render.push(option);\n            if (!option.isDisabled) acc.focusable.push(item);\n          }\n        }\n        return acc;\n      }, { render: [], focusable: [] });\n    }\n\n    // ==============================\n    // Renderers\n    // ==============================\n\n  }, {\n    key: 'constructAriaLiveMessage',\n    value: function constructAriaLiveMessage() {\n      var _state5 = this.state,\n          ariaLiveContext = _state5.ariaLiveContext,\n          selectValue = _state5.selectValue,\n          focusedValue = _state5.focusedValue,\n          focusedOption = _state5.focusedOption;\n      var _props6 = this.props,\n          options = _props6.options,\n          menuIsOpen = _props6.menuIsOpen,\n          inputValue = _props6.inputValue,\n          screenReaderStatus = _props6.screenReaderStatus;\n\n      // An aria live message representing the currently focused value in the select.\n\n      var focusedValueMsg = focusedValue ? valueFocusAriaMessage({\n        focusedValue: focusedValue,\n        getOptionLabel: this.getOptionLabel,\n        selectValue: selectValue\n      }) : '';\n      // An aria live message representing the currently focused option in the select.\n      var focusedOptionMsg = focusedOption && menuIsOpen ? optionFocusAriaMessage({\n        focusedOption: focusedOption,\n        getOptionLabel: this.getOptionLabel,\n        options: options\n      }) : '';\n      // An aria live message representing the set of focusable results and current searchterm/inputvalue.\n      var resultsMsg = resultsAriaMessage({\n        inputValue: inputValue,\n        screenReaderMessage: screenReaderStatus({ count: this.countOptions() })\n      });\n\n      return focusedValueMsg + ' ' + focusedOptionMsg + ' ' + resultsMsg + ' ' + ariaLiveContext;\n    }\n  }, {\n    key: 'renderInput',\n    value: function renderInput() {\n      var _props7 = this.props,\n          isDisabled = _props7.isDisabled,\n          isSearchable = _props7.isSearchable,\n          inputId = _props7.inputId,\n          inputValue = _props7.inputValue,\n          tabIndex = _props7.tabIndex;\n      var Input = this.components.Input;\n      var inputIsHidden = this.state.inputIsHidden;\n\n\n      var id = inputId || this.getElementId('input');\n\n      if (!isSearchable) {\n        // use a dummy input to maintain focus/blur functionality\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(DummyInput, {\n          id: id,\n          innerRef: this.getInputRef,\n          onBlur: this.onInputBlur,\n          onChange: noop,\n          onFocus: this.onInputFocus,\n          readOnly: true,\n          tabIndex: tabIndex,\n          value: ''\n        });\n      }\n\n      // aria attributes makes the JSX \"noisy\", separated for clarity\n      var ariaAttributes = {\n        'aria-autocomplete': 'list',\n        'aria-label': this.props['aria-label'],\n        'aria-labelledby': this.props['aria-labelledby']\n      };\n\n      var _commonProps = this.commonProps,\n          cx = _commonProps.cx,\n          theme = _commonProps.theme;\n\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Input, _extends({\n        autoCapitalize: 'none',\n        autoComplete: 'off',\n        autoCorrect: 'off',\n        cx: cx,\n        getStyles: this.getStyles,\n        id: id,\n        innerRef: this.getInputRef,\n        isDisabled: isDisabled,\n        isHidden: inputIsHidden,\n        onBlur: this.onInputBlur,\n        onChange: this.handleInputChange,\n        onFocus: this.onInputFocus,\n        spellCheck: 'false',\n        tabIndex: tabIndex,\n        theme: theme,\n        type: 'text',\n        value: inputValue\n      }, ariaAttributes));\n    }\n  }, {\n    key: 'renderPlaceholderOrValue',\n    value: function renderPlaceholderOrValue() {\n      var _this4 = this;\n\n      var _components = this.components,\n          MultiValue = _components.MultiValue,\n          MultiValueContainer = _components.MultiValueContainer,\n          MultiValueLabel = _components.MultiValueLabel,\n          MultiValueRemove = _components.MultiValueRemove,\n          SingleValue = _components.SingleValue,\n          Placeholder = _components.Placeholder;\n      var commonProps = this.commonProps;\n      var _props8 = this.props,\n          controlShouldRenderValue = _props8.controlShouldRenderValue,\n          isDisabled = _props8.isDisabled,\n          isMulti = _props8.isMulti,\n          inputValue = _props8.inputValue,\n          placeholder = _props8.placeholder;\n      var _state6 = this.state,\n          selectValue = _state6.selectValue,\n          focusedValue = _state6.focusedValue;\n\n\n      if (!this.hasValue() || !controlShouldRenderValue) {\n        return inputValue ? null : __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          Placeholder,\n          _extends({}, commonProps, { key: 'placeholder', isDisabled: isDisabled }),\n          placeholder\n        );\n      }\n\n      if (isMulti) {\n        var selectValues = selectValue.map(function (opt) {\n          var isFocused = opt === focusedValue;\n          return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            MultiValue,\n            _extends({}, commonProps, {\n              components: {\n                Container: MultiValueContainer,\n                Label: MultiValueLabel,\n                Remove: MultiValueRemove\n              },\n              isFocused: isFocused,\n              isDisabled: isDisabled,\n              key: _this4.getOptionValue(opt),\n              removeProps: {\n                onClick: function onClick() {\n                  return _this4.removeValue(opt);\n                },\n                onTouchEnd: function onTouchEnd() {\n                  return _this4.removeValue(opt);\n                },\n                onMouseDown: function onMouseDown(e) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              },\n              data: opt\n            }),\n            _this4.formatOptionLabel(opt, 'value')\n          );\n        });\n        return selectValues;\n      }\n\n      if (inputValue) {\n        return null;\n      }\n\n      var singleValue = selectValue[0];\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        SingleValue,\n        _extends({}, commonProps, { data: singleValue, isDisabled: isDisabled }),\n        this.formatOptionLabel(singleValue, 'value')\n      );\n    }\n  }, {\n    key: 'renderClearIndicator',\n    value: function renderClearIndicator() {\n      var ClearIndicator = this.components.ClearIndicator;\n      var commonProps = this.commonProps;\n      var _props9 = this.props,\n          isDisabled = _props9.isDisabled,\n          isLoading = _props9.isLoading;\n      var isFocused = this.state.isFocused;\n\n\n      if (!this.isClearable() || !ClearIndicator || isDisabled || !this.hasValue() || isLoading) {\n        return null;\n      }\n\n      var innerProps = {\n        onMouseDown: this.onClearIndicatorMouseDown,\n        onTouchEnd: this.onClearIndicatorTouchEnd,\n        'aria-hidden': 'true'\n      };\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(ClearIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderLoadingIndicator',\n    value: function renderLoadingIndicator() {\n      var LoadingIndicator = this.components.LoadingIndicator;\n      var commonProps = this.commonProps;\n      var _props10 = this.props,\n          isDisabled = _props10.isDisabled,\n          isLoading = _props10.isLoading;\n      var isFocused = this.state.isFocused;\n\n\n      if (!LoadingIndicator || !isLoading) return null;\n\n      var innerProps = { 'aria-hidden': 'true' };\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(LoadingIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderIndicatorSeparator',\n    value: function renderIndicatorSeparator() {\n      var _components2 = this.components,\n          DropdownIndicator = _components2.DropdownIndicator,\n          IndicatorSeparator = _components2.IndicatorSeparator;\n\n      // separator doesn't make sense without the dropdown indicator\n\n      if (!DropdownIndicator || !IndicatorSeparator) return null;\n\n      var commonProps = this.commonProps;\n      var isDisabled = this.props.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(IndicatorSeparator, _extends({}, commonProps, {\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderDropdownIndicator',\n    value: function renderDropdownIndicator() {\n      var DropdownIndicator = this.components.DropdownIndicator;\n\n      if (!DropdownIndicator) return null;\n      var commonProps = this.commonProps;\n      var isDisabled = this.props.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      var innerProps = {\n        onMouseDown: this.onDropdownIndicatorMouseDown,\n        onTouchEnd: this.onDropdownIndicatorTouchEnd,\n        'aria-hidden': 'true'\n      };\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(DropdownIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderMenu',\n    value: function renderMenu() {\n      var _this5 = this;\n\n      var _components3 = this.components,\n          Group = _components3.Group,\n          GroupHeading = _components3.GroupHeading,\n          Menu$$1 = _components3.Menu,\n          MenuList$$1 = _components3.MenuList,\n          MenuPortal$$1 = _components3.MenuPortal,\n          LoadingMessage$$1 = _components3.LoadingMessage,\n          NoOptionsMessage$$1 = _components3.NoOptionsMessage,\n          Option = _components3.Option;\n      var commonProps = this.commonProps;\n      var _state7 = this.state,\n          focusedOption = _state7.focusedOption,\n          menuOptions = _state7.menuOptions;\n      var _props11 = this.props,\n          captureMenuScroll = _props11.captureMenuScroll,\n          inputValue = _props11.inputValue,\n          isLoading = _props11.isLoading,\n          loadingMessage = _props11.loadingMessage,\n          minMenuHeight = _props11.minMenuHeight,\n          maxMenuHeight = _props11.maxMenuHeight,\n          menuIsOpen = _props11.menuIsOpen,\n          menuPlacement = _props11.menuPlacement,\n          menuPosition = _props11.menuPosition,\n          menuPortalTarget = _props11.menuPortalTarget,\n          menuShouldBlockScroll = _props11.menuShouldBlockScroll,\n          menuShouldScrollIntoView = _props11.menuShouldScrollIntoView,\n          noOptionsMessage = _props11.noOptionsMessage,\n          onMenuScrollToTop = _props11.onMenuScrollToTop,\n          onMenuScrollToBottom = _props11.onMenuScrollToBottom;\n\n\n      if (!menuIsOpen) return null;\n\n      // TODO: Internal Option Type here\n      var render = function render(props) {\n        // for performance, the menu options in state aren't changed when the\n        // focused option changes so we calculate additional props based on that\n        var isFocused = focusedOption === props.data;\n        props.innerRef = isFocused ? _this5.getFocusedOptionRef : undefined;\n\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          Option,\n          _extends({}, commonProps, props, { isFocused: isFocused }),\n          _this5.formatOptionLabel(props.data, 'menu')\n        );\n      };\n\n      var menuUI = void 0;\n\n      if (this.hasOptions()) {\n        menuUI = menuOptions.render.map(function (item) {\n          if (item.type === 'group') {\n            var type = item.type,\n                group = objectWithoutProperties(item, ['type']);\n\n            var headingId = item.key + '-heading';\n\n            return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n              Group,\n              _extends({}, commonProps, group, {\n                Heading: GroupHeading,\n                headingProps: {\n                  id: headingId\n                },\n                label: _this5.formatGroupLabel(item.data)\n              }),\n              item.options.map(function (option) {\n                return render(option);\n              })\n            );\n          } else if (item.type === 'option') {\n            return render(item);\n          }\n        });\n      } else if (isLoading) {\n        var message = loadingMessage({ inputValue: inputValue });\n        if (message === null) return null;\n        menuUI = __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          LoadingMessage$$1,\n          commonProps,\n          message\n        );\n      } else {\n        var _message = noOptionsMessage({ inputValue: inputValue });\n        if (_message === null) return null;\n        menuUI = __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          NoOptionsMessage$$1,\n          commonProps,\n          _message\n        );\n      }\n      var menuPlacementProps = {\n        minMenuHeight: minMenuHeight,\n        maxMenuHeight: maxMenuHeight,\n        menuPlacement: menuPlacement,\n        menuPosition: menuPosition,\n        menuShouldScrollIntoView: menuShouldScrollIntoView\n      };\n\n      var menuElement = __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        MenuPlacer,\n        _extends({}, commonProps, menuPlacementProps),\n        function (_ref2) {\n          var ref = _ref2.ref,\n              _ref2$placerProps = _ref2.placerProps,\n              placement = _ref2$placerProps.placement,\n              maxHeight = _ref2$placerProps.maxHeight;\n          return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            Menu$$1,\n            _extends({}, commonProps, menuPlacementProps, {\n              innerRef: ref,\n              innerProps: {\n                onMouseDown: _this5.onMenuMouseDown,\n                onMouseMove: _this5.onMenuMouseMove\n              },\n              isLoading: isLoading,\n              placement: placement\n            }),\n            __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n              ScrollCaptorSwitch,\n              {\n                isEnabled: captureMenuScroll,\n                onTopArrive: onMenuScrollToTop,\n                onBottomArrive: onMenuScrollToBottom\n              },\n              __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n                ScrollBlock,\n                { isEnabled: menuShouldBlockScroll },\n                __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n                  MenuList$$1,\n                  _extends({}, commonProps, {\n                    innerRef: _this5.getMenuListRef,\n                    isLoading: isLoading,\n                    maxHeight: maxHeight\n                  }),\n                  menuUI\n                )\n              )\n            )\n          );\n        }\n      );\n\n      // positioning behaviour is almost identical for portalled and fixed,\n      // so we use the same component. the actual portalling logic is forked\n      // within the component based on `menuPosition`\n      return menuPortalTarget || menuPosition === 'fixed' ? __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        MenuPortal$$1,\n        _extends({}, commonProps, {\n          appendTo: menuPortalTarget,\n          controlElement: this.controlRef,\n          menuPlacement: menuPlacement,\n          menuPosition: menuPosition\n        }),\n        menuElement\n      ) : menuElement;\n    }\n  }, {\n    key: 'renderFormField',\n    value: function renderFormField() {\n      var _this6 = this;\n\n      var _props12 = this.props,\n          delimiter = _props12.delimiter,\n          isDisabled = _props12.isDisabled,\n          isMulti = _props12.isMulti,\n          name = _props12.name;\n      var selectValue = this.state.selectValue;\n\n\n      if (!name || isDisabled) return;\n\n      if (isMulti) {\n        if (delimiter) {\n          var _value = selectValue.map(function (opt) {\n            return _this6.getOptionValue(opt);\n          }).join(delimiter);\n          return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('input', { name: name, type: 'hidden', value: _value });\n        } else {\n          var input = selectValue.length > 0 ? selectValue.map(function (opt, i) {\n            return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('input', {\n              key: 'i-' + i,\n              name: name,\n              type: 'hidden',\n              value: _this6.getOptionValue(opt)\n            });\n          }) : __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('input', { name: name, type: 'hidden' });\n\n          return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            'div',\n            null,\n            input\n          );\n        }\n      } else {\n        var _value2 = selectValue[0] ? this.getOptionValue(selectValue[0]) : '';\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement('input', { name: name, type: 'hidden', value: _value2 });\n      }\n    }\n  }, {\n    key: 'renderLiveRegion',\n    value: function renderLiveRegion() {\n      if (!this.state.isFocused) return null;\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        A11yText,\n        { 'aria-live': 'assertive' },\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          'p',\n          { id: 'aria-selection-event' },\n          '\\xA0',\n          this.state.ariaLiveSelection\n        ),\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          'p',\n          { id: 'aria-context' },\n          '\\xA0',\n          this.constructAriaLiveMessage()\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _components4 = this.components,\n          Control = _components4.Control,\n          IndicatorsContainer = _components4.IndicatorsContainer,\n          SelectContainer = _components4.SelectContainer,\n          ValueContainer = _components4.ValueContainer;\n      var _props13 = this.props,\n          className = _props13.className,\n          id = _props13.id,\n          isDisabled = _props13.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      var commonProps = this.commonProps = this.getCommonProps();\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        SelectContainer,\n        _extends({}, commonProps, {\n          className: className,\n          innerProps: {\n            id: id,\n            onKeyDown: this.onKeyDown\n          },\n          isDisabled: isDisabled,\n          isFocused: isFocused\n        }),\n        this.renderLiveRegion(),\n        __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n          Control,\n          _extends({}, commonProps, {\n            innerRef: this.getControlRef,\n            innerProps: {\n              onMouseDown: this.onControlMouseDown,\n              onTouchEnd: this.onControlTouchEnd\n            },\n            isDisabled: isDisabled,\n            isFocused: isFocused\n          }),\n          __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            ValueContainer,\n            _extends({}, commonProps, { isDisabled: isDisabled }),\n            this.renderPlaceholderOrValue(),\n            this.renderInput()\n          ),\n          __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            IndicatorsContainer,\n            _extends({}, commonProps, { isDisabled: isDisabled }),\n            this.renderClearIndicator(),\n            this.renderLoadingIndicator(),\n            this.renderIndicatorSeparator(),\n            this.renderDropdownIndicator()\n          )\n        ),\n        this.renderMenu(),\n        this.renderFormField()\n      );\n    }\n  }]);\n  return Select;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\nSelect.defaultProps = defaultProps;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this7 = this;\n\n  this.state = {\n    ariaLiveSelection: '',\n    ariaLiveContext: '',\n    focusedOption: null,\n    focusedValue: null,\n    inputIsHidden: false,\n    isFocused: false,\n    isComposing: false,\n    menuOptions: { render: [], focusable: [] },\n    selectValue: []\n  };\n  this.blockOptionHover = false;\n  this.clearFocusValueOnUpdate = false;\n  this.hasGroups = false;\n  this.initialTouchX = 0;\n  this.initialTouchY = 0;\n  this.instancePrefix = '';\n  this.openAfterFocus = false;\n  this.scrollToFocusedOptionOnUpdate = false;\n  this.controlRef = null;\n\n  this.getControlRef = function (ref) {\n    _this7.controlRef = ref;\n  };\n\n  this.focusedOptionRef = null;\n\n  this.getFocusedOptionRef = function (ref) {\n    _this7.focusedOptionRef = ref;\n  };\n\n  this.menuListRef = null;\n\n  this.getMenuListRef = function (ref) {\n    _this7.menuListRef = ref;\n  };\n\n  this.inputRef = null;\n\n  this.getInputRef = function (ref) {\n    _this7.inputRef = ref;\n  };\n\n  this.cacheComponents = function (components$$1) {\n    _this7.components = defaultComponents({ components: components$$1 });\n  };\n\n  this.focus = this.focusInput;\n  this.blur = this.blurInput;\n\n  this.setValue = function (newValue) {\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'set-value';\n    var option = arguments[2];\n    var _props14 = _this7.props,\n        closeMenuOnSelect = _props14.closeMenuOnSelect,\n        isMulti = _props14.isMulti,\n        onChange = _props14.onChange;\n\n    _this7.onInputChange('', { action: 'set-value' });\n    if (closeMenuOnSelect) {\n      _this7.inputIsHiddenAfterUpdate = !isMulti;\n      _this7.onMenuClose();\n    }\n    // when the select value should change, we should reset focusedValue\n    _this7.clearFocusValueOnUpdate = true;\n    onChange(newValue, { action: action, option: option });\n  };\n\n  this.selectOption = function (newValue) {\n    var _props15 = _this7.props,\n        blurInputOnSelect = _props15.blurInputOnSelect,\n        isMulti = _props15.isMulti;\n\n\n    if (isMulti) {\n      var _selectValue3 = _this7.state.selectValue;\n\n      if (_this7.isOptionSelected(newValue, _selectValue3)) {\n        var candidate = _this7.getOptionValue(newValue);\n        _this7.setValue(_selectValue3.filter(function (i) {\n          return _this7.getOptionValue(i) !== candidate;\n        }), 'deselect-option', newValue);\n        _this7.announceAriaLiveSelection({\n          event: 'deselect-option',\n          context: { value: _this7.getOptionLabel(newValue) }\n        });\n      } else {\n        _this7.setValue([].concat(toConsumableArray(_selectValue3), [newValue]), 'select-option', newValue);\n        _this7.announceAriaLiveSelection({\n          event: 'select-option',\n          context: { value: _this7.getOptionLabel(newValue) }\n        });\n      }\n    } else {\n      _this7.setValue(newValue, 'select-option');\n      _this7.announceAriaLiveSelection({\n        event: 'select-option',\n        context: { value: _this7.getOptionLabel(newValue) }\n      });\n    }\n\n    if (blurInputOnSelect) {\n      _this7.blurInput();\n    }\n  };\n\n  this.removeValue = function (removedValue) {\n    var onChange = _this7.props.onChange;\n    var selectValue = _this7.state.selectValue;\n\n    var candidate = _this7.getOptionValue(removedValue);\n    onChange(selectValue.filter(function (i) {\n      return _this7.getOptionValue(i) !== candidate;\n    }), {\n      action: 'remove-value',\n      removedValue: removedValue\n    });\n    _this7.announceAriaLiveSelection({\n      event: 'remove-value',\n      context: {\n        value: removedValue ? _this7.getOptionLabel(removedValue) : undefined\n      }\n    });\n    _this7.focusInput();\n  };\n\n  this.clearValue = function () {\n    var _props16 = _this7.props,\n        isMulti = _props16.isMulti,\n        onChange = _props16.onChange;\n\n    onChange(isMulti ? [] : null, { action: 'clear' });\n  };\n\n  this.popValue = function () {\n    var onChange = _this7.props.onChange;\n    var selectValue = _this7.state.selectValue;\n\n    var lastSelectedValue = selectValue[selectValue.length - 1];\n    _this7.announceAriaLiveSelection({\n      event: 'pop-value',\n      context: {\n        value: lastSelectedValue ? _this7.getOptionLabel(lastSelectedValue) : undefined\n      }\n    });\n    onChange(selectValue.slice(0, selectValue.length - 1), {\n      action: 'pop-value',\n      removedValue: lastSelectedValue\n    });\n  };\n\n  this.getOptionLabel = function (data) {\n    return _this7.props.getOptionLabel(data);\n  };\n\n  this.getOptionValue = function (data) {\n    return _this7.props.getOptionValue(data);\n  };\n\n  this.getStyles = function (key, props) {\n    var base = defaultStyles[key](props);\n    base.boxSizing = 'border-box';\n    var custom = _this7.props.styles[key];\n    return custom ? custom(base, props) : base;\n  };\n\n  this.getElementId = function (element) {\n    return _this7.instancePrefix + '-' + element;\n  };\n\n  this.getActiveDescendentId = function () {\n    var menuIsOpen = _this7.props.menuIsOpen;\n    var _state8 = _this7.state,\n        menuOptions = _state8.menuOptions,\n        focusedOption = _state8.focusedOption;\n\n\n    if (!focusedOption || !menuIsOpen) return undefined;\n\n    var index = menuOptions.focusable.indexOf(focusedOption);\n    var option = menuOptions.render[index];\n\n    return option && option.key;\n  };\n\n  this.announceAriaLiveSelection = function (_ref3) {\n    var event = _ref3.event,\n        context = _ref3.context;\n\n    _this7.setState({\n      ariaLiveSelection: valueEventAriaMessage(event, context)\n    });\n  };\n\n  this.announceAriaLiveContext = function (_ref4) {\n    var event = _ref4.event,\n        context = _ref4.context;\n\n    _this7.setState({\n      ariaLiveContext: instructionsAriaMessage(event, _extends({}, context, {\n        label: _this7.props['aria-label']\n      }))\n    });\n  };\n\n  this.onMenuMouseDown = function (event) {\n    if (event.button !== 0) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    _this7.focusInput();\n  };\n\n  this.onMenuMouseMove = function (event) {\n    _this7.blockOptionHover = false;\n  };\n\n  this.onControlMouseDown = function (event) {\n    var openMenuOnClick = _this7.props.openMenuOnClick;\n\n    if (!_this7.state.isFocused) {\n      if (openMenuOnClick) {\n        _this7.openAfterFocus = true;\n      }\n      _this7.focusInput();\n    } else if (!_this7.props.menuIsOpen) {\n      _this7.openMenu('first');\n    } else {\n      _this7.onMenuClose();\n    }\n    // $FlowFixMe HTMLElement type does not have tagName property\n    if (event.target.tagName !== 'INPUT') {\n      event.preventDefault();\n    }\n  };\n\n  this.onDropdownIndicatorMouseDown = function (event) {\n    // ignore mouse events that weren't triggered by the primary button\n    if (event && event.type === 'mousedown' && event.button !== 0) {\n      return;\n    }\n    if (_this7.props.isDisabled) return;\n    var _props17 = _this7.props,\n        isMulti = _props17.isMulti,\n        menuIsOpen = _props17.menuIsOpen;\n\n    _this7.focusInput();\n    if (menuIsOpen) {\n      _this7.inputIsHiddenAfterUpdate = !isMulti;\n      _this7.onMenuClose();\n    } else {\n      _this7.openMenu('first');\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  this.onClearIndicatorMouseDown = function (event) {\n    // ignore mouse events that weren't triggered by the primary button\n    if (event && event.type === 'mousedown' && event.button !== 0) {\n      return;\n    }\n    _this7.clearValue();\n    event.stopPropagation();\n    _this7.openAfterFocus = false;\n    setTimeout(function () {\n      return _this7.focusInput();\n    });\n  };\n\n  this.onScroll = function (event) {\n    if (typeof _this7.props.closeMenuOnScroll === 'boolean') {\n      if (event.target instanceof HTMLElement && isDocumentElement(event.target)) {\n        _this7.props.onMenuClose();\n      }\n    } else if (typeof _this7.props.closeMenuOnScroll === 'function') {\n      if (_this7.props.closeMenuOnScroll(event)) {\n        _this7.props.onMenuClose();\n      }\n    }\n  };\n\n  this.onCompositionStart = function () {\n    _this7.setState({\n      isComposing: true\n    });\n  };\n\n  this.onCompositionEnd = function () {\n    _this7.setState({\n      isComposing: false\n    });\n  };\n\n  this.onTouchStart = function (_ref5) {\n    var _ref5$touches = slicedToArray(_ref5.touches, 1),\n        touch = _ref5$touches[0];\n\n    _this7.initialTouchX = touch.clientX;\n    _this7.initialTouchY = touch.clientY;\n    _this7.userIsDragging = false;\n  };\n\n  this.onTouchMove = function (_ref6) {\n    var _ref6$touches = slicedToArray(_ref6.touches, 1),\n        touch = _ref6$touches[0];\n\n    var deltaX = Math.abs(touch.clientX - _this7.initialTouchX);\n    var deltaY = Math.abs(touch.clientY - _this7.initialTouchY);\n    var moveThreshold = 5;\n\n    _this7.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;\n  };\n\n  this.onTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    // type cast the EventTarget\n    var target = event.target;\n\n    // close the menu if the user taps outside\n    if (_this7.controlRef && !_this7.controlRef.contains(target) && _this7.menuListRef && !_this7.menuListRef.contains(target)) {\n      _this7.blurInput();\n    }\n\n    // reset move vars\n    _this7.initialTouchX = 0;\n    _this7.initialTouchY = 0;\n  };\n\n  this.onControlTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onControlMouseDown(event);\n  };\n\n  this.onClearIndicatorTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onClearIndicatorMouseDown(event);\n  };\n\n  this.onDropdownIndicatorTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onDropdownIndicatorMouseDown(event);\n  };\n\n  this.handleInputChange = function (event) {\n    var inputValue = event.currentTarget.value;\n    _this7.inputIsHiddenAfterUpdate = false;\n    _this7.onInputChange(inputValue, { action: 'input-change' });\n    _this7.onMenuOpen();\n  };\n\n  this.onInputFocus = function (event) {\n    var _props18 = _this7.props,\n        isSearchable = _props18.isSearchable,\n        isMulti = _props18.isMulti;\n\n    if (_this7.props.onFocus) {\n      _this7.props.onFocus(event);\n    }\n    _this7.inputIsHiddenAfterUpdate = false;\n    _this7.announceAriaLiveContext({\n      event: 'input',\n      context: { isSearchable: isSearchable, isMulti: isMulti }\n    });\n    _this7.setState({\n      isFocused: true\n    });\n    if (_this7.openAfterFocus || _this7.props.openMenuOnFocus) {\n      _this7.openMenu('first');\n    }\n    _this7.openAfterFocus = false;\n  };\n\n  this.onInputBlur = function (event) {\n    if (_this7.props.onBlur) {\n      _this7.props.onBlur(event);\n    }\n    _this7.onInputChange('', { action: 'input-blur' });\n    _this7.onMenuClose();\n    _this7.setState({\n      focusedValue: null,\n      isFocused: false\n    });\n  };\n\n  this.onOptionHover = function (focusedOption) {\n    if (_this7.blockOptionHover || _this7.state.focusedOption === focusedOption) {\n      return;\n    }\n    _this7.setState({ focusedOption: focusedOption });\n  };\n\n  this.shouldHideSelectedOptions = function () {\n    var _props19 = _this7.props,\n        hideSelectedOptions = _props19.hideSelectedOptions,\n        isMulti = _props19.isMulti;\n\n    if (hideSelectedOptions === undefined) return isMulti;\n    return hideSelectedOptions;\n  };\n\n  this.onKeyDown = function (event) {\n    var _props20 = _this7.props,\n        isMulti = _props20.isMulti,\n        backspaceRemovesValue = _props20.backspaceRemovesValue,\n        escapeClearsValue = _props20.escapeClearsValue,\n        inputValue = _props20.inputValue,\n        isClearable = _props20.isClearable,\n        isDisabled = _props20.isDisabled,\n        menuIsOpen = _props20.menuIsOpen,\n        onKeyDown = _props20.onKeyDown,\n        tabSelectsValue = _props20.tabSelectsValue,\n        openMenuOnFocus = _props20.openMenuOnFocus;\n    var _state9 = _this7.state,\n        isComposing = _state9.isComposing,\n        focusedOption = _state9.focusedOption,\n        focusedValue = _state9.focusedValue,\n        selectValue = _state9.selectValue;\n\n\n    if (isDisabled) return;\n\n    if (typeof onKeyDown === 'function') {\n      onKeyDown(event);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    // Block option hover events when the user has just pressed a key\n    _this7.blockOptionHover = true;\n    switch (event.key) {\n      case 'ArrowLeft':\n        if (!isMulti || inputValue) return;\n        _this7.focusValue('previous');\n        break;\n      case 'ArrowRight':\n        if (!isMulti || inputValue) return;\n        _this7.focusValue('next');\n        break;\n      case 'Backspace':\n        if (inputValue) return;\n        if (focusedValue) {\n          _this7.removeValue(focusedValue);\n        } else {\n          if (!backspaceRemovesValue) return;\n          _this7.popValue();\n        }\n        break;\n      case 'Tab':\n        if (event.shiftKey || !menuIsOpen || !tabSelectsValue || !focusedOption ||\n        // don't capture the event if the menu opens on focus and the focused\n        // option is already selected; it breaks the flow of navigation\n        openMenuOnFocus && _this7.isOptionSelected(focusedOption, selectValue)) {\n          return;\n        }\n        _this7.selectOption(focusedOption);\n        break;\n      case 'Enter':\n        if (menuIsOpen) {\n          if (!focusedOption) return;\n          if (isComposing) return;\n          _this7.selectOption(focusedOption);\n        } else {\n          _this7.focusOption('first');\n        }\n        break;\n      case 'Escape':\n        if (menuIsOpen) {\n          _this7.inputIsHiddenAfterUpdate = false;\n          _this7.onInputChange('', { action: 'menu-close' });\n          _this7.onMenuClose();\n        } else if (isClearable && escapeClearsValue) {\n          _this7.clearValue();\n        }\n        break;\n      case ' ':\n        // space\n        if (inputValue) {\n          return;\n        }\n        if (!menuIsOpen) {\n          _this7.openMenu('first');\n          break;\n        }\n        if (!focusedOption) return;\n        _this7.selectOption(focusedOption);\n        break;\n      case 'ArrowUp':\n        if (menuIsOpen) {\n          _this7.focusOption('up');\n        } else {\n          _this7.openMenu('last');\n        }\n        break;\n      case 'ArrowDown':\n        if (menuIsOpen) {\n          _this7.focusOption('down');\n        } else {\n          _this7.openMenu('first');\n        }\n        break;\n      case 'PageUp':\n        if (!menuIsOpen) return;\n        _this7.focusOption('pageup');\n        break;\n      case 'PageDown':\n        if (!menuIsOpen) return;\n        _this7.focusOption('pagedown');\n        break;\n      case 'Home':\n        if (!menuIsOpen) return;\n        _this7.focusOption('first');\n        break;\n      case 'End':\n        if (!menuIsOpen) return;\n        _this7.focusOption('last');\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n  };\n};\n\nvar manageState = function manageState(SelectComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_Component) {\n    inherits(StateManager, _Component);\n\n    function StateManager() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      classCallCheck(this, StateManager);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = StateManager.__proto__ || Object.getPrototypeOf(StateManager)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        inputValue: _this.props.inputValue !== undefined ? _this.props.inputValue : _this.props.defaultInputValue,\n        menuIsOpen: _this.props.menuIsOpen !== undefined ? _this.props.menuIsOpen : _this.props.defaultMenuIsOpen,\n        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue\n      }, _this.onChange = function (value, actionMeta) {\n        _this.callProp('onChange', value, actionMeta);\n        _this.setState({ value: value });\n      }, _this.onInputChange = function (value, actionMeta) {\n        // TODO: for backwards compatibility, we allow the prop to return a new\n        // value, but now inputValue is a controllable prop we probably shouldn't\n        var newValue = _this.callProp('onInputChange', value, actionMeta);\n        _this.setState({\n          inputValue: newValue !== undefined ? newValue : value\n        });\n      }, _this.onMenuOpen = function () {\n        _this.callProp('onMenuOpen');\n        _this.setState({ menuIsOpen: true });\n      }, _this.onMenuClose = function () {\n        _this.callProp('onMenuClose');\n        _this.setState({ menuIsOpen: false });\n      }, _temp), possibleConstructorReturn(_this, _ret);\n    }\n\n    createClass(StateManager, [{\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'getProp',\n      value: function getProp(key) {\n        return this.props[key] !== undefined ? this.props[key] : this.state[key];\n      }\n    }, {\n      key: 'callProp',\n      value: function callProp(name) {\n        if (typeof this.props[name] === 'function') {\n          var _props;\n\n          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          return (_props = this.props)[name].apply(_props, toConsumableArray(args));\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(SelectComponent, _extends({}, this.props, {\n          ref: function ref(_ref2) {\n            _this2.select = _ref2;\n          },\n          inputValue: this.getProp('inputValue'),\n          menuIsOpen: this.getProp('menuIsOpen'),\n          onChange: this.onChange,\n          onInputChange: this.onInputChange,\n          onMenuClose: this.onMenuClose,\n          onMenuOpen: this.onMenuOpen,\n          value: this.getProp('value')\n        }));\n      }\n    }]);\n    return StateManager;\n  }(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]), _class.defaultProps = {\n    defaultInputValue: '',\n    defaultMenuIsOpen: false,\n    defaultValue: null\n  }, _temp2;\n};\n\nvar defaultProps$1 = {\n  cacheOptions: false,\n  defaultOptions: false\n};\n\nvar makeAsyncSelect = function makeAsyncSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(Async, _Component);\n\n    function Async(props) {\n      classCallCheck(this, Async);\n\n      var _this = possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this));\n\n      _this.mounted = false;\n      _this.optionsCache = {};\n\n      _this.handleInputChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            cacheOptions = _this$props.cacheOptions,\n            onInputChange = _this$props.onInputChange;\n        // TODO\n\n        var inputValue = handleInputChange(newValue, actionMeta, onInputChange);\n        if (!inputValue) {\n          delete _this.lastRequest;\n          _this.setState({\n            inputValue: '',\n            loadedInputValue: '',\n            loadedOptions: [],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n          return;\n        }\n        if (cacheOptions && _this.optionsCache[inputValue]) {\n          _this.setState({\n            inputValue: inputValue,\n            loadedInputValue: inputValue,\n            loadedOptions: _this.optionsCache[inputValue],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n        } else {\n          var request = _this.lastRequest = {};\n          _this.setState({\n            inputValue: inputValue,\n            isLoading: true,\n            passEmptyOptions: !_this.state.loadedInputValue\n          }, function () {\n            _this.loadOptions(inputValue, function (options) {\n              if (!_this.mounted) return;\n              if (options) {\n                _this.optionsCache[inputValue] = options;\n              }\n              if (request !== _this.lastRequest) return;\n              delete _this.lastRequest;\n              _this.setState({\n                isLoading: false,\n                loadedInputValue: inputValue,\n                loadedOptions: options || [],\n                passEmptyOptions: false\n              });\n            });\n          });\n        }\n        return inputValue;\n      };\n\n      _this.state = {\n        defaultOptions: Array.isArray(props.defaultOptions) ? props.defaultOptions : undefined,\n        inputValue: '',\n        isLoading: props.defaultOptions === true ? true : false,\n        loadedOptions: [],\n        passEmptyOptions: false\n      };\n      return _this;\n    }\n\n    createClass(Async, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.mounted = true;\n        var defaultOptions = this.props.defaultOptions;\n\n        if (defaultOptions === true) {\n          this.loadOptions('', function (options) {\n            if (!_this2.mounted) return;\n            var isLoading = !!_this2.lastRequest;\n            _this2.setState({ defaultOptions: options || [], isLoading: isLoading });\n          });\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        // if the cacheOptions prop changes, clear the cache\n        if (nextProps.cacheOptions !== this.props.cacheOptions) {\n          this.optionsCache = {};\n        }\n        if (nextProps.defaultOptions !== this.props.defaultOptions) {\n          this.setState({\n            defaultOptions: Array.isArray(nextProps.defaultOptions) ? nextProps.defaultOptions : undefined\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.mounted = false;\n      }\n    }, {\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'loadOptions',\n      value: function loadOptions(inputValue, callback) {\n        var loadOptions = this.props.loadOptions;\n\n        if (!loadOptions) return callback();\n        var loader = loadOptions(inputValue, callback);\n        if (loader && typeof loader.then === 'function') {\n          loader.then(callback, function () {\n            return callback();\n          });\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            loadOptions = _props.loadOptions,\n            props = objectWithoutProperties(_props, ['loadOptions']);\n        var _state = this.state,\n            defaultOptions = _state.defaultOptions,\n            inputValue = _state.inputValue,\n            isLoading = _state.isLoading,\n            loadedInputValue = _state.loadedInputValue,\n            loadedOptions = _state.loadedOptions,\n            passEmptyOptions = _state.passEmptyOptions;\n\n        var options = passEmptyOptions ? [] : inputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n        return (\n          // $FlowFixMe\n          __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(SelectComponent, _extends({}, props, {\n            filterOption: this.props.filterOption || null,\n            ref: function ref(_ref) {\n              _this3.select = _ref;\n            },\n            options: options,\n            isLoading: isLoading,\n            onInputChange: this.handleInputChange\n          }))\n        );\n      }\n    }]);\n    return Async;\n  }(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]), _class.defaultProps = defaultProps$1, _temp;\n};\nvar Async = makeAsyncSelect(manageState(Select));\n\nvar compareOption = function compareOption(inputValue, option) {\n  var candidate = inputValue.toLowerCase();\n  return option.value.toLowerCase() === candidate || option.label.toLowerCase() === candidate;\n};\n\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return 'Create \"' + inputValue + '\"';\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  }\n};\n\nvar defaultProps$2 = _extends({\n  allowCreateWhileLoading: false,\n  createOptionPosition: 'last'\n}, builtins);\n\nvar makeCreatableSelect = function makeCreatableSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(Creatable, _Component);\n\n    function Creatable(props) {\n      classCallCheck(this, Creatable);\n\n      var _this = possibleConstructorReturn(this, (Creatable.__proto__ || Object.getPrototypeOf(Creatable)).call(this, props));\n\n      _this.onChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            getNewOptionData = _this$props.getNewOptionData,\n            inputValue = _this$props.inputValue,\n            isMulti = _this$props.isMulti,\n            onChange = _this$props.onChange,\n            onCreateOption = _this$props.onCreateOption,\n            value = _this$props.value;\n\n        if (actionMeta.action !== 'select-option') {\n          return onChange(newValue, actionMeta);\n        }\n        var newOption = _this.state.newOption;\n\n        var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n\n        if (valueArray[valueArray.length - 1] === newOption) {\n          if (onCreateOption) onCreateOption(inputValue);else {\n            var newOptionData = getNewOptionData(inputValue, inputValue);\n            var newActionMeta = { action: 'create-option' };\n            if (isMulti) {\n              onChange([].concat(toConsumableArray(cleanValue(value)), [newOptionData]), newActionMeta);\n            } else {\n              onChange(newOptionData, newActionMeta);\n            }\n          }\n          return;\n        }\n        onChange(newValue, actionMeta);\n      };\n\n      var options = props.options || [];\n      _this.state = {\n        newOption: undefined,\n        options: options\n      };\n      return _this;\n    }\n\n    createClass(Creatable, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var allowCreateWhileLoading = nextProps.allowCreateWhileLoading,\n            createOptionPosition = nextProps.createOptionPosition,\n            formatCreateLabel = nextProps.formatCreateLabel,\n            getNewOptionData = nextProps.getNewOptionData,\n            inputValue = nextProps.inputValue,\n            isLoading = nextProps.isLoading,\n            isValidNewOption = nextProps.isValidNewOption,\n            value = nextProps.value;\n\n        var options = nextProps.options || [];\n        var newOption = this.state.newOption;\n\n        if (isValidNewOption(inputValue, cleanValue(value), options)) {\n          newOption = getNewOptionData(inputValue, formatCreateLabel(inputValue));\n        } else {\n          newOption = undefined;\n        }\n        this.setState({\n          newOption: newOption,\n          options: (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(toConsumableArray(options)) : [].concat(toConsumableArray(options), [newOption]) : options\n        });\n      }\n    }, {\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var props = objectWithoutProperties(this.props, []);\n        var options = this.state.options;\n\n        return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(SelectComponent, _extends({}, props, {\n          ref: function ref(_ref) {\n            _this2.select = _ref;\n          },\n          options: options,\n          onChange: this.onChange\n        }));\n      }\n    }]);\n    return Creatable;\n  }(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]), _class.defaultProps = defaultProps$2, _temp;\n};\nvar Creatable = manageState(makeCreatableSelect(Select));\n\nvar AsyncCreatable = makeAsyncSelect(manageState(makeCreatableSelect(Select)));\n\n// ==============================\n// Fade Transition\n// ==============================\n\nvar Fade = function Fade(_ref) {\n  var Tag = _ref.component,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === undefined ? 1 : _ref$duration,\n      inProp = _ref.in,\n      onExited = _ref.onExited,\n      props = objectWithoutProperties(_ref, ['component', 'duration', 'in', 'onExited']);\n\n  var transition = {\n    entering: { opacity: 0 },\n    entered: { opacity: 1, transition: 'opacity ' + duration + 'ms' },\n    exiting: { opacity: 0 },\n    exited: { opacity: 0 }\n  };\n\n  return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n    __WEBPACK_IMPORTED_MODULE_7_react_transition_group__[\"Transition\"],\n    { mountOnEnter: true, unmountOnExit: true, 'in': inProp, timeout: duration },\n    function (state) {\n      var innerProps = {\n        style: _extends({}, transition[state])\n      };\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Tag, _extends({ innerProps: innerProps }, props));\n    }\n  );\n};\nvar collapseDuration = 260;\n\n// wrap each MultiValue with a collapse transition; decreases width until\n// finally removing from DOM\nvar Collapse = function (_Component) {\n  inherits(Collapse, _Component);\n\n  function Collapse() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Collapse);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref2 = Collapse.__proto__ || Object.getPrototypeOf(Collapse)).call.apply(_ref2, [this].concat(args))), _this), _this.duration = collapseDuration, _this.state = { width: 'auto' }, _this.transition = {\n      exiting: { width: 0, transition: 'width ' + _this.duration + 'ms ease-out' },\n      exited: { width: 0 }\n    }, _this.getWidth = function (ref) {\n      if (ref && isNaN(_this.state.width)) {\n        // cannot use `offsetWidth` because it is rounded\n        var _ref$getBoundingClien = ref.getBoundingClientRect(),\n            _width = _ref$getBoundingClien.width;\n\n        _this.setState({ width: _width });\n      }\n    }, _this.getStyle = function (width) {\n      return {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        width: width\n      };\n    }, _this.getTransition = function (state) {\n      return _this.transition[state];\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // width must be calculated; cannot transition from `undefined` to `number`\n\n\n  // get base styles\n\n\n  // get transition styles\n\n\n  createClass(Collapse, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          inProp = _props.in;\n      var width = this.state.width;\n\n\n      return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n        __WEBPACK_IMPORTED_MODULE_7_react_transition_group__[\"Transition\"],\n        {\n          enter: false,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          'in': inProp,\n          timeout: this.duration\n        },\n        function (state) {\n          var style = _extends({}, _this2.getStyle(width), _this2.getTransition(state));\n          return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n            'div',\n            { ref: _this2.getWidth, style: style },\n            children\n          );\n        }\n      );\n    }\n  }]);\n  return Collapse;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]);\n\n// strip transition props off before spreading onto select component\n// note we need to be explicit about innerRef for flow\nvar AnimatedInput = function AnimatedInput(WrappedComponent) {\n  return function (_ref) {\n    var inProp = _ref.in,\n        onExited = _ref.onExited,\n        appear = _ref.appear,\n        enter = _ref.enter,\n        exit = _ref.exit,\n        innerRef = _ref.innerRef,\n        props = objectWithoutProperties(_ref, ['in', 'onExited', 'appear', 'enter', 'exit', 'innerRef']);\n    return (\n      // $FlowFixMe\n      __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(WrappedComponent, _extends({ innerRef: innerRef }, props))\n    );\n  };\n};\n\n// strip transition props off before spreading onto actual component\n\n\nvar AnimatedMultiValue = function AnimatedMultiValue(WrappedComponent) {\n  return function (_ref) {\n    var inProp = _ref.in,\n        onExited = _ref.onExited,\n        props = objectWithoutProperties(_ref, ['in', 'onExited']);\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(\n      Collapse,\n      { 'in': inProp, onExited: onExited },\n      __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(WrappedComponent, _extends({ cropWithEllipsis: inProp }, props))\n    );\n  };\n};\n\n// fade in when last multi-value removed, otherwise instant\nvar AnimatedPlaceholder = function AnimatedPlaceholder(WrappedComponent) {\n  return function (props) {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Fade, _extends({\n      component: WrappedComponent,\n      duration: props.isMulti ? collapseDuration : 1\n    }, props));\n  };\n};\n\n// instant fade; all transition-group children must be transitions\n\nvar AnimatedSingleValue = function AnimatedSingleValue(WrappedComponent) {\n  return function (props) {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(Fade, _extends({ component: WrappedComponent }, props));\n  };\n};\n\n// make ValueContainer a transition group\nvar AnimatedValueContainer = function AnimatedValueContainer(WrappedComponent) {\n  return function (props) {\n    return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7_react_transition_group__[\"TransitionGroup\"], _extends({ component: WrappedComponent }, props));\n  };\n};\n\nvar makeAnimated = function makeAnimated(externalComponents) {\n  var components$$1 = defaultComponents({ components: externalComponents });\n  var Input = components$$1.Input,\n      MultiValue = components$$1.MultiValue,\n      Placeholder = components$$1.Placeholder,\n      SingleValue = components$$1.SingleValue,\n      ValueContainer = components$$1.ValueContainer,\n      rest = objectWithoutProperties(components$$1, ['Input', 'MultiValue', 'Placeholder', 'SingleValue', 'ValueContainer']);\n\n  return _extends({\n    Input: AnimatedInput(Input),\n    MultiValue: AnimatedMultiValue(MultiValue),\n    Placeholder: AnimatedPlaceholder(Placeholder),\n    SingleValue: AnimatedSingleValue(SingleValue),\n    ValueContainer: AnimatedValueContainer(ValueContainer)\n  }, rest);\n};\n\nvar AnimatedComponents = makeAnimated();\n\nvar Input$1 = AnimatedComponents.Input;\nvar MultiValue$1 = AnimatedComponents.MultiValue;\nvar Placeholder$1 = AnimatedComponents.Placeholder;\nvar SingleValue$1 = AnimatedComponents.SingleValue;\nvar ValueContainer$1 = AnimatedComponents.ValueContainer;\n\nvar index = Object(__WEBPACK_IMPORTED_MODULE_6_memoize_one__[\"a\" /* default */])(makeAnimated, exportedEqual);\n\nvar index$1 = manageState(Select);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (index$1);\n\n\n\n/***/ }),\n\n/***/ 6041:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export flush */\n/* unused harmony export hydrate */\n/* unused harmony export cx */\n/* unused harmony export merge */\n/* unused harmony export getRegisteredStyles */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return injectGlobal; });\n/* unused harmony export keyframes */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return css; });\n/* unused harmony export sheet */\n/* unused harmony export caches */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_create_emotion__ = __webpack_require__(6042);\n\n\nvar context = typeof global !== 'undefined' ? global : {};\n\nvar _createEmotion = Object(__WEBPACK_IMPORTED_MODULE_0_create_emotion__[\"a\" /* default */])(context),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    caches = _createEmotion.caches;\n\n\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(31)))\n\n/***/ }),\n\n/***/ 6042:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__emotion_memoize__ = __webpack_require__(6043);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__emotion_unitless__ = __webpack_require__(6044);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__emotion_hash__ = __webpack_require__(6045);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__emotion_stylis__ = __webpack_require__(6046);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet__ = __webpack_require__(6047);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet__);\n\n\n\n\n\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar processStyleName = Object(__WEBPACK_IMPORTED_MODULE_0__emotion_memoize__[\"a\" /* default */])(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  if (__WEBPACK_IMPORTED_MODULE_1__emotion_unitless__[\"a\" /* default */][key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (false) {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'function':\n        if (false) {\n          console.error('Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\\n' + 'Please call the function before passing it to cx.');\n        }\n\n        toAdd = classnames([arg()]);\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\nvar isBrowser = typeof document !== 'undefined';\n\n/*\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n- 'polyfills' on server side\n\n// usage\n\nimport StyleSheet from 'glamor/lib/sheet'\nlet styleSheet = new StyleSheet()\n\nstyleSheet.inject()\n- 'injects' the stylesheet into the page (or into memory if on server)\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction makeStyleTag(opts) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', opts.key || '');\n\n  if (opts.nonce !== undefined) {\n    tag.setAttribute('nonce', opts.nonce);\n  }\n\n  tag.appendChild(document.createTextNode('')) // $FlowFixMe\n  ;\n  (opts.container !== undefined ? opts.container : document.head).appendChild(tag);\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = \"production\" === 'production'; // the big drawback here is that the css won't be editable in devtools\n\n    this.tags = [];\n    this.ctr = 0;\n    this.opts = options;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.inject = function inject() {\n    if (this.injected) {\n      throw new Error('already injected!');\n    }\n\n    this.tags[0] = makeStyleTag(this.opts);\n    this.injected = true;\n  };\n\n  _proto.speedy = function speedy(bool) {\n    if (this.ctr !== 0) {\n      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})\n      throw new Error(\"cannot change speedy now\");\n    }\n\n    this.isSpeedy = !!bool;\n  };\n\n  _proto.insert = function insert(rule, sourceMap) {\n    // this is the ultrafast version, works across browsers\n    if (this.isSpeedy) {\n      var tag = this.tags[this.tags.length - 1];\n      var sheet = sheetForTag(tag);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (false) {\n          console.warn('illegal rule', rule); // eslint-disable-line no-console\n        }\n      }\n    } else {\n      var _tag = makeStyleTag(this.opts);\n\n      this.tags.push(_tag);\n\n      _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));\n    }\n\n    this.ctr++;\n\n    if (this.ctr % 65000 === 0) {\n      this.tags.push(makeStyleTag(this.opts));\n    }\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0; // todo - look for remnants in document.styleSheets\n\n    this.injected = false;\n  };\n\n  return StyleSheet;\n}();\n\nfunction createEmotion(context, options) {\n  if (context.__SECRET_EMOTION__ !== undefined) {\n    return context.__SECRET_EMOTION__;\n  }\n\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n\n  if (false) {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var current;\n\n  function insertRule(rule) {\n    current += rule;\n\n    if (isBrowser) {\n      sheet.insert(rule, currentSourceMap);\n    }\n  }\n\n  var insertionPlugin = __WEBPACK_IMPORTED_MODULE_4_stylis_rule_sheet___default()(insertRule);\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var caches = {\n    registered: {},\n    inserted: {},\n    nonce: options.nonce,\n    key: key\n  };\n  var sheet = new StyleSheet(options);\n\n  if (isBrowser) {\n    // 🚀\n    sheet.inject();\n  }\n\n  var stylis = new __WEBPACK_IMPORTED_MODULE_3__emotion_stylis__[\"a\" /* default */](stylisOptions);\n  stylis.use(options.stylisPlugins)(insertionPlugin);\n  var currentSourceMap = '';\n\n  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {\n    if (interpolation == null) {\n      return '';\n    }\n\n    switch (typeof interpolation) {\n      case 'boolean':\n        return '';\n\n      case 'function':\n        if (interpolation.__emotion_styles !== undefined) {\n          var selector = interpolation.toString();\n\n          if (selector === 'NO_COMPONENT_SELECTOR' && \"production\" !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          return selector;\n        }\n\n        if (this === undefined && \"production\" !== 'production') {\n          console.error('Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        return handleInterpolation.call(this, this === undefined ? interpolation() : // $FlowFixMe\n        interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);\n\n      case 'object':\n        return createStringFromObject.call(this, interpolation);\n\n      default:\n        var cached = caches.registered[interpolation];\n        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;\n    }\n  }\n\n  var objectToStringCache = new WeakMap();\n\n  function createStringFromObject(obj) {\n    if (objectToStringCache.has(obj)) {\n      // $FlowFixMe\n      return objectToStringCache.get(obj);\n    }\n\n    var string = '';\n\n    if (Array.isArray(obj)) {\n      obj.forEach(function (interpolation) {\n        string += handleInterpolation.call(this, interpolation, false);\n      }, this);\n    } else {\n      Object.keys(obj).forEach(function (key) {\n        if (typeof obj[key] !== 'object') {\n          if (caches.registered[obj[key]] !== undefined) {\n            string += key + \"{\" + caches.registered[obj[key]] + \"}\";\n          } else {\n            string += processStyleName(key) + \":\" + processStyleValue(key, obj[key]) + \";\";\n          }\n        } else {\n          if (key === 'NO_COMPONENT_SELECTOR' && \"production\" !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string' && caches.registered[obj[key][0]] === undefined) {\n            obj[key].forEach(function (value) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value) + \";\";\n            });\n          } else {\n            string += key + \"{\" + handleInterpolation.call(this, obj[key], false) + \"}\";\n          }\n        }\n      }, this);\n    }\n\n    objectToStringCache.set(obj, string);\n    return string;\n  }\n\n  var name;\n  var stylesWithLabel;\n  var labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n\n  var createClassName = function createClassName(styles, identifierName) {\n    return Object(__WEBPACK_IMPORTED_MODULE_2__emotion_hash__[\"a\" /* default */])(styles + identifierName) + identifierName;\n  };\n\n  if (false) {\n    var oldCreateClassName = createClassName;\n    var sourceMappingUrlPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n\n    createClassName = function createClassName(styles, identifierName) {\n      return oldCreateClassName(styles.replace(sourceMappingUrlPattern, function (sourceMap) {\n        currentSourceMap = sourceMap;\n        return '';\n      }), identifierName);\n    };\n  }\n\n  var createStyles = function createStyles(strings) {\n    var stringMode = true;\n    var styles = '';\n    var identifierName = '';\n\n    if (strings == null || strings.raw === undefined) {\n      stringMode = false;\n      styles += handleInterpolation.call(this, strings, false);\n    } else {\n      styles += strings[0];\n    }\n\n    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    interpolations.forEach(function (interpolation, i) {\n      styles += handleInterpolation.call(this, interpolation, styles.charCodeAt(styles.length - 1) === 46 // .\n      );\n\n      if (stringMode === true && strings[i + 1] !== undefined) {\n        styles += strings[i + 1];\n      }\n    }, this);\n    stylesWithLabel = styles;\n    styles = styles.replace(labelPattern, function (match, p1) {\n      identifierName += \"-\" + p1;\n      return '';\n    });\n    name = createClassName(styles, identifierName);\n    return styles;\n  };\n\n  if (false) {\n    var oldStylis = stylis;\n\n    stylis = function stylis(selector, styles) {\n      oldStylis(selector, styles);\n      currentSourceMap = '';\n    };\n  }\n\n  function insert(scope, styles) {\n    if (caches.inserted[name] === undefined) {\n      current = '';\n      stylis(scope, styles);\n      caches.inserted[name] = current;\n    }\n  }\n\n  var css = function css() {\n    var styles = createStyles.apply(this, arguments);\n    var selector = key + \"-\" + name;\n\n    if (caches.registered[selector] === undefined) {\n      caches.registered[selector] = stylesWithLabel;\n    }\n\n    insert(\".\" + selector, styles);\n    return selector;\n  };\n\n  var keyframes = function keyframes() {\n    var styles = createStyles.apply(this, arguments);\n    var animation = \"animation-\" + name;\n    insert('', \"@keyframes \" + animation + \"{\" + styles + \"}\");\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    var styles = createStyles.apply(this, arguments);\n    insert('', styles);\n  };\n\n  function getRegisteredStyles(registeredStyles, classNames) {\n    var rawClassName = '';\n    classNames.split(' ').forEach(function (className) {\n      if (caches.registered[className] !== undefined) {\n        registeredStyles.push(className);\n      } else {\n        rawClassName += className + \" \";\n      }\n    });\n    return rawClassName;\n  }\n\n  function merge(className, sourceMap) {\n    var registeredStyles = [];\n    var rawClassName = getRegisteredStyles(registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles, sourceMap);\n  }\n\n  function cx() {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n\n    return merge(classnames(classNames));\n  }\n\n  function hydrateSingleId(id) {\n    caches.inserted[id] = true;\n  }\n\n  function hydrate(ids) {\n    ids.forEach(hydrateSingleId);\n  }\n\n  function flush() {\n    if (isBrowser) {\n      sheet.flush();\n      sheet.inject();\n    }\n\n    caches.inserted = {};\n    caches.registered = {};\n  }\n\n  if (isBrowser) {\n    var chunks = document.querySelectorAll(\"[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(chunks, function (node) {\n      // $FlowFixMe\n      sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0]); // $FlowFixMe\n\n      node.getAttribute(\"data-emotion-\" + key).split(' ').forEach(hydrateSingleId);\n    });\n  }\n\n  var emotion = {\n    flush: flush,\n    hydrate: hydrate,\n    cx: cx,\n    merge: merge,\n    getRegisteredStyles: getRegisteredStyles,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    css: css,\n    sheet: sheet,\n    caches: caches\n  };\n  context.__SECRET_EMOTION__ = emotion;\n  return emotion;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createEmotion);\n\n\n/***/ }),\n\n/***/ 6043:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (memoize);\n\n\n/***/ }),\n\n/***/ 6044:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (unitlessKeys);\n\n\n/***/ }),\n\n/***/ 6045:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n      h = l ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (murmurhash2_32_gc);\n\n\n/***/ }),\n\n/***/ 6046:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e, m).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e, m).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        switch (d.constructor) {\n          case Array:\n            for (var c = 0, e = d.length; c < e; ++c) {\n              T(d[c]);\n            }\n\n            break;\n\n          case Function:\n            S[A++] = d;\n            break;\n\n          case Boolean:\n            Y = !!d | 0;\n        }\n\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (stylis_min);\n\n\n/***/ }),\n\n/***/ 6047:\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (factory) {\n\t true ? (module['exports'] = factory()) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory()) :\n\t\t\t(window['stylisRuleSheet'] = factory())\n}(function () {\n\n\t'use strict'\n\n\treturn function (insertRule) {\n\t\tvar delimiter = '/*|*/'\n\t\tvar needle = delimiter+'}'\n\n\t\tfunction toSheet (block) {\n\t\t\tif (block)\n\t\t\t\ttry {\n\t\t\t\t\tinsertRule(block + '}')\n\t\t\t\t} catch (e) {}\n\t\t}\n\n\t\treturn function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t\t\tswitch (context) {\n\t\t\t\t// property\n\t\t\t\tcase 1:\n\t\t\t\t\t// @import\n\t\t\t\t\tif (depth === 0 && content.charCodeAt(0) === 64)\n\t\t\t\t\t\treturn insertRule(content+';'), ''\n\t\t\t\t\tbreak\n\t\t\t\t// selector\n\t\t\t\tcase 2:\n\t\t\t\t\tif (ns === 0)\n\t\t\t\t\t\treturn content + delimiter\n\t\t\t\t\tbreak\n\t\t\t\t// at-rule\n\t\t\t\tcase 3:\n\t\t\t\t\tswitch (ns) {\n\t\t\t\t\t\t// @font-face, @page\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\tcase 112:\n\t\t\t\t\t\t\treturn insertRule(selectors[0]+content), ''\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn content + (at === 0 ? delimiter : '')\n\t\t\t\t\t}\n\t\t\t\tcase -2:\n\t\t\t\t\tcontent.split(needle).forEach(toSheet)\n\t\t\t}\n\t\t}\n\t}\n}))\n\n\n/***/ }),\n\n/***/ 6048:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(4);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;\n\n/***/ }),\n\n/***/ 6049:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _CSSTransition = __webpack_require__(6050);\n\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\n\nvar _ReplaceTransition = __webpack_require__(6054);\n\nvar _ReplaceTransition2 = _interopRequireDefault(_ReplaceTransition);\n\nvar _TransitionGroup = __webpack_require__(148);\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _Transition = __webpack_require__(32);\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition2.default,\n  TransitionGroup: _TransitionGroup2.default,\n  ReplaceTransition: _ReplaceTransition2.default,\n  CSSTransition: _CSSTransition2.default\n};\n\n/***/ }),\n\n/***/ 6050:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = __webpack_require__(4);\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _addClass = __webpack_require__(6051);\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = __webpack_require__(6053);\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Transition = __webpack_require__(32);\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nvar _PropTypes = __webpack_require__(154);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass2.default)(node, c);\n  });\n};\n\nvar propTypes = _extends({}, _Transition2.default.propTypes, {\n\n  /**\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply spread\n   * them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n});\n\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation. After the animation,\n * matching `done` class names are applied to persist the animation state.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n *\n * ## Example\n *\n * <iframe src=\"https://codesandbox.io/embed/m77l2vp00x?fontsize=14\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n */\n\nvar CSSTransition = function (_React$Component) {\n  _inherits(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    }, _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    }, _this.onEntered = function (node, appearing) {\n      var _this$getClassNames3 = _this.getClassNames('enter'),\n          doneClassName = _this$getClassNames3.doneClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node);\n      }\n    }, _this.onExit = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          className = _this$getClassNames4.className;\n\n      _this.removeClasses(node, 'appear');\n      _this.removeClasses(node, 'enter');\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    }, _this.onExiting = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames5.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    }, _this.onExited = function (node) {\n      var _this$getClassNames6 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames6.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    }, _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n\n\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\n\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {\n    var _getClassNames = this.getClassNames(type),\n        className = _getClassNames.className,\n        activeClassName = _getClassNames.activeClassName,\n        doneClassName = _getClassNames.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n      addClass(node, className);\n    }\n  };\n\n  CSSTransition.prototype.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n\n    return _react2.default.createElement(_Transition2.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react2.default.Component);\n\nCSSTransition.propTypes =  false ? propTypes : {};\n\nexports.default = CSSTransition;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 6051:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = __webpack_require__(6052);\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 6052:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 6053:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\n/***/ }),\n\n/***/ 6054:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _propTypes = __webpack_require__(4);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(18);\n\nvar _TransitionGroup = __webpack_require__(148);\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  in: _propTypes2.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react2.default.Children.count(props[propName]) !== 2) return new Error('\"' + propName + '\" must be exactly two transition components.');\n\n    return null;\n  }\n};\n\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = function (_React$Component) {\n  _inherits(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReplaceTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ReplaceTransition.prototype.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react2.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  ReplaceTransition.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        inProp = _props.in,\n        props = _objectWithoutProperties(_props, ['children', 'in']);\n\n    var _React$Children$toArr = _react2.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n\n    return _react2.default.createElement(\n      _TransitionGroup2.default,\n      props,\n      inProp ? _react2.default.cloneElement(first, {\n        key: 'first',\n        onEnter: this.handleEnter,\n        onEntering: this.handleEntering,\n        onEntered: this.handleEntered\n\n      }) : _react2.default.cloneElement(second, {\n        key: 'second',\n        onEnter: this.handleExit,\n        onEntering: this.handleExiting,\n        onEntered: this.handleExited\n      })\n    );\n  };\n\n  return ReplaceTransition;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleEnter = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _this2.handleLifecycle('onEnter', 0, args);\n  };\n\n  this.handleEntering = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return _this2.handleLifecycle('onEntering', 0, args);\n  };\n\n  this.handleEntered = function () {\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return _this2.handleLifecycle('onEntered', 0, args);\n  };\n\n  this.handleExit = function () {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    return _this2.handleLifecycle('onExit', 1, args);\n  };\n\n  this.handleExiting = function () {\n    for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return _this2.handleLifecycle('onExiting', 1, args);\n  };\n\n  this.handleExited = function () {\n    for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    return _this2.handleLifecycle('onExited', 1, args);\n  };\n};\n\nReplaceTransition.propTypes =  false ? propTypes : {};\n\nexports.default = ReplaceTransition;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 6055:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * Rounds a floating point number to specified number of decimal places \r\n */var roundToNdecimals=function roundToNdecimals(value,decimals){return Number(Math.round(value+'e'+decimals)+'e-'+decimals);};/* harmony default export */ __webpack_exports__[\"a\"] = (roundToNdecimals);\n\n/***/ }),\n\n/***/ 6056:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_ui_core__ = __webpack_require__(143);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_findLayerById__ = __webpack_require__(5850);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_geoprocessing_bboxFunction__ = __webpack_require__(5841);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var styles=function styles(theme){return{textField:{marginLeft:theme.spacing.unit,marginRight:theme.spacing.unit,width:150}};};var BboxTextField=function(_Component){_inherits(BboxTextField,_Component);function BboxTextField(){var _ref;var _temp,_this,_ret;_classCallCheck(this,BboxTextField);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=BboxTextField.__proto__||Object.getPrototypeOf(BboxTextField)).call.apply(_ref,[this].concat(args))),_this),_this.calculateBbox=function(){var _this$props=_this.props,layerIds=_this$props.layerIds,setBbox=_this$props.setBbox,layers=_this$props.layers,setError=_this$props.setError;var selectedLayersDataList=[];for(var i in layerIds){var layer=Object(__WEBPACK_IMPORTED_MODULE_3__utils_findLayerById__[\"a\" /* default */])(layerIds[i],layers);var data=layer?layer.data:null;selectedLayersDataList.push(data);}var res=Object(__WEBPACK_IMPORTED_MODULE_4__utils_geoprocessing_bboxFunction__[\"a\" /* default */])(selectedLayersDataList);if(res.bbox){setBbox(res.bbox);}else{setError(res.newJson);}},_this.handleChange=function(index){return function(event){var bbox=_this.state.bbox;bbox[index]=event.target.value;_this.setState({bbox:bbox});};},_temp),_possibleConstructorReturn(_this,_ret);}_createClass(BboxTextField,[{key:'render',value:function render(){var _props=this.props,classes=_props.classes,theme=_props.theme,bbox=_props.bbox,optional=_props.optional;// minX, minY, maxX, maxY]\nvar promtText=optional?'Bounding box (optional)':'Bounding box';return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"M\" /* Typography */],{style:{marginTop:theme.spacing.unit},variant:'caption'},promtText),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{display:'flex',justifyContent:'space-between'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"J\" /* TextField */],{label:'minX',className:classes.textField,value:bbox[0],onChange:this.handleChange(0),margin:'normal'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"J\" /* TextField */],{label:'miny',className:classes.textField,value:bbox[1],onChange:this.handleChange(1),margin:'normal'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"J\" /* TextField */],{label:'maxX',className:classes.textField,value:bbox[2],onChange:this.handleChange(2),margin:'normal'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"J\" /* TextField */],{label:'maxY',className:classes.textField,value:bbox[3],onChange:this.handleChange(3),margin:'normal'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{style:{display:'flex',justifyContent:'flex-end'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2__material_ui_core__[\"b\" /* Button */],{color:'secondary',onClick:this.calculateBbox},'Calculate bbox from geometry')));}}]);return BboxTextField;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (Object(__WEBPACK_IMPORTED_MODULE_1__material_ui_core_styles__[\"withStyles\"])(styles,{withTheme:true})(BboxTextField));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.2303459a.chunk.js","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/math.js\n// module id = 5697\n// module chunks = 7","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/meta/main.es.js\n// module id = 5700\n// module chunks = 7","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/invariant/main.es.js\n// module id = 5705\n// module chunks = 7","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/index.js\n// module id = 5706\n// module chunks = 7","export default function noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/noop.js\n// module id = 5709\n// module chunks = 7","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 5710\n// module chunks = 0 7","import React, {Component} from 'react';\r\nimport {\r\n    DialogActions,\r\n    Button} from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      position: 'unset'\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Contains two buttons. One for submit and one to cancel. Used many places. For example EditLayerDialog\r\n   * and geoprocessing dialog.\r\n   */\r\n\r\n  class SubmitOrCancelAction extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.keyupHandler = this.keyupHandler.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n      //Press of enter button will trigger submit function\r\n      document.addEventListener('keyup', this.keyupHandler, false);\r\n    }\r\n    componentWillUnmount() {\r\n      document.removeEventListener('keyup', this.keyupHandler, false);\r\n    }\r\n\r\n    keyupHandler(e) {\r\n      const {submit} = this.props;\r\n      if(e.keyCode === 13) {\r\n        submit();\r\n      }\r\n    }\r\n    \r\n    render() {\r\n\r\n      const { classes, submit, submitText , cancel, cancelText, submitDisabled } = this.props;\r\n\r\n      let submitBtnTxt = submitText ? submitText: 'Submit';\r\n      let cancelBtnTxt = cancelText ? cancelText: 'Cancel';\r\n      let disabled = submitDisabled ? true: false;\r\n  \r\n      return (\r\n        <DialogActions>\r\n            <Button\r\n            classes={{ root: classes.root }}\r\n            variant='contained'\r\n            disabled={disabled}\r\n            onClick={submit}\r\n             color=\"primary\">\r\n              {submitBtnTxt}\r\n            </Button>\r\n            <Button\r\n              classes={{ root: classes.root }}\r\n              onClick={cancel}\r\n              color=\"primary\">\r\n              {cancelBtnTxt}\r\n            </Button>\r\n      </DialogActions>   \r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(SubmitOrCancelAction);\n\n\n// WEBPACK FOOTER //\n// ./src/components/DialogActions/SubmitOrCancelAction.js","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/stream.js\n// module id = 5715\n// module chunks = 7","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/adder.js\n// module id = 5719\n// module chunks = 7","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/ascending.js\n// module id = 5720\n// module chunks = 7","import React, {Component} from 'react';\r\nimport {\r\n    DialogActions,\r\n    Button} from '@material-ui/core'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n/**\r\n * Ok button. Used for information dialogs.\r\n */\r\n\r\n\r\nconst styles = theme => ({\r\n  \r\n  });\r\n\r\n  class OkAction extends Component {\r\n    \r\n    render() {\r\n\r\n      const { ok, okText } = this.props;\r\n\r\n      let okBtnTxt = okText ? okText: 'OK'\r\n  \r\n      return (\r\n        <DialogActions>\r\n            <Button onClick={ok}  color=\"primary\">\r\n              {okBtnTxt}\r\n            </Button>\r\n      </DialogActions>   \r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(OkAction);\n\n\n// WEBPACK FOOTER //\n// ./src/components/DialogActions/OkAction.js","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/cartesian.js\n// module id = 5725\n// module chunks = 7","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/number.js\n// module id = 5726\n// module chunks = 7","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/azimuthal.js\n// module id = 5727\n// module chunks = 7","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/Diagram.js\n// module id = 5728\n// module chunks = 7","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raf/index.js\n// module id = 5729\n// module chunks = 7 8","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField} from '@material-ui/core/';\r\nimport checkIfLayerNameExists from '../utils/checkIfLayerNameExists';\r\n\r\n/**\r\n * TextField to set layer name. Used in edit layer and also geoprocessing dialogs\r\n */\r\nconst styles = theme => ({\r\n  \r\n  });\r\n\r\n  class LayerNameTextField extends Component {\r\n\r\n    componentDidMount() {\r\n        const {defaultName} = this.props;\r\n        this.setState({layerName: defaultName});\r\n    }\r\n\r\n    nameChange = name => event => {\r\n        const {setName} = this.props;\r\n        setName(event.target.value);\r\n      }\r\n    \r\n    render() {\r\n\r\n      const { promt, layerName, layers, acceptedLayerId} = this.props;\r\n\r\n      let Nameerror = false;\r\n      let errorText = '';\r\n  \r\n      if(layerName === '') {\r\n        errorText ='layer name cannot be empty';\r\n        Nameerror = true;\r\n      } else if ( checkIfLayerNameExists(layerName, layers, acceptedLayerId)) {\r\n        // Name exists already and is not the same as this layers names\r\n        errorText ='That name is already in use';\r\n        Nameerror = true;\r\n      }\r\n      let promtText = promt? promt: \"Layer Name\";\r\n  \r\n      return (\r\n        <form>\r\n            <TextField\r\n            id=\"outlined-full-width\"\r\n            onKeyPress={(ev) => {\r\n              if (ev.key === 'Enter') {\r\n                ev.preventDefault();\r\n              }\r\n            }}\r\n            label={promtText}\r\n            value={layerName}\r\n            fullWidth={true}\r\n            error={Nameerror}\r\n            onChange={this.nameChange('')}      \r\n            margin=\"normal\"\r\n            helperText={errorText}\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n      </form>\r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(LayerNameTextField);\n\n\n// WEBPACK FOOTER //\n// ./src/components/LayerNameTextField.js","\r\nimport React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { FormControl, InputLabel, MenuItem, Select}  from '@material-ui/core'\r\n\r\n//This is prefered over the original. Uses ids over indices.\r\n\r\nconst styles = theme => ({\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    width: '100%',\r\n  },\r\n  Select:{\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n\r\n\r\nclass LayersSelect extends React.Component {\r\n  state = {\r\n    curValue: '',\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    const {changeLayer} = this.props\r\n\r\n    changeLayer(event.target.value)\r\n    this.setState({ [name]: event.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCurLayer();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.layerId !== this.props.layerId) {\r\n      this.setCurLayer();\r\n    }\r\n  }\r\n\r\n  setCurLayer = () => {\r\n    const {layerId} = this.props;\r\n\r\n    if( layerId ) {\r\n      this.setState({curValue: layerId});\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { layers, classes, promt } = this.props;\r\n    let options = layers.map((layer) => {\r\n\r\n      return <MenuItem key={layer.id} value={layer.id}>{layer.displayName}</MenuItem >\r\n\r\n    }); \r\n\r\n    let promtText = promt ? promt : 'Choose a Layer';\r\n\r\n    return (\r\n\r\n    <FormControl required fullWidth={true} className={classes.formControl}>\r\n      <InputLabel htmlFor=\"age-simple\">{promtText}</InputLabel>\r\n      <Select\r\n        value={this.state.curValue}\r\n        onChange={this.handleChange('curValue')}\r\n        placeholder=\"Choose a Layer to edit\"\r\n      >\r\n        {options}\r\n      </Select>\r\n    </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(LayersSelect);\n\n\n// WEBPACK FOOTER //\n// ./src/components/LayersSelect.js","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/rotation.js\n// module id = 5737\n// module chunks = 7","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/transform.js\n// module id = 5738\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nexports.default = bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bbox/index.js\n// module id = 5739\n// module chunks = 3 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/helpers/index.js\n// module id = 5740\n// module chunks = 1 7","//combines the features of two feature collections into one\r\n// can have duplicates\r\nconst combineFeatures = (featureCollectionList) => {\r\n    let newGeojson = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"features\": []\r\n    }\r\n\r\n    for (var i in featureCollectionList) {\r\n      newGeojson.features = newGeojson.features.concat( featureCollectionList[i].features )\r\n    }\r\n\r\n    return(newGeojson);\r\n  }\r\n\r\n  export default combineFeatures\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/combineFeatures.js","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/extent.js\n// module id = 5759\n// module chunks = 7","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/index.js\n// module id = 5760\n// module chunks = 7","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/quantile.js\n// module id = 5761\n// module chunks = 7","export default function(x) {\n  return x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/identity.js\n// module id = 5762\n// module chunks = 7","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/conicEqualArea.js\n// module id = 5763\n// module chunks = 7","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/conic.js\n// module id = 5764\n// module chunks = 7","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/fit.js\n// module id = 5765\n// module chunks = 7","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/mercator.js\n// module id = 5766\n// module chunks = 7","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(helpers.feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        var previousFeatureIndex = 0;\n        var previousMultiIndex = 0;\n        var prevGeomIndex = 0;\n        if (coordEach(feature, function (currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n                previousCoords = currentCoord;\n                previousFeatureIndex = featureIndex;\n                previousMultiIndex = multiPartIndexCoord;\n                prevGeomIndex = geometryIndex;\n                segmentIndex = 0;\n                return;\n            }\n            var currentSegment = helpers.lineString([previousCoords, currentCoord], feature.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        if (feature.geometry === null) return;\n        var type = feature.geometry.type;\n        var coords = feature.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(helpers.lineString(coords[geometryIndex], feature.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return helpers.lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return helpers.point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return helpers.point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return helpers.point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.coordAll = coordAll;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.findSegment = findSegment;\nexports.findPoint = findPoint;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bbox/node_modules/@turf/meta/index.js\n// module id = 5767\n// module chunks = 3 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bbox/node_modules/@turf/helpers/index.js\n// module id = 5768\n// module chunks = 3 7","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/RedBlackTree.js\n// module id = 5769\n// module chunks = 7","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/Edge.js\n// module id = 5770\n// module chunks = 7","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/performance-now/lib/performance-now.js\n// module id = 5771\n// module chunks = 7 8","var simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/memoize-one/dist/memoize-one.esm.js\n// module id = 5772\n// module chunks = 7 8","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography} from '@material-ui/core';\r\n\r\n/**\r\n * Gives feedback message about input to dialogs. Displayed in stacks on top of dialog.\r\n */\r\n\r\nconst styles = theme => ({\r\n    feedbackDiv: {\r\n       padding: theme.spacing.unit,\r\n       borderRadius: 5,\r\n       margin: theme.spacing.unit\r\n\r\n    }\r\n  });\r\n\r\n  class DialogFeedback extends Component {\r\n    \r\n    render() {\r\n\r\n      const { message, classes, variant } = this.props;\r\n\r\n      let bgcolor = '#2979ff'\r\n\r\n      switch (variant) {\r\n          case 'error':\r\n            bgcolor = 'red';\r\n            break;              \r\n      \r\n          default:\r\n              break;\r\n      }\r\n  \r\n      return (\r\n        <div className={classes.feedbackDiv} style={{backgroundColor: bgcolor}}>\r\n            <Typography> {message}</Typography>\r\n        </div>\r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(DialogFeedback);\n\n\n// WEBPACK FOOTER //\n// ./src/components/DialogContent/DialogFeedback.js","import  intersect from '@turf/intersect';\r\nimport performActionOnAllFeaturePairs from './performActionOnAllFeaturePairs';\r\n\r\n/**\r\n * Returns the intersection of two polygons\r\n */\r\n\r\nconst intersectFunction = (geojson1, geojson2) => {\r\n  if( !(geojson1 && geojson2) ) {\r\n    return 'Two geometries are required';\r\n  } else if (geojson1.features[0].geometry.type !== 'Polygon' && geojson1.features[0].geometry.type !== 'MultiPolygon'  ) {\r\n    return 'The geometries must be of type Polygon or MultiPolygon.';\r\n  } else if (geojson1 === geojson2) {\r\n    return 'The geometries cannot be identical';\r\n  }\r\n  \r\n  let newGeojson = performActionOnAllFeaturePairs(geojson1, geojson2, intersect)\r\n  //Remove null or undefined features:\r\n  newGeojson.features = newGeojson.features.filter(f => f != null);\r\n\r\n    if (!newGeojson.features[0]) {\r\n      return 'The geometries do not overlap'\r\n    }\r\n    return newGeojson;\r\n  }\r\n\r\n  export default intersectFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/intersectFunction.js","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/intersect/node_modules/@turf/helpers/index.js\n// module id = 5809\n// module chunks = 7","/**\n * martinez v0.4.3\n * Martinez polygon clipping algorithm, does boolean operation on polygons (multipolygons, polygons with holes etc): intersection, union, difference, xor\n *\n * @author Alex Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.martinez = {})));\n}(this, (function (exports) { 'use strict';\n\n  function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n  var SplayTree = function SplayTree(compare, noDuplicates) {\n    if ( compare === void 0 ) compare = DEFAULT_COMPARE;\n    if ( noDuplicates === void 0 ) noDuplicates = false;\n\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  };\n\n  var prototypeAccessors = { size: { configurable: true } };\n\n\n  SplayTree.prototype.rotateLeft = function rotateLeft (x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) { y.left.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)              { this._root = y; }\n    else if (x === x.parent.left) { x.parent.left = y; }\n    else                        { x.parent.right = y; }\n    if (y) { y.left = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype.rotateRight = function rotateRight (x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) { y.right.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)             { this._root = y; }\n    else if(x === x.parent.left) { x.parent.left = y; }\n    else                       { x.parent.right = y; }\n    if (y) { y.right = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype._splay = function _splay (x) {\n      var this$1 = this;\n\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) { this$1.rotateRight(p); }\n        else            { this$1.rotateLeft(p); }\n      } else if (p.left === x && p.parent.left === p) {\n        this$1.rotateRight(p.parent);\n        this$1.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this$1.rotateLeft(p.parent);\n        this$1.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this$1.rotateRight(p);\n        this$1.rotateLeft(p);\n      } else {\n        this$1.rotateLeft(p);\n        this$1.rotateRight(p);\n      }\n    }\n  };\n\n\n  SplayTree.prototype.splay = function splay (x) {\n      var this$1 = this;\n\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) { ggp.left= x; }\n        else               { ggp.right = x; }\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this$1._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else { gp.left = null; }\n\n            p.right = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else { gp.right = null; }\n\n            x.left  = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else { p.left = null; }\n\n        x.right= p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else { gp.right = null; }\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else { gp.left = null; }\n\n            x.right = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else { p.right = null; }\n\n        x.left = p;\n        p.parent = x;\n      }\n    }\n  };\n\n\n  SplayTree.prototype.replace = function replace (u, v) {\n    if (!u.parent) { this._root = v; }\n    else if (u === u.parent.left) { u.parent.left = v; }\n    else { u.parent.right = v; }\n    if (v) { v.parent = u.parent; }\n  };\n\n\n  SplayTree.prototype.minNode = function minNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.left) { u = u.left; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.maxNode = function maxNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.right) { u = u.right; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.insert = function insert (key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) { return; }\n        else if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    }\n\n    z = { key: key, data: data, left: null, right: null, parent: p };\n\n    if (!p)                        { this._root = z; }\n    else if (comp(p.key, z.key) < 0) { p.right = z; }\n    else                           { p.left= z; }\n\n    this.splay(z);\n    this._size++;\n    return z;\n  };\n\n\n  SplayTree.prototype.find = function find (key) {\n    var z  = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if    (cmp < 0) { z = z.right; }\n      else if (cmp > 0) { z = z.left; }\n      else            { return z; }\n    }\n    return null;\n  };\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param{Key} key\n   * @return {boolean} true/false\n   */\n  SplayTree.prototype.contains = function contains (key) {\n    var node     = this._root;\n    var comparator = this._compare;\n    while (node){\n      var cmp = comparator(key, node.key);\n      if    (cmp === 0) { return true; }\n      else if (cmp < 0) { node = node.left; }\n      else              { node = node.right; }\n    }\n\n    return false;\n  };\n\n\n  SplayTree.prototype.remove = function remove (key) {\n    var z = this.find(key);\n\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.removeNode = function removeNode (z) {\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.erase = function erase (key) {\n    var z = this.find(key);\n    if (!z) { return; }\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) { sMax.right = t; }\n      else { this._root = t; }\n      t.parent = sMax;\n    }\n\n    this._size--;\n  };\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  SplayTree.prototype.pop = function pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) { node = node.left; }\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  };\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.next = function next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) { successor = successor.left; }\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  };\n\n\n  /**\n   * Predecessor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.prev = function prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) { predecessor = predecessor.right; }\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  };\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param{forEachCallback} callback\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.forEach = function forEach (callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return this;\n  };\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param{Key}    low\n   * @param{Key}    high\n   * @param{Function} fn\n   * @param{*?}     ctx\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.range = function range (low, high, fn, ctx) {\n      var this$1 = this;\n\n    var Q = [];\n    var compare = this._compare;\n    var node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) { return this$1; } // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  SplayTree.prototype.keys = function keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  SplayTree.prototype.values = function values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns node at given index\n   * @param{number} index\n   * @return {?Node}\n   */\n  SplayTree.prototype.at = function at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) { return current; }\n          i++;\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param{Array<Key>}  keys\n   * @param{Array<Value>}[values]\n   * @param{Boolean}     [presort=false] Pre-sort keys and values, using\n   *                                       tree's comparator. Sorting is done\n   *                                       in-place\n   * @return {AVLTree}\n   */\n  SplayTree.prototype.load = function load (keys, values, presort) {\n      if ( keys === void 0 ) keys = [];\n      if ( values === void 0 ) values = [];\n      if ( presort === void 0 ) presort = false;\n\n    if (this._size !== 0) { throw new Error('bulk-load: tree is not empty'); }\n    var size = keys.length;\n    if (presort) { sort(keys, values, 0, size - 1, this._compare); }\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  };\n\n\n  SplayTree.prototype.min = function min () {\n    var node = this.minNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n\n  SplayTree.prototype.max = function max () {\n    var node = this.maxNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n  SplayTree.prototype.isEmpty = function isEmpty () { return this._root === null; };\n  prototypeAccessors.size.get = function () { return this._size; };\n\n\n  /**\n   * Create a tree and load it with items\n   * @param{Array<Key>}        keys\n   * @param{Array<Value>?}      [values]\n\n   * @param{Function?}          [comparator]\n   * @param{Boolean?}           [presort=false] Pre-sort keys and values, using\n   *                                             tree's comparator. Sorting is done\n   *                                             in-place\n   * @param{Boolean?}           [noDuplicates=false] Allow duplicates\n   * @return {SplayTree}\n   */\n  SplayTree.createTree = function createTree (keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  };\n\n  Object.defineProperties( SplayTree.prototype, prototypeAccessors );\n\n\n  function loadRecursive (parent, keys, values, start, end) {\n    var size = end - start;\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key    = keys[middle];\n      var data   = values[middle];\n      var node   = { key: key, data: data, parent: parent };\n      node.left    = loadRecursive(node, keys, values, start, middle);\n      node.right   = loadRecursive(node, keys, values, middle + 1, end);\n      return node;\n    }\n    return null;\n  }\n\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) { return; }\n\n    var pivot = keys[(left + right) >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do { i++; } while (compare(keys[i], pivot) < 0);\n      do { j--; } while (compare(keys[j], pivot) > 0);\n      if (i >= j) { break; }\n\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values,  left,     j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  var NORMAL               = 0;\n  var NON_CONTRIBUTING     = 1;\n  var SAME_TRANSITION      = 2;\n  var DIFFERENT_TRANSITION = 3;\n\n  var INTERSECTION = 0;\n  var UNION        = 1;\n  var DIFFERENCE   = 2;\n  var XOR          = 3;\n\n  /**\n   * @param  {SweepEvent} event\n   * @param  {SweepEvent} prev\n   * @param  {Operation} operation\n   */\n  function computeFields (event, prev, operation) {\n    // compute inOut and otherInOut fields\n    if (prev === null) {\n      event.inOut      = false;\n      event.otherInOut = true;\n\n    // previous line segment in sweepline belongs to the same polygon\n    } else {\n      if (event.isSubject === prev.isSubject) {\n        event.inOut      = !prev.inOut;\n        event.otherInOut = prev.otherInOut;\n\n      // previous line segment in sweepline belongs to the clipping polygon\n      } else {\n        event.inOut      = !prev.otherInOut;\n        event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n      }\n\n      // compute prevInResult field\n      if (prev) {\n        event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n          ? prev.prevInResult : prev;\n      }\n    }\n\n    // check if the line segment belongs to the Boolean operation\n    event.inResult = inResult(event, operation);\n  }\n\n\n  /* eslint-disable indent */\n  function inResult(event, operation) {\n    switch (event.type) {\n      case NORMAL:\n        switch (operation) {\n          case INTERSECTION:\n            return !event.otherInOut;\n          case UNION:\n            return event.otherInOut;\n          case DIFFERENCE:\n            // return (event.isSubject && !event.otherInOut) ||\n            //         (!event.isSubject && event.otherInOut);\n            return (event.isSubject && event.otherInOut) ||\n                    (!event.isSubject && !event.otherInOut);\n          case XOR:\n            return true;\n        }\n        break;\n      case SAME_TRANSITION:\n        return operation === INTERSECTION || operation === UNION;\n      case DIFFERENT_TRANSITION:\n        return operation === DIFFERENCE;\n      case NON_CONTRIBUTING:\n        return false;\n    }\n    return false;\n  }\n  /* eslint-enable indent */\n\n  var SweepEvent = function SweepEvent (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isBelow = function isBelow (p) {\n    var p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isAbove = function isAbove (p) {\n    return !this.isBelow(p);\n  };\n\n\n  /**\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isVertical = function isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  };\n\n\n  SweepEvent.prototype.clone = function clone () {\n    var copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult     = this.inResult;\n    copy.prevInResult = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut        = this.inOut;\n    copy.otherInOut   = this.otherInOut;\n\n    return copy;\n  };\n\n  function equals(p1, p2) {\n    if (p1[0] === p2[0]) {\n      if (p1[1] === p2[1]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  // const EPSILON = 1e-9;\n  // const abs = Math.abs;\n  // TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n  // Precision problem.\n  //\n  // module.exports = function equals(p1, p2) {\n  //   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n  // };\n\n  /**\n   * Signed area of the triangle (p0, p1, p2)\n   * @param  {Array.<Number>} p0\n   * @param  {Array.<Number>} p1\n   * @param  {Array.<Number>} p2\n   * @return {Number}\n   */\n  function signedArea(p0, p1, p2) {\n    return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n  }\n\n  /**\n   * @param  {SweepEvent} e1\n   * @param  {SweepEvent} e2\n   * @return {Number}\n   */\n  function compareEvents(e1, e2) {\n    var p1 = e1.point;\n    var p2 = e2.point;\n\n    // Different x-coordinate\n    if (p1[0] > p2[0]) { return 1; }\n    if (p1[0] < p2[0]) { return -1; }\n\n    // Different points, but same x-coordinate\n    // Event with lower y-coordinate is processed first\n    if (p1[1] !== p2[1]) { return p1[1] > p2[1] ? 1 : -1; }\n\n    return specialCases(e1, e2, p1, p2);\n  }\n\n\n  /* eslint-disable no-unused-vars */\n  function specialCases(e1, e2, p1, p2) {\n    // Same coordinates, but one is a left endpoint and the other is\n    // a right endpoint. The right endpoint is processed first\n    if (e1.left !== e2.left)\n      { return e1.left ? 1 : -1; }\n\n    // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n    // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n    // Same coordinates, both events\n    // are left endpoints or right endpoints.\n    // not collinear\n    if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n      // the event associate to the bottom segment is processed first\n      return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n    }\n\n    return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n  }\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * @param  {SweepEvent} se\n   * @param  {Array.<Number>} p\n   * @param  {Queue} queue\n   * @return {Queue}\n   */\n  function divideSegment(se, p, queue)  {\n    var r = new SweepEvent(p, false, se,            se.isSubject);\n    var l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n    /* eslint-disable no-console */\n    if (equals(se.point, se.otherEvent.point)) {\n\n      console.warn('what is that, a collapsed segment?', se);\n    }\n    /* eslint-enable no-console */\n\n    r.contourId = l.contourId = se.contourId;\n\n    // avoid a rounding error. The left event would be processed after the right event\n    if (compareEvents(l, se.otherEvent) > 0) {\n      se.otherEvent.left = true;\n      l.left = false;\n    }\n\n    // avoid a rounding error. The left event would be processed after the right event\n    // if (compareEvents(se, r) > 0) {}\n\n    se.otherEvent.otherEvent = l;\n    se.otherEvent = r;\n\n    queue.push(l);\n    queue.push(r);\n\n    return queue;\n  }\n\n  //const EPS = 1e-9;\n\n  /**\n   * Finds the magnitude of the cross product of two vectors (if we pretend\n   * they're in three dimensions)\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The magnitude of the cross product\n   */\n  function crossProduct(a, b) {\n    return (a[0] * b[1]) - (a[1] * b[0]);\n  }\n\n  /**\n   * Finds the dot product of two vectors.\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The dot product\n   */\n  function dotProduct(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]);\n  }\n\n  /**\n   * Finds the intersection (if any) between two line segments a and b, given the\n   * line segments' end points a1, a2 and b1, b2.\n   *\n   * This algorithm is based on Schneider and Eberly.\n   * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n   * Page 244.\n   *\n   * @param {Array.<Number>} a1 point of first line\n   * @param {Array.<Number>} a2 point of first line\n   * @param {Array.<Number>} b1 point of second line\n   * @param {Array.<Number>} b2 point of second line\n   * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n   *                                         (meaning connected segments) as\n   *                                         intersections\n   * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n   * intersection. If they overlap, the two end points of the overlapping segment.\n   * Otherwise, null.\n   */\n  function intersection (a1, a2, b1, b2, noEndpointTouch) {\n    // The algorithm expects our lines in the form P + sd, where P is a point,\n    // s is on the interval [0, 1], and d is a vector.\n    // We are passed two points. P can be the first point of each pair. The\n    // vector, then, could be thought of as the distance (in x and y components)\n    // from the first point to the second point.\n    // So first, let's make our vectors:\n    var va = [a2[0] - a1[0], a2[1] - a1[1]];\n    var vb = [b2[0] - b1[0], b2[1] - b1[1]];\n    // We also define a function to convert back to regular point form:\n\n    /* eslint-disable arrow-body-style */\n\n    function toPoint(p, s, d) {\n      return [\n        p[0] + s * d[0],\n        p[1] + s * d[1]\n      ];\n    }\n\n    /* eslint-enable arrow-body-style */\n\n    // The rest is pretty much a straight port of the algorithm.\n    var e = [b1[0] - a1[0], b1[1] - a1[1]];\n    var kross    = crossProduct(va, vb);\n    var sqrKross = kross * kross;\n    var sqrLenA  = dotProduct(va, va);\n    //const sqrLenB  = dotProduct(vb, vb);\n\n    // Check for line intersection. This works because of the properties of the\n    // cross product -- specifically, two vectors are parallel if and only if the\n    // cross product is the 0 vector. The full calculation involves relative error\n    // to account for possible very small line segments. See Schneider & Eberly\n    // for details.\n    if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n      // If they're not parallel, then (because these are line segments) they\n      // still might not actually intersect. This code checks that the\n      // intersection point of the lines is actually on both line segments.\n      var s = crossProduct(e, vb) / kross;\n      if (s < 0 || s > 1) {\n        // not on line segment a\n        return null;\n      }\n      var t = crossProduct(e, va) / kross;\n      if (t < 0 || t > 1) {\n        // not on line segment b\n        return null;\n      }\n      if (s === 0 || s === 1) {\n        // on an endpoint of line segment a\n        return noEndpointTouch ? null : [toPoint(a1, s, va)];\n      }\n      if (t === 0 || t === 1) {\n        // on an endpoint of line segment b\n        return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n      }\n      return [toPoint(a1, s, va)];\n    }\n\n    // If we've reached this point, then the lines are either parallel or the\n    // same, but the segments could overlap partially or fully, or not at all.\n    // So we need to find the overlap, if any. To do that, we can use e, which is\n    // the (vector) difference between the two initial points. If this is parallel\n    // with the line itself, then the two lines are the same line, and there will\n    // be overlap.\n    //const sqrLenE = dotProduct(e, e);\n    kross = crossProduct(e, va);\n    sqrKross = kross * kross;\n\n    if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n    // Lines are just parallel, not the same. No overlap.\n      return null;\n    }\n\n    var sa = dotProduct(va, e) / sqrLenA;\n    var sb = sa + dotProduct(va, vb) / sqrLenA;\n    var smin = Math.min(sa, sb);\n    var smax = Math.max(sa, sb);\n\n    // this is, essentially, the FindIntersection acting on floats from\n    // Schneider & Eberly, just inlined into this function.\n    if (smin <= 1 && smax >= 0) {\n\n      // overlap on an end point\n      if (smin === 1) {\n        return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n      }\n\n      if (smax === 0) {\n        return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n      }\n\n      if (noEndpointTouch && smin === 0 && smax === 1) { return null; }\n\n      // There's overlap on a segment -- two points of intersection. Return both.\n      return [\n        toPoint(a1, smin > 0 ? smin : 0, va),\n        toPoint(a1, smax < 1 ? smax : 1, va)\n      ];\n    }\n\n    return null;\n  }\n\n  /**\n   * @param  {SweepEvent} se1\n   * @param  {SweepEvent} se2\n   * @param  {Queue}      queue\n   * @return {Number}\n   */\n  function possibleIntersection (se1, se2, queue) {\n    // that disallows self-intersecting polygons,\n    // did cost us half a day, so I'll leave it\n    // out of respect\n    // if (se1.isSubject === se2.isSubject) return;\n    var inter = intersection(\n      se1.point, se1.otherEvent.point,\n      se2.point, se2.otherEvent.point\n    );\n\n    var nintersections = inter ? inter.length : 0;\n    if (nintersections === 0) { return 0; } // no intersection\n\n    // the line segments intersect at an endpoint of both line segments\n    if ((nintersections === 1) &&\n        (equals(se1.point, se2.point) ||\n         equals(se1.otherEvent.point, se2.otherEvent.point))) {\n      return 0;\n    }\n\n    if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n      // if(se1.contourId === se2.contourId){\n      // console.warn('Edges of the same polygon overlap',\n      //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n      // }\n      //throw new Error('Edges of the same polygon overlap');\n      return 0;\n    }\n\n    // The line segments associated to se1 and se2 intersect\n    if (nintersections === 1) {\n\n      // if the intersection point is not an endpoint of se1\n      if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n        divideSegment(se1, inter[0], queue);\n      }\n\n      // if the intersection point is not an endpoint of se2\n      if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n        divideSegment(se2, inter[0], queue);\n      }\n      return 1;\n    }\n\n    // The line segments associated to se1 and se2 overlap\n    var events        = [];\n    var leftCoincide  = false;\n    var rightCoincide = false;\n\n    if (equals(se1.point, se2.point)) {\n      leftCoincide = true; // linked\n    } else if (compareEvents(se1, se2) === 1) {\n      events.push(se2, se1);\n    } else {\n      events.push(se1, se2);\n    }\n\n    if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n      rightCoincide = true;\n    } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n      events.push(se2.otherEvent, se1.otherEvent);\n    } else {\n      events.push(se1.otherEvent, se2.otherEvent);\n    }\n\n    if ((leftCoincide && rightCoincide) || leftCoincide) {\n      // both line segments are equal or share the left endpoint\n      se2.type = NON_CONTRIBUTING;\n      se1.type = (se2.inOut === se1.inOut)\n        ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n      if (leftCoincide && !rightCoincide) {\n        // honestly no idea, but changing events selection from [2, 1]\n        // to [0, 1] fixes the overlapping self-intersecting polygons issue\n        divideSegment(events[1].otherEvent, events[0].point, queue);\n      }\n      return 2;\n    }\n\n    // the line segments share the right endpoint\n    if (rightCoincide) {\n      divideSegment(events[0], events[1].point, queue);\n      return 3;\n    }\n\n    // no line segment includes totally the other one\n    if (events[0] !== events[3].otherEvent) {\n      divideSegment(events[0], events[1].point, queue);\n      divideSegment(events[1], events[2].point, queue);\n      return 3;\n    }\n\n    // one line segment includes the other one\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[3].otherEvent, events[2].point, queue);\n\n    return 3;\n  }\n\n  /**\n   * @param  {SweepEvent} le1\n   * @param  {SweepEvent} le2\n   * @return {Number}\n   */\n  function compareSegments(le1, le2) {\n    if (le1 === le2) { return 0; }\n\n    // Segments are not collinear\n    if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n      signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n      // If they share their left endpoint use the right endpoint to sort\n      if (equals(le1.point, le2.point)) { return le1.isBelow(le2.otherEvent.point) ? -1 : 1; }\n\n      // Different left endpoint: use the left endpoint to sort\n      if (le1.point[0] === le2.point[0]) { return le1.point[1] < le2.point[1] ? -1 : 1; }\n\n      // has the line segment associated to e1 been inserted\n      // into S after the line segment associated to e2 ?\n      if (compareEvents(le1, le2) === 1) { return le2.isAbove(le1.point) ? -1 : 1; }\n\n      // The line segment associated to e2 has been inserted\n      // into S after the line segment associated to e1\n      return le1.isBelow(le2.point) ? -1 : 1;\n    }\n\n    if (le1.isSubject === le2.isSubject) { // same polygon\n      var p1 = le1.point, p2 = le2.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n        p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n        if (p1[0] === p2[0] && p1[1] === p2[1]) { return 0; }\n        else { return le1.contourId > le2.contourId ? 1 : -1; }\n      }\n    } else { // Segments are collinear, but belong to separate polygons\n      return le1.isSubject ? -1 : 1;\n    }\n\n    return compareEvents(le1, le2) === 1 ? 1 : -1;\n  }\n\n  function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n    var sweepLine = new SplayTree(compareSegments);\n    var sortedEvents = [];\n\n    var rightbound = Math.min(sbbox[2], cbbox[2]);\n\n    var prev, next, begin;\n\n    while (eventQueue.length !== 0) {\n      var event = eventQueue.pop();\n      sortedEvents.push(event);\n\n      // optimization by bboxes for intersection and difference goes here\n      if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n          (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n        break;\n      }\n\n      if (event.left) {\n        next  = prev = sweepLine.insert(event);\n        begin = sweepLine.minNode();\n\n        if (prev !== begin) { prev = sweepLine.prev(prev); }\n        else                { prev = null; }\n\n        next = sweepLine.next(next);\n\n        var prevEvent = prev ? prev.key : null;\n        var prevprevEvent = (void 0);\n        computeFields(event, prevEvent, operation);\n        if (next) {\n          if (possibleIntersection(event, next.key, eventQueue) === 2) {\n            computeFields(event, prevEvent, operation);\n            computeFields(event, next.key, operation);\n          }\n        }\n\n        if (prev) {\n          if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n            var prevprev = prev;\n            if (prevprev !== begin) { prevprev = sweepLine.prev(prevprev); }\n            else                    { prevprev = null; }\n\n            prevprevEvent = prevprev ? prevprev.key : null;\n            computeFields(prevEvent, prevprevEvent, operation);\n            computeFields(event,     prevEvent,     operation);\n          }\n        }\n      } else {\n        event = event.otherEvent;\n        next = prev = sweepLine.find(event);\n\n        if (prev && next) {\n\n          if (prev !== begin) { prev = sweepLine.prev(prev); }\n          else                { prev = null; }\n\n          next = sweepLine.next(next);\n          sweepLine.remove(event);\n\n          if (next && prev) {\n            possibleIntersection(prev.key, next.key, eventQueue);\n          }\n        }\n      }\n    }\n    return sortedEvents;\n  }\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<SweepEvent>}\n   */\n  function orderEvents(sortedEvents) {\n    var event, i, len, tmp;\n    var resultEvents = [];\n    for (i = 0, len = sortedEvents.length; i < len; i++) {\n      event = sortedEvents[i];\n      if ((event.left && event.inResult) ||\n        (!event.left && event.otherEvent.inResult)) {\n        resultEvents.push(event);\n      }\n    }\n    // Due to overlapping edges the resultEvents array can be not wholly sorted\n    var sorted = false;\n    while (!sorted) {\n      sorted = true;\n      for (i = 0, len = resultEvents.length; i < len; i++) {\n        if ((i + 1) < len &&\n          compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n          tmp = resultEvents[i];\n          resultEvents[i] = resultEvents[i + 1];\n          resultEvents[i + 1] = tmp;\n          sorted = false;\n        }\n      }\n    }\n\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      event.pos = i;\n    }\n\n    // imagine, the right event is found in the beginning of the queue,\n    // when his left counterpart is not marked yet\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      if (!event.left) {\n        tmp = event.pos;\n        event.pos = event.otherEvent.pos;\n        event.otherEvent.pos = tmp;\n      }\n    }\n\n    return resultEvents;\n  }\n\n\n  /**\n   * @param  {Number} pos\n   * @param  {Array.<SweepEvent>} resultEvents\n   * @param  {Object>}    processed\n   * @return {Number}\n   */\n  function nextPos(pos, resultEvents, processed, origIndex) {\n    var newPos = pos + 1;\n    var length = resultEvents.length;\n    if (newPos > length - 1) { return pos - 1; }\n    var p  = resultEvents[pos].point;\n    var p1 = resultEvents[newPos].point;\n\n\n    // while in range and not the current one by value\n    while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n      if (!processed[newPos]) {\n        return newPos;\n      } else   {\n        newPos++;\n      }\n      p1 = resultEvents[newPos].point;\n    }\n\n    newPos = pos - 1;\n\n    while (processed[newPos] && newPos >= origIndex) {\n      newPos--;\n    }\n    return newPos;\n  }\n\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<*>} polygons\n   */\n  function connectEdges(sortedEvents, operation) {\n    var i, len;\n    var resultEvents = orderEvents(sortedEvents);\n\n    // \"false\"-filled array\n    var processed = {};\n    var result = [];\n    var event;\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if (processed[i]) { continue; }\n      var contour = [[]];\n\n      if (!resultEvents[i].isExteriorRing) {\n        if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n          result.push(contour);\n        } else if (result.length === 0) {\n          result.push([[contour]]);\n        } else {\n          result[result.length - 1].push(contour[0]);\n        }\n      } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n        result[result.length - 1].push(contour[0]);\n      } else {\n        result.push(contour);\n      }\n\n      var ringId = result.length - 1;\n      var pos = i;\n\n      var initial = resultEvents[i].point;\n      contour[0].push(initial);\n\n      while (pos >= i) {\n        event = resultEvents[pos];\n        processed[pos] = true;\n\n        if (event.left) {\n          event.resultInOut = false;\n          event.contourId   = ringId;\n        } else {\n          event.otherEvent.resultInOut = true;\n          event.otherEvent.contourId   = ringId;\n        }\n\n        pos = event.pos;\n        processed[pos] = true;\n        contour[0].push(resultEvents[pos].point);\n        pos = nextPos(pos, resultEvents, processed, i);\n      }\n\n      pos = pos === -1 ? i : pos;\n\n      event = resultEvents[pos];\n      processed[pos] = processed[event.pos] = true;\n      event.otherEvent.resultInOut = true;\n      event.otherEvent.contourId   = ringId;\n    }\n\n    // Handle if the result is a polygon (eg not multipoly)\n    // Commented it again, let's see what do we mean by that\n    // if (result.length === 1) result = result[0];\n    return result;\n  }\n\n  var tinyqueue = TinyQueue;\n  var default_1 = TinyQueue;\n\n  function TinyQueue(data, compare) {\n      var this$1 = this;\n\n      if (!(this instanceof TinyQueue)) { return new TinyQueue(data, compare); }\n\n      this.data = data || [];\n      this.length = this.data.length;\n      this.compare = compare || defaultCompare;\n\n      if (this.length > 0) {\n          for (var i = (this.length >> 1) - 1; i >= 0; i--) { this$1._down(i); }\n      }\n  }\n\n  function defaultCompare(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  TinyQueue.prototype = {\n\n      push: function (item) {\n          this.data.push(item);\n          this.length++;\n          this._up(this.length - 1);\n      },\n\n      pop: function () {\n          if (this.length === 0) { return undefined; }\n\n          var top = this.data[0];\n          this.length--;\n\n          if (this.length > 0) {\n              this.data[0] = this.data[this.length];\n              this._down(0);\n          }\n          this.data.pop();\n\n          return top;\n      },\n\n      peek: function () {\n          return this.data[0];\n      },\n\n      _up: function (pos) {\n          var data = this.data;\n          var compare = this.compare;\n          var item = data[pos];\n\n          while (pos > 0) {\n              var parent = (pos - 1) >> 1;\n              var current = data[parent];\n              if (compare(item, current) >= 0) { break; }\n              data[pos] = current;\n              pos = parent;\n          }\n\n          data[pos] = item;\n      },\n\n      _down: function (pos) {\n          var this$1 = this;\n\n          var data = this.data;\n          var compare = this.compare;\n          var halfLength = this.length >> 1;\n          var item = data[pos];\n\n          while (pos < halfLength) {\n              var left = (pos << 1) + 1;\n              var right = left + 1;\n              var best = data[left];\n\n              if (right < this$1.length && compare(data[right], best) < 0) {\n                  left = right;\n                  best = data[right];\n              }\n              if (compare(best, item) >= 0) { break; }\n\n              data[pos] = best;\n              pos = left;\n          }\n\n          data[pos] = item;\n      }\n  };\n  tinyqueue.default = default_1;\n\n  var max = Math.max;\n  var min = Math.min;\n\n  var contourId = 0;\n\n\n  function processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n    var i, len, s1, s2, e1, e2;\n    for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n      s1 = contourOrHole[i];\n      s2 = contourOrHole[i + 1];\n      e1 = new SweepEvent(s1, false, undefined, isSubject);\n      e2 = new SweepEvent(s2, false, e1,        isSubject);\n      e1.otherEvent = e2;\n\n      if (s1[0] === s2[0] && s1[1] === s2[1]) {\n        continue; // skip collapsed edges, or it breaks\n      }\n\n      e1.contourId = e2.contourId = depth;\n      if (!isExteriorRing) {\n        e1.isExteriorRing = false;\n        e2.isExteriorRing = false;\n      }\n      if (compareEvents(e1, e2) > 0) {\n        e2.left = true;\n      } else {\n        e1.left = true;\n      }\n\n      var x = s1[0], y = s1[1];\n      bbox[0] = min(bbox[0], x);\n      bbox[1] = min(bbox[1], y);\n      bbox[2] = max(bbox[2], x);\n      bbox[3] = max(bbox[3], y);\n\n      // Pushing it so the queue is sorted from left to right,\n      // with object on the left having the highest priority.\n      Q.push(e1);\n      Q.push(e2);\n    }\n  }\n\n\n  function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n    var eventQueue = new tinyqueue(null, compareEvents);\n    var polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n    for (i = 0, ii = subject.length; i < ii; i++) {\n      polygonSet = subject[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n      }\n    }\n\n    for (i = 0, ii = clipping.length; i < ii; i++) {\n      polygonSet = clipping[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (operation === DIFFERENCE) { isExteriorRing = false; }\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n      }\n    }\n\n    return eventQueue;\n  }\n\n  var EMPTY = [];\n\n\n  function trivialOperation(subject, clipping, operation) {\n    var result = null;\n    if (subject.length * clipping.length === 0) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = (subject.length === 0) ? clipping : subject;\n      }\n    }\n    return result;\n  }\n\n\n  function compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n    var result = null;\n    if (sbbox[0] > cbbox[2] ||\n        cbbox[0] > sbbox[2] ||\n        sbbox[1] > cbbox[3] ||\n        cbbox[1] > sbbox[3]) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = subject.concat(clipping);\n      }\n    }\n    return result;\n  }\n\n\n  function boolean(subject, clipping, operation) {\n    if (typeof subject[0][0][0] === 'number') {\n      subject = [subject];\n    }\n    if (typeof clipping[0][0][0] === 'number') {\n      clipping = [clipping];\n    }\n    var trivial = trivialOperation(subject, clipping, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n    var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    //console.time('fill queue');\n    var eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('fill queue');\n\n    trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    //console.time('subdivide edges');\n    var sortedEvents = subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('subdivide edges');\n\n    //console.time('connect vertices');\n    var result = connectEdges(sortedEvents, operation);\n    //console.timeEnd('connect vertices');\n    return result;\n  }\n\n  function union (subject, clipping) {\n    return boolean(subject, clipping, UNION);\n  }\n\n  function diff (subject, clipping) {\n    return boolean(subject, clipping, DIFFERENCE);\n  }\n\n  function xor (subject, clipping){\n    return boolean(subject, clipping, XOR);\n  }\n\n  function intersection$1 (subject, clipping) {\n    return boolean(subject, clipping, INTERSECTION);\n  }\n\n  /**\n   * @enum {Number}\n   */\n  var operations = { UNION: UNION, DIFFERENCE: DIFFERENCE, INTERSECTION: INTERSECTION, XOR: XOR };\n\n  exports.union = union;\n  exports.diff = diff;\n  exports.xor = xor;\n  exports.intersection = intersection$1;\n  exports.operations = operations;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=martinez.umd.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/martinez-polygon-clipping/dist/martinez.umd.js\n// module id = 5810\n// module chunks = 7","const performActionOnAllFeaturePairs = (FeatureCollection1, FeatureCollection2, action) => {\r\n\r\n    let newGeojson = {\r\n      \"type\": \"FeatureCollection\",\r\n      \"features\": []\r\n    }\r\n\r\n    FeatureCollection1.features.forEach(poly1 => {\r\n        FeatureCollection2.features.forEach(poly2 => {\r\n        newGeojson.features.push(action(poly1, poly2))\r\n      });\r\n    });\r\n\r\n    return(newGeojson);\r\n  }\r\n\r\n  export default performActionOnAllFeaturePairs\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/performActionOnAllFeaturePairs.js","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts={})}(this,function(t){\"use strict\";function e(){}function n(t){this.message=t||\"\"}function i(t){this.message=t||\"\"}function r(t){this.message=t||\"\"}function o(){}function s(t){return null===t?Mt:t.color}function a(t){return null===t?null:t.parent}function u(t,e){null!==t&&(t.color=e)}function l(t){return null===t?null:t.left}function c(t){return null===t?null:t.right}function p(){this.root_=null,this.size_=0}function h(){}function f(){this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}function g(){}function d(t){this.message=t||\"\"}function y(){this.array_=[]}\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,i=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;i=i<0?Math.max(n+i,0):Math.min(i,n);var r=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(r=r<0?Math.max(n+arguments[2],0):Math.min(r,n);i<r;)e[i]=t,++i;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var _=function(){};_.prototype.interfaces_=function(){return[]},_.prototype.getClass=function(){return _},_.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var m=function(t){function e(e){t.call(this,e),this.name=\"IllegalArgumentException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),v=function(){},I={MAX_VALUE:{configurable:!0}};v.isNaN=function(t){return Number.isNaN(t)},v.doubleToLongBits=function(t){return t},v.longBitsToDouble=function(t){return t},v.isInfinite=function(t){return!Number.isFinite(t)},I.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(v,I);var E=function(){},x=function(){},N=function(){},C=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},S={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};C.prototype.setOrdinate=function(t,e){switch(t){case C.X:this.x=e;break;case C.Y:this.y=e;break;case C.Z:this.z=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}},C.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!_.equalsWithTolerance(this.x,e.x,n)&&!!_.equalsWithTolerance(this.y,e.y,n)}},C.prototype.getOrdinate=function(t){switch(t){case C.X:return this.x;case C.Y:return this.y;case C.Z:return this.z}throw new m(\"Invalid ordinate index: \"+t)},C.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||v.isNaN(this.z))&&v.isNaN(t.z)},C.prototype.equals=function(t){return t instanceof C&&this.equals2D(t)},C.prototype.equalInZ=function(t,e){return _.equalsWithTolerance(this.z,t.z,e)},C.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},C.prototype.clone=function(){},C.prototype.copy=function(){return new C(this)},C.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},C.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},C.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},C.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this.x),t=37*t+C.hashCode(this.y)},C.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},C.prototype.interfaces_=function(){return[E,x,e]},C.prototype.getClass=function(){return C},C.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=v.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},S.DimensionalComparator.get=function(){return L},S.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},S.NULL_ORDINATE.get=function(){return v.NaN},S.X.get=function(){return 0},S.Y.get=function(){return 1},S.Z.get=function(){return 2},Object.defineProperties(C,S);var L=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new m(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=e}};L.prototype.compare=function(t,e){var n=t,i=e,r=L.compare(n.x,i.x);if(0!==r)return r;var o=L.compare(n.y,i.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return L.compare(n.z,i.z)},L.prototype.interfaces_=function(){return[N]},L.prototype.getClass=function(){return L},L.compare=function(t,e){return t<e?-1:t>e?1:v.isNaN(t)?v.isNaN(e)?0:-1:v.isNaN(e)?1:0};var b=function(){};b.prototype.create=function(){},b.prototype.interfaces_=function(){return[]},b.prototype.getClass=function(){return b};var w=function(){},O={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};w.prototype.interfaces_=function(){return[]},w.prototype.getClass=function(){return w},w.toLocationSymbol=function(t){switch(t){case w.EXTERIOR:return\"e\";case w.BOUNDARY:return\"b\";case w.INTERIOR:return\"i\";case w.NONE:return\"-\"}throw new m(\"Unknown location value: \"+t)},O.INTERIOR.get=function(){return 0},O.BOUNDARY.get=function(){return 1},O.EXTERIOR.get=function(){return 2},O.NONE.get=function(){return-1},Object.defineProperties(w,O);var T=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},R=function(){},P={LOG_10:{configurable:!0}};R.prototype.interfaces_=function(){return[]},R.prototype.getClass=function(){return R},R.log10=function(t){var e=Math.log(t);return v.isInfinite(e)?e:v.isNaN(e)?e:e/R.LOG_10},R.min=function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r},R.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],o=arguments[2];return i<r?r:i>o?o:i}},R.wrap=function(t,e){return t<0?e- -t%e:t%e},R.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=r;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},R.average=function(t,e){return(t+e)/2},P.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(R,P);var D=function(t){this.str=t};D.prototype.append=function(t){this.str+=t},D.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},D.prototype.toString=function(t){return this.str};var M=function(t){this.value=t};M.prototype.intValue=function(){return this.value},M.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},M.isNaN=function(t){return Number.isNaN(t)};var A=function(){};A.isWhitespace=function(t){return t<=32&&t>=0||127===t},A.toUpperCase=function(t){return t.toUpperCase()};var F=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var i=arguments[0];t.call(this,t.parse(i))}}else if(2===arguments.length){var r=arguments[0],o=arguments[1];this.init(r,o)}},G={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};F.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},F.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),i=F.magnitude(n._hi),r=F.TEN.pow(i);(n=n.divide(r)).gt(F.TEN)?(n=n.divide(F.TEN),i+=1):n.lt(F.ONE)&&(n=n.multiply(F.TEN),i-=1);for(var o=i+1,s=new D,a=F.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(\".\");var l=Math.trunc(n._hi);if(l<0)break;var c=!1,p=0;l>9?(c=!0,p=\"9\"):p=\"0\"+l,s.append(p),n=n.subtract(F.valueOf(l)).multiply(F.TEN),c&&n.selfAdd(F.TEN);var h=!0,f=F.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(h=!1),!h)break}return e[0]=i,s.toString()},F.prototype.sqr=function(){return this.multiply(this)},F.prototype.doubleValue=function(){return this._hi+this._lo},F.prototype.subtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},F.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},F.prototype.isZero=function(){return 0===this._hi&&0===this._lo},F.prototype.selfSubtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},F.prototype.getSpecialNumberString=function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},F.prototype.min=function(t){return this.le(t)?this:t},F.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null,c=null,p=null;return u=this._hi/n,l=F.SPLIT*u,r=l-u,p=F.SPLIT*n,r=l-r,o=u-r,s=p-n,c=u*n,s=p-s,a=n-s,p=r*s-c+r*a+o*s+o*a,l=(this._hi-c-p+this._lo-u*i)/n,p=u+l,this._hi=p,this._lo=u-p+l,this}},F.prototype.dump=function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"},F.prototype.divide=function(){if(arguments[0]instanceof F){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=F.SPLIT*o)-(e=s-o)),u=e*(i=(u=F.SPLIT*t._hi)-(i=u-t._hi))-(a=o*t._hi)+e*(r=t._hi-i)+n*i+n*r,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new F(u=o+s,o-u+s)}if(\"number\"==typeof arguments[0]){var l=arguments[0];return v.isNaN(l)?F.createNaN():F.copy(this).selfDivide(l,0)}},F.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},F.prototype.pow=function(t){if(0===t)return F.valueOf(1);var e=new F(this),n=F.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),(i/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},F.prototype.ceil=function(){if(this.isNaN())return F.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new F(t,e)},F.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},F.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},F.prototype.setValue=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},F.prototype.max=function(t){return this.ge(t)?this:t},F.prototype.sqrt=function(){if(this.isZero())return F.valueOf(0);if(this.isNegative())return F.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=F.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)},F.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,o=null,s=null,a=null;return r=this._hi+e,s=r-this._hi,o=r-s,o=e-s+(this._hi-o),a=o+this._lo,n=r+a,i=a+(r-n),this._hi=n+i,this._lo=i+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],c=null,p=null,h=null,f=null,g=null,d=null,y=null;f=this._hi+u,p=this._lo+l,g=f-(d=f-this._hi),h=p-(y=p-this._lo);var _=(c=f+(d=(g=u-d+(this._hi-g))+p))+(d=(h=l-y+(this._lo-h))+(d+(f-c))),m=d+(c-_);return this._hi=_,this._lo=m,this}},F.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null;r=(u=F.SPLIT*this._hi)-this._hi,l=F.SPLIT*n,r=u-r,o=this._hi-r,s=l-n;var c=(u=this._hi*n)+(l=r*(s=l-s)-u+r*(a=n-s)+o*s+o*a+(this._hi*i+this._lo*n)),p=l+(r=u-c);return this._hi=c,this._lo=p,this}},F.prototype.selfSqr=function(){return this.selfMultiply(this)},F.prototype.floor=function(){if(this.isNaN())return F.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new F(t,e)},F.prototype.negate=function(){return this.isNaN()?this:new F(-this._hi,-this._lo)},F.prototype.clone=function(){},F.prototype.multiply=function(){if(arguments[0]instanceof F){var t=arguments[0];return t.isNaN()?F.createNaN():F.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return v.isNaN(e)?F.createNaN():F.copy(this).selfMultiply(e,0)}},F.prototype.isNaN=function(){return v.isNaN(this._hi)},F.prototype.intValue=function(){return Math.trunc(this._hi)},F.prototype.toString=function(){var t=F.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},F.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(i<0)r=\"0.\"+F.stringOfChar(\"0\",-i)+n;else if(-1===n.indexOf(\".\")){var o=i-n.length;r=n+F.stringOfChar(\"0\",o)+\".0\"}return this.isNegative()?\"-\"+r:r},F.prototype.reciprocal=function(){var t=null,e=null,n=null,i=null,r=null,o=null,s=null,a=null;e=(r=1/this._hi)-(t=(o=F.SPLIT*r)-(t=o-r)),n=(a=F.SPLIT*this._hi)-this._hi;var u=r+(o=(1-(s=r*this._hi)-(a=t*(n=a-n)-s+t*(i=this._hi-n)+e*n+e*i)-r*this._lo)/this._hi);return new F(u,r-u+o)},F.prototype.toSciNotation=function(){if(this.isZero())return F.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=F.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new Error(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var o=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+o+i:o+i},F.prototype.abs=function(){return this.isNaN()?F.NaN:this.isNegative()?this.negate():new F(this)},F.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},F.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},F.prototype.add=function(){if(arguments[0]instanceof F){var t=arguments[0];return F.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return F.copy(this).selfAdd(e)}},F.prototype.init=function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof F){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._hi=n,this._lo=i}},F.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},F.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},F.prototype.trunc=function(){return this.isNaN()?F.NaN:this.isPositive()?this.floor():this.ceil()},F.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},F.prototype.interfaces_=function(){return[e,E,x]},F.prototype.getClass=function(){return F},F.sqr=function(t){return F.valueOf(t).selfMultiply(t)},F.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return F.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new F(e)}},F.sqrt=function(t){return F.valueOf(t).sqrt()},F.parse=function(t){for(var e=0,n=t.length;A.isWhitespace(t.charAt(e));)e++;var i=!1;if(e<n){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var o=new F,s=0,a=0,u=0;!(e>=n);){var l=t.charAt(e);if(e++,A.isDigit(l)){var c=l-\"0\";o.selfMultiply(F.TEN),o.selfAdd(c),s++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var p=t.substring(e);try{u=M.parseInt(p)}catch(e){throw e instanceof Error?new Error(\"Invalid exponent \"+p+\" in string \"+t):e}break}throw new Error(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=s}}var h=o,f=s-a-u;if(0===f)h=o;else if(f>0){var g=F.TEN.pow(f);h=o.divide(g)}else if(f<0){var d=F.TEN.pow(-f);h=o.multiply(d)}return i?h.negate():h},F.createNaN=function(){return new F(v.NaN,v.NaN)},F.copy=function(t){return new F(t)},F.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i},F.stringOfChar=function(t,e){for(var n=new D,i=0;i<e;i++)n.append(t);return n.toString()},G.PI.get=function(){return new F(3.141592653589793,1.2246467991473532e-16)},G.TWO_PI.get=function(){return new F(6.283185307179586,2.4492935982947064e-16)},G.PI_2.get=function(){return new F(1.5707963267948966,6.123233995736766e-17)},G.E.get=function(){return new F(2.718281828459045,1.4456468917292502e-16)},G.NaN.get=function(){return new F(v.NaN,v.NaN)},G.EPS.get=function(){return 1.23259516440783e-32},G.SPLIT.get=function(){return 134217729},G.MAX_PRINT_DIGITS.get=function(){return 32},G.TEN.get=function(){return F.valueOf(10)},G.ONE.get=function(){return F.valueOf(1)},G.SCI_NOT_EXPONENT_CHAR.get=function(){return\"E\"},G.SCI_NOT_ZERO.get=function(){return\"0.0E0\"},Object.defineProperties(F,G);var q=function(){},B={DP_SAFE_EPSILON:{configurable:!0}};q.prototype.interfaces_=function(){return[]},q.prototype.getClass=function(){return q},q.orientationIndex=function(t,e,n){var i=q.orientationIndexFilter(t,e,n);if(i<=1)return i;var r=F.valueOf(e.x).selfAdd(-t.x),o=F.valueOf(e.y).selfAdd(-t.y),s=F.valueOf(n.x).selfAdd(-e.x),a=F.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},q.signOfDet2x2=function(t,e,n,i){return t.multiply(i).selfSubtract(e.multiply(n)).signum()},q.intersection=function(t,e,n,i){var r=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(e.x).selfSubtract(t.x)),o=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(e.y).selfSubtract(t.y)),s=r.subtract(o),a=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),u=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u).selfDivide(s).doubleValue(),c=F.valueOf(t.x).selfAdd(F.valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),p=F.valueOf(e.x).selfSubtract(t.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),h=F.valueOf(e.y).selfSubtract(t.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),f=p.subtract(h).selfDivide(s).doubleValue(),g=F.valueOf(n.y).selfAdd(F.valueOf(i.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new C(c,g)},q.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=r-o;if(r>0){if(o<=0)return q.signum(s);i=r+o}else{if(!(r<0))return q.signum(s);if(o>=0)return q.signum(s);i=-r-o}var a=q.DP_SAFE_EPSILON*i;return s>=a||-s>=a?q.signum(s):2},q.signum=function(t){return t>0?1:t<0?-1:0},B.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(q,B);var V=function(){},U={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};U.X.get=function(){return 0},U.Y.get=function(){return 1},U.Z.get=function(){return 2},U.M.get=function(){return 3},V.prototype.setOrdinate=function(t,e,n){},V.prototype.size=function(){},V.prototype.getOrdinate=function(t,e){},V.prototype.getCoordinate=function(){},V.prototype.getCoordinateCopy=function(t){},V.prototype.getDimension=function(){},V.prototype.getX=function(t){},V.prototype.clone=function(){},V.prototype.expandEnvelope=function(t){},V.prototype.copy=function(){},V.prototype.getY=function(t){},V.prototype.toCoordinateArray=function(){},V.prototype.interfaces_=function(){return[x]},V.prototype.getClass=function(){return V},Object.defineProperties(V,U);var z=function(){},X=function(t){function e(){t.call(this,\"Projective point not representable on the Cartesian plane.\")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(z),Y=function(){};Y.arraycopy=function(t,e,n,i,r){for(var o=0,s=e;s<e+r;s++)n[i+o]=t[s],o++},Y.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]};var k=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.x=n,this.y=i,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var r=arguments[0],o=arguments[1];this.x=r.y*o.w-o.y*r.w,this.y=o.x*r.w-r.x*o.w,this.w=r.x*o.y-o.x*r.y}else if(arguments[0]instanceof C&&arguments[1]instanceof C){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2];this.x=u,this.y=l,this.w=c}else if(4===arguments.length){var p=arguments[0],h=arguments[1],f=arguments[2],g=arguments[3],d=p.y-h.y,y=h.x-p.x,_=p.x*h.y-h.x*p.y,m=f.y-g.y,v=g.x-f.x,I=f.x*g.y-g.x*f.y;this.x=y*I-v*_,this.y=m*_-d*I,this.w=d*v-m*y}};k.prototype.getY=function(){var t=this.y/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getX=function(){var t=this.x/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getCoordinate=function(){var t=new C;return t.x=this.getX(),t.y=this.getY(),t},k.prototype.interfaces_=function(){return[]},k.prototype.getClass=function(){return k},k.intersection=function(t,e,n,i){var r=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-i.y,u=i.x-n.x,l=n.x*i.y-i.x*n.y,c=r*u-a*o,p=(o*l-u*s)/c,h=(a*s-r*l)/c;if(v.isNaN(p)||v.isInfinite(p)||v.isNaN(h)||v.isInfinite(h))throw new X;return new C(p,h)};var j=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof C){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},H={serialVersionUID:{configurable:!0}};j.prototype.getArea=function(){return this.getWidth()*this.getHeight()},j.prototype.equals=function(t){if(!(t instanceof j))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},j.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new j;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,r=this._maxy<t._maxy?this._maxy:t._maxy;return new j(e,i,n,r)},j.prototype.isNull=function(){return this._maxx<this._minx},j.prototype.getMaxX=function(){return this._maxx},j.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof j){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&i>=this._miny&&i<=this._maxy)}},j.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof C){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||i>this._maxy||i<this._miny)}},j.prototype.getMinY=function(){return this._miny},j.prototype.getMinX=function(){return this._minx},j.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=i,this._maxy=i):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),i<this._miny&&(this._miny=i),i>this._maxy&&(this._maxy=i))}},j.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},j.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},j.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},j.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},j.prototype.toString=function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"},j.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},j.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},j.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},j.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},j.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof C){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},j.prototype.centre=function(){return this.isNull()?null:new C((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},j.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];r<o?(this._minx=r,this._maxx=o):(this._minx=o,this._maxx=r),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},j.prototype.getMaxY=function(){return this._maxy},j.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},j.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this._minx),t=37*t+C.hashCode(this._maxx),t=37*t+C.hashCode(this._miny),t=37*t+C.hashCode(this._maxy)},j.prototype.interfaces_=function(){return[E,e]},j.prototype.getClass=function(){return j},j.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(i.x,r.x),c=Math.max(i.x,r.x);return!(l>u)&&(!(c<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(i.y,r.y),c=Math.max(i.y,r.y),!(l>u)&&!(c<a)))}},H.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(j,H);var W={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/},K=function(t){this.geometryFactory=t||new _e};K.prototype.read=function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=W.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&((r=W.emptyTypeStr.exec(t))[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],Q[n]&&(e=Q[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},K.prototype.write=function(t){return this.extractGeometry(t)},K.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!J[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+\" EMPTY\":n+\"(\"+J[e].apply(this,[t])+\")\"};var J={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return J.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.point.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+J.linestring.apply(this,[t._shell])+\")\");for(var n=0,i=t._holes.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.polygon.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(\",\")}},Q={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(W.spaces);return this.geometryFactory.createPoint(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(W.parenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,o=t.trim().split(W.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(W.trimParens,\"$1\"),n=Q.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n._points),0===a?r=i:s.push(i);return this.geometryFactory.createPolygon(r,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(W.doubleParenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\")).trim().split(\"|\"),n=[],i=0,r=e.length;i<r;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}},Z=function(t){this.parser=new K(t)};Z.prototype.write=function(t){return this.parser.write(t)},Z.toLineString=function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"};var $=function(t){function e(e){t.call(this,e),this.name=\"RuntimeException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),tt=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}($),et=function(){};et.prototype.interfaces_=function(){return[]},et.prototype.getClass=function(){return et},et.shouldNeverReachHere=function(){if(0===arguments.length)et.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new tt(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},et.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],et.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new tt:new tt(e)},et.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],et.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new tt(\"Expected \"+t+\" but encountered \"+e+(null!==n?\": \"+n:\"\"))};var nt=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new C,this._intPt[1]=new C,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},it={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};nt.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},nt.prototype.getTopologySummary=function(){var t=new D;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},nt.prototype.computeIntersection=function(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)},nt.prototype.getIntersectionNum=function(){return this._result},nt.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},nt.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},nt.prototype.setPrecisionModel=function(t){this._precisionModel=t},nt.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},nt.prototype.getIntersection=function(t){return this._intPt[t]},nt.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},nt.prototype.hasIntersection=function(){return this._result!==nt.NO_INTERSECTION},nt.prototype.getEdgeDistance=function(t,e){return nt.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},nt.prototype.isCollinear=function(){return this._result===nt.COLLINEAR_INTERSECTION},nt.prototype.toString=function(){return Z.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Z.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},nt.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},nt.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},nt.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},nt.prototype.interfaces_=function(){return[]},nt.prototype.getClass=function(){return nt},nt.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=i>r?i:r;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=i>r?s:a)||t.equals(e)||(o=Math.max(s,a))}return et.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o},nt.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=Math.sqrt(i*i+r*r);return et.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o},it.DONT_INTERSECT.get=function(){return 0},it.DO_INTERSECT.get=function(){return 1},it.COLLINEAR.get=function(){return 2},it.NO_INTERSECTION.get=function(){return 0},it.POINT_INTERSECTION.get=function(){return 1},it.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(nt,it);var rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new j(this._inputLines[0][0],this._inputLines[0][1]),n=new j(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2];if(this._isProper=!1,j.intersects(n,i,e)&&0===at.orientationIndex(n,i,e)&&0===at.orientationIndex(i,n,e))return this._isProper=!0,(e.equals(n)||e.equals(i))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.safeHCoordinateIntersection=function(t,n,i,r){var o=null;try{o=k.intersection(t,n,i,r)}catch(s){if(!(s instanceof X))throw s;o=e.nearestEndpoint(t,n,i,r)}return o},e.prototype.intersection=function(t,n,i,r){var o=this.intersectionWithNormalization(t,n,i,r);return this.isInSegmentEnvelopes(o)||(o=new C(e.nearestEndpoint(t,n,i,r))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,i){var r=t,o=Math.abs(r);return Math.abs(e)<o&&(r=e,o=Math.abs(e)),Math.abs(n)<o&&(r=n,o=Math.abs(n)),Math.abs(i)<o&&(r=i),r},e.prototype.checkDD=function(t,e,n,i,r){var o=q.intersection(t,e,n,i),s=this.isInSegmentEnvelopes(o);Y.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),r.distance(o)>1e-4&&Y.out.println(\"Distance = \"+r.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,i){var r=new C(t),o=new C(e),s=new C(n),a=new C(i),u=new C;this.normalizeToEnvCentre(r,o,s,a,u);var l=this.safeHCoordinateIntersection(r,o,s,a);return l.x+=u.x,l.y+=u.y,l},e.prototype.computeCollinearIntersection=function(e,n,i,r){var o=j.intersects(e,n,i),s=j.intersects(e,n,r),a=j.intersects(i,r,e),u=j.intersects(i,r,n);return o&&s?(this._intPt[0]=i,this._intPt[1]=r,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,i,r){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,p=n.x>i.x?n.x:i.x,h=n.y>i.y?n.y:i.y,f=((o>l?o:l)+(a<p?a:p))/2,g=((s>c?s:c)+(u<h?u:h))/2;r.x=f,r.y=g,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.computeIntersect=function(e,n,i,r){if(this._isProper=!1,!j.intersects(e,n,i,r))return t.NO_INTERSECTION;var o=at.orientationIndex(e,n,i),s=at.orientationIndex(e,n,r);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=at.orientationIndex(i,r,e),u=at.orientationIndex(i,r,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,i,r):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(i)||e.equals2D(r)?this._intPt[0]=e:n.equals2D(i)||n.equals2D(r)?this._intPt[0]=n:0===o?this._intPt[0]=new C(i):0===s?this._intPt[0]=new C(r):0===a?this._intPt[0]=new C(e):0===u&&(this._intPt[0]=new C(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,i,r)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,i){var r=t,o=at.distancePointLine(t,n,i),s=at.distancePointLine(e,n,i);return s<o&&(o=s,r=e),(s=at.distancePointLine(n,t,e))<o&&(o=s,r=n),(s=at.distancePointLine(i,t,e))<o&&(o=s,r=i),r},e}(nt),ot=function(){};ot.prototype.interfaces_=function(){return[]},ot.prototype.getClass=function(){return ot},ot.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ot.signOfDet2x2(i,r,o,s)},ot.signOfDet2x2=function(t,e,n,i){var r=null,o=null,s=null;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?e<=i||(r=-r,o=t,t=n,n=o,o=e,e=i,i=o):e<=-i?(r=-r,n=-n,i=-i):(o=t,t=-n,n=o,o=e,e=-i,i=o):i>0?-e<=i?(r=-r,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=i,i=o):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,o=-t,t=-n,n=o,o=-e,e=-i,i=o),t>0){if(!(n>0))return r;if(!(t<=n))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(i-=s*e)<0)return-r;if(i>e)return r;if(t>n+n){if(e<i+i)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(s=Math.floor(t/n),t-=s*n,(e-=s*i)<0)return r;if(e>i)return-r;if(n>t+t){if(i<e+e)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}};var st=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};st.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var r=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ot.signOfDet2x2(r,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},st.prototype.isPointInPolygon=function(){return this.getLocation()!==w.EXTERIOR},st.prototype.getLocation=function(){return this._isPointOnSegment?w.BOUNDARY:this._crossingCount%2==1?w.INTERIOR:w.EXTERIOR},st.prototype.isOnSegment=function(){return this._isPointOnSegment},st.prototype.interfaces_=function(){return[]},st.prototype.getClass=function(){return st},st.locatePointInRing=function(){if(arguments[0]instanceof C&&T(arguments[1],V)){for(var t=arguments[0],e=arguments[1],n=new st(t),i=new C,r=new C,o=1;o<e.size();o++)if(e.getCoordinate(o,i),e.getCoordinate(o-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof C&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new st(s),l=1;l<a.length;l++){var c=a[l],p=a[l-1];if(u.countSegment(c,p),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var at=function(){},ut={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};at.prototype.interfaces_=function(){return[]},at.prototype.getClass=function(){return at},at.orientationIndex=function(t,e,n){return q.orientationIndex(t,e,n)},at.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,o=t[i+1].y;e+=r*(t[i-1].y-o)}return e/2}if(T(arguments[0],V)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new C,l=new C,c=new C;s.getCoordinate(0,l),s.getCoordinate(1,c);var p=l.x;c.x-=p;for(var h=0,f=1;f<a-1;f++)u.y=l.y,l.x=c.x,l.y=c.y,s.getCoordinate(f+1,c),c.x-=p,h+=l.x*(u.y-c.y);return h/2}},at.distanceLineLine=function(t,e,n,i){if(t.equals(e))return at.distancePointLine(t,n,i);if(n.equals(i))return at.distancePointLine(i,t,e);var r=!1;if(j.intersects(t,e,n,i)){var o=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===o)r=!0;else{var s=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(r=!0)}}else r=!0;return r?R.min(at.distancePointLine(t,n,i),at.distancePointLine(e,n,i),at.distancePointLine(n,t,e),at.distancePointLine(i,t,e)):0},at.isPointInRing=function(t,e){return at.locatePointInRing(t,e)!==w.EXTERIOR},at.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new C;t.getCoordinate(0,i);for(var r=i.x,o=i.y,s=1;s<e;s++){t.getCoordinate(s,i);var a=i.x,u=i.y,l=a-r,c=u-o;n+=Math.sqrt(l*l+c*c),r=a,o=u}return n},at.isCCW=function(t){var e=t.length-1;if(e<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],i=0,r=1;r<=e;r++){var o=t[r];o.y>n.y&&(n=o,i=r)}var s=i;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==i);var a=i;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==i);var u=t[s],l=t[a];if(u.equals2D(n)||l.equals2D(n)||u.equals2D(l))return!1;var c=at.computeOrientation(u,n,l),p=!1;return p=0===c?u.x>l.x:c>0,p},at.locatePointInRing=function(t,e){return st.locatePointInRing(t,e)},at.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},at.computeOrientation=function(t,e,n){return at.orientationIndex(t,e,n)},at.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new m(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),i=0;i<e.length-1;i++){var r=at.distancePointLine(t,e[i],e[i+1]);r<n&&(n=r)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),l=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(l<=0)return o.distance(s);if(l>=1)return o.distance(a);var c=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(c)*Math.sqrt(u)}},at.isOnLine=function(t,e){for(var n=new rt,i=1;i<e.length;i++){var r=e[i-1],o=e[i];if(n.computeIntersection(t,r,o),n.hasIntersection())return!0}return!1},ut.CLOCKWISE.get=function(){return-1},ut.RIGHT.get=function(){return at.CLOCKWISE},ut.COUNTERCLOCKWISE.get=function(){return 1},ut.LEFT.get=function(){return at.COUNTERCLOCKWISE},ut.COLLINEAR.get=function(){return 0},ut.STRAIGHT.get=function(){return at.COLLINEAR},Object.defineProperties(at,ut);var lt=function(){};lt.prototype.filter=function(t){},lt.prototype.interfaces_=function(){return[]},lt.prototype.getClass=function(){return lt};var ct=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},pt={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};ct.prototype.isGeometryCollection=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION},ct.prototype.getFactory=function(){return this._factory},ct.prototype.getGeometryN=function(t){return this},ct.prototype.getArea=function(){return 0},ct.prototype.isRectangle=function(){return!1},ct.prototype.equals=function(){if(arguments[0]instanceof ct){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof ct))return!1;var n=e;return this.equalsExact(n)}},ct.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},ct.prototype.geometryChanged=function(){this.apply(ct.geometryChangedFilter)},ct.prototype.geometryChangedAction=function(){this._envelope=null},ct.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},ct.prototype.getLength=function(){return 0},ct.prototype.getNumGeometries=function(){return 1},ct.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,i)}},ct.prototype.getUserData=function(){return this._userData},ct.prototype.getSRID=function(){return this._SRID},ct.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},ct.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION)throw new m(\"This method does not support GeometryCollection arguments\")},ct.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},ct.prototype.norm=function(){var t=this.copy();return t.normalize(),t},ct.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},ct.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new j(this._envelope)},ct.prototype.setSRID=function(t){this._SRID=t},ct.prototype.setUserData=function(t){this._userData=t},ct.prototype.compare=function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),o=i.next(),s=r.compareTo(o);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0},ct.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},ct.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===ct.SORTINDEX_MULTIPOINT||this.getSortIndex()===ct.SORTINDEX_MULTILINESTRING||this.getSortIndex()===ct.SORTINDEX_MULTIPOLYGON},ct.prototype.interfaces_=function(){return[x,E,e]},ct.prototype.getClass=function(){return ct},ct.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},ct.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},pt.serialVersionUID.get=function(){return 0x799ea46522854c00},pt.SORTINDEX_POINT.get=function(){return 0},pt.SORTINDEX_MULTIPOINT.get=function(){return 1},pt.SORTINDEX_LINESTRING.get=function(){return 2},pt.SORTINDEX_LINEARRING.get=function(){return 3},pt.SORTINDEX_MULTILINESTRING.get=function(){return 4},pt.SORTINDEX_POLYGON.get=function(){return 5},pt.SORTINDEX_MULTIPOLYGON.get=function(){return 6},pt.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},pt.geometryChangedFilter.get=function(){return ht},Object.defineProperties(ct,pt);var ht=function(){};ht.interfaces_=function(){return[lt]},ht.filter=function(t){t.geometryChangedAction()};var ft=function(){};ft.prototype.filter=function(t){},ft.prototype.interfaces_=function(){return[]},ft.prototype.getClass=function(){return ft};var gt=function(){},dt={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};gt.prototype.isInBoundary=function(t){},gt.prototype.interfaces_=function(){return[]},gt.prototype.getClass=function(){return gt},dt.Mod2BoundaryNodeRule.get=function(){return yt},dt.EndPointBoundaryNodeRule.get=function(){return _t},dt.MultiValentEndPointBoundaryNodeRule.get=function(){return mt},dt.MonoValentEndPointBoundaryNodeRule.get=function(){return vt},dt.MOD2_BOUNDARY_RULE.get=function(){return new yt},dt.ENDPOINT_BOUNDARY_RULE.get=function(){return new _t},dt.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mt},dt.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new vt},dt.OGC_SFS_BOUNDARY_RULE.get=function(){return gt.MOD2_BOUNDARY_RULE},Object.defineProperties(gt,dt);var yt=function(){};yt.prototype.isInBoundary=function(t){return t%2==1},yt.prototype.interfaces_=function(){return[gt]},yt.prototype.getClass=function(){return yt};var _t=function(){};_t.prototype.isInBoundary=function(t){return t>0},_t.prototype.interfaces_=function(){return[gt]},_t.prototype.getClass=function(){return _t};var mt=function(){};mt.prototype.isInBoundary=function(t){return t>1},mt.prototype.interfaces_=function(){return[gt]},mt.prototype.getClass=function(){return mt};var vt=function(){};vt.prototype.isInBoundary=function(t){return 1===t},vt.prototype.interfaces_=function(){return[gt]},vt.prototype.getClass=function(){return vt};var It=function(){};It.prototype.add=function(){},It.prototype.addAll=function(){},It.prototype.isEmpty=function(){},It.prototype.iterator=function(){},It.prototype.size=function(){},It.prototype.toArray=function(){},It.prototype.remove=function(){},(n.prototype=new Error).name=\"IndexOutOfBoundsException\";var Et=function(){};Et.prototype.hasNext=function(){},Et.prototype.next=function(){},Et.prototype.remove=function(){};var xt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(It);(i.prototype=new Error).name=\"NoSuchElementException\";var Nt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,It]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ct(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new n;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;n<i;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(xt),Ct=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new i;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Et),St=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.ensureCapacity(n.length),this.add(n,i)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=!1,r=e.iterator();r.hasNext();)this.add(r.next(),n),i=!0;return i}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];return this.add(n,i,!0),!0}if(arguments[0]instanceof C&&\"boolean\"==typeof arguments[1]){var r=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(r))return null}t.prototype.add.call(this,r)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var l=0;l<a.length;l++)this.add(a[l],u);else for(var c=a.length-1;c>=0;c--)this.add(a[c],u);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(p>0){if(this.get(p-1).equals2D(h))return null}if(p<f){if(this.get(p).equals2D(h))return null}}}t.prototype.add.call(this,p,h)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new C(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(Nt),Lt=function(){},bt={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};bt.ForwardComparator.get=function(){return wt},bt.BidirectionalComparator.get=function(){return Ot},bt.coordArrayType.get=function(){return new Array(0).fill(null)},Lt.prototype.interfaces_=function(){return[]},Lt.prototype.getClass=function(){return Lt},Lt.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Lt.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(Lt.indexOf(i,e)<0)return i}return null},Lt.scroll=function(t,e){var n=Lt.indexOf(e,t);if(n<0)return null;var i=new Array(t.length).fill(null);Y.arraycopy(t,n,i,0,t.length-n),Y.arraycopy(t,0,i,t.length-n,n),Y.arraycopy(i,0,t,0,t.length)},Lt.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var s=0;s<i.length;s++)if(0!==o.compare(i[s],r[s]))return!1;return!0}},Lt.intersection=function(t,e){for(var n=new St,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},Lt.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Lt.removeRepeatedPoints=function(t){if(!Lt.hasRepeatedPoints(t))return t;return new St(t,!1).toCoordinateArray()},Lt.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},Lt.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,o=0;o<t.length;o++)null!==t[o]&&(i[r++]=t[o]);return i},Lt.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new C(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new C(i[r+u])},Lt.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},Lt.envelope=function(t){for(var e=new j,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Lt.toCoordinateArray=function(t){return t.toArray(Lt.coordArrayType)},Lt.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Lt.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Lt.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},Lt.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},Lt.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Lt.extract=function(t,e,n){e=R.clamp(e,0,t.length);var i=(n=R.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var o=0,s=e;s<=n;s++)r[o++]=t[s];return r},Object.defineProperties(Lt,bt);var wt=function(){};wt.prototype.compare=function(t,e){return Lt.compare(t,e)},wt.prototype.interfaces_=function(){return[N]},wt.prototype.getClass=function(){return wt};var Ot=function(){};Ot.prototype.compare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=Lt.compare(n,i);return Lt.isEqualReversed(n,i)?0:r},Ot.prototype.OLDcompare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=Lt.increasingDirection(n),o=Lt.increasingDirection(i),s=r>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(i[a]);if(0!==l)return l;s+=r,a+=o}return 0},Ot.prototype.interfaces_=function(){return[N]},Ot.prototype.getClass=function(){return Ot};var Tt=function(){};Tt.prototype.get=function(){},Tt.prototype.put=function(){},Tt.prototype.size=function(){},Tt.prototype.values=function(){},Tt.prototype.entrySet=function(){};var Rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Tt);(r.prototype=new Error).name=\"OperationNotSupported\",(o.prototype=new It).contains=function(){};var Pt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Dt(this)},e}(o),Dt=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new i;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new r},e}(Et),Mt=0;(p.prototype=new Rt).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},p.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do{if(n=r,(i=t.compareTo(r.key))<0)r=r.left;else{if(!(i>0)){var o=r.value;return r.value=e,o}r=r.right}}while(null!==r);var s={key:t,left:null,right:null,value:e,parent:n,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},p.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(a(t)===l(a(a(t)))){var e=c(a(a(t)));1===s(e)?(u(a(t),Mt),u(e,Mt),u(a(a(t)),1),t=a(a(t))):(t===c(a(t))&&(t=a(t),this.rotateLeft(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateRight(a(a(t))))}else{var n=l(a(a(t)));1===s(n)?(u(a(t),Mt),u(n,Mt),u(a(a(t)),1),t=a(a(t))):(t===l(a(t))&&(t=a(t),this.rotateRight(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateLeft(a(a(t))))}this.root_.color=Mt},p.prototype.values=function(){var t=new Nt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=p.successor(e));)t.add(e.value);return t},p.prototype.entrySet=function(){var t=new Pt,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=p.successor(e));)t.add(e);return t},p.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},p.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},p.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},p.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,i=t;null!==n&&i===n.right;)i=n,n=n.parent;return n},p.prototype.size=function(){return this.size_};var At=function(){};At.prototype.interfaces_=function(){return[]},At.prototype.getClass=function(){return At},h.prototype=new o,(f.prototype=new h).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},f.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},f.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},f.prototype.remove=function(t){throw new r},f.prototype.size=function(){return this.array_.length},f.prototype.isEmpty=function(){return 0===this.array_.length},f.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},f.prototype.iterator=function(){return new Ft(this)};var Ft=function(t){this.treeSet_=t,this.position_=0};Ft.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new i;return this.treeSet_.array_[this.position_++]},Ft.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Ft.prototype.remove=function(){throw new r};var Gt=function(){};Gt.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)i=function(t,e){return t.compareTo(e)},r.sort(i);else if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else if(3===arguments.length){(e=r.slice(arguments[1],arguments[2])).sort();var o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])}else if(4===arguments.length)for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])},Gt.asList=function(t){for(var e=new Nt,n=0,i=t.length;n<i;n++)e.add(t[n]);return e};var qt=function(){},Bt={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bt.P.get=function(){return 0},Bt.L.get=function(){return 1},Bt.A.get=function(){return 2},Bt.FALSE.get=function(){return-1},Bt.TRUE.get=function(){return-2},Bt.DONTCARE.get=function(){return-3},Bt.SYM_FALSE.get=function(){return\"F\"},Bt.SYM_TRUE.get=function(){return\"T\"},Bt.SYM_DONTCARE.get=function(){return\"*\"},Bt.SYM_P.get=function(){return\"0\"},Bt.SYM_L.get=function(){return\"1\"},Bt.SYM_A.get=function(){return\"2\"},qt.prototype.interfaces_=function(){return[]},qt.prototype.getClass=function(){return qt},qt.toDimensionSymbol=function(t){switch(t){case qt.FALSE:return qt.SYM_FALSE;case qt.TRUE:return qt.SYM_TRUE;case qt.DONTCARE:return qt.SYM_DONTCARE;case qt.P:return qt.SYM_P;case qt.L:return qt.SYM_L;case qt.A:return qt.SYM_A}throw new m(\"Unknown dimension value: \"+t)},qt.toDimensionValue=function(t){switch(A.toUpperCase(t)){case qt.SYM_FALSE:return qt.FALSE;case qt.SYM_TRUE:return qt.TRUE;case qt.SYM_DONTCARE:return qt.DONTCARE;case qt.SYM_P:return qt.P;case qt.SYM_L:return qt.L;case qt.SYM_A:return qt.A}throw new m(\"Unknown dimension symbol: \"+t)},Object.defineProperties(qt,Bt);var Vt=function(){};Vt.prototype.filter=function(t){},Vt.prototype.interfaces_=function(){return[]},Vt.prototype.getClass=function(){return Vt};var Ut=function(){};Ut.prototype.filter=function(t,e){},Ut.prototype.isDone=function(){},Ut.prototype.isGeometryChanged=function(){},Ut.prototype.interfaces_=function(){return[]},Ut.prototype.getClass=function(){return Ut};var zt=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new m(\"geometries must not contain null elements\")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new j,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var i=this._geometries[n].getCoordinates(),r=0;r<i.length;r++)t[++e]=i[r];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._geometries.length!==i._geometries.length)return!1;for(var r=0;r<this._geometries.length;r++)if(!this._geometries[r].equalsExact(i._geometries[r],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Gt.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new f(Gt.asList(this._geometries)),n=new f(Gt.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=i,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var l=this.getGeometryN(u),c=o.getGeometryN(u),p=l.compareToSameClass(c,r);if(0!==p)return p;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(this._geometries[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){var r=arguments[0];r.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(r)}else if(T(arguments[0],lt)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),et.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return\"GeometryCollection\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(ct),Xt=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.getGeometryType=function(){return\"MultiLineString\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(zt),Yt=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=gt.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=i}};Yt.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Yt.prototype.getBoundary=function(){return this._geom instanceof Kt?this.boundaryLineString(this._geom):this._geom instanceof Xt?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Yt.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Yt.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Yt.prototype.computeBoundaryCoordinates=function(t){var e=new Nt;this._endpointMap=new p;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this._endpointMap.entrySet().iterator();r.hasNext();){var o=r.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Lt.toCoordinateArray(e)},Yt.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new kt,this._endpointMap.put(t,e)),e.count++},Yt.prototype.interfaces_=function(){return[]},Yt.prototype.getClass=function(){return Yt},Yt.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Yt(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Yt(e,n).getBoundary()}};var kt=function(){this.count=null};kt.prototype.interfaces_=function(){return[]},kt.prototype.getClass=function(){return kt};var jt=function(){},Ht={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};jt.prototype.interfaces_=function(){return[]},jt.prototype.getClass=function(){return jt},jt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;i<e;i++)n[i]=t;return String(n)},jt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=\"\",s=new function(){}(new function(){}(jt.getStackTrace(i))),a=0;a<r;a++)try{o+=s.readLine()+jt.NEWLINE}catch(t){if(!(t instanceof g))throw t;et.shouldNeverReachHere()}return o}},jt.split=function(t,e){for(var n=e.length,i=new Nt,r=\"\"+t,o=r.indexOf(e);o>=0;){var s=r.substring(0,o);i.add(s),o=(r=r.substring(o+n)).indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},jt.toString=function(){if(1===arguments.length){var t=arguments[0];return jt.SIMPLE_ORDINATE_FORMAT.format(t)}},jt.spaces=function(t){return jt.chars(\" \",t)},Ht.NEWLINE.get=function(){return Y.getProperty(\"line.separator\")},Ht.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}(\"0.#\")},Object.defineProperties(jt,Ht);var Wt=function(){};Wt.prototype.interfaces_=function(){return[]},Wt.prototype.getClass=function(){return Wt},Wt.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),o=0;o<r;o++)n.setOrdinate(i,o,t.getOrdinate(e,o))},Wt.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,V.X)===t.getOrdinate(e-1,V.X)&&t.getOrdinate(0,V.Y)===t.getOrdinate(e-1,V.Y))},Wt.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var i=Math.min(t.getDimension(),e.getDimension()),r=0;r<n;r++)for(var o=0;o<i;o++){var s=t.getOrdinate(r,o),a=e.getOrdinate(r,o);if(t.getOrdinate(r,o)!==e.getOrdinate(r,o)&&(!v.isNaN(s)||!v.isNaN(a)))return!1}return!0},Wt.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Wt.copy(e,0,i,0,r),r>0)for(var o=r;o<n;o++)Wt.copy(e,r-1,i,o,1);return i},Wt.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;i<=n;i++)Wt.swap(t,i,e-i)},Wt.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Wt.copy=function(t,e,n,i,r){for(var o=0;o<r;o++)Wt.copyCoord(t,e+o,n,i+o)},Wt.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new D;i.append(\"(\");for(var r=0;r<e;r++){r>0&&i.append(\" \");for(var o=0;o<n;o++)o>0&&i.append(\",\"),i.append(jt.toString(t.getOrdinate(r,o)))}return i.append(\")\"),i.toString()}},Wt.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wt.createClosedRing(t,e,4);return e.getOrdinate(0,V.X)===e.getOrdinate(n-1,V.X)&&e.getOrdinate(0,V.Y)===e.getOrdinate(n-1,V.Y)?e:Wt.createClosedRing(t,e,n+1)},Wt.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Wt.copy(e,0,i,0,r);for(var o=r;o<n;o++)Wt.copy(e,0,i,o,1);return i};var Kt=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new j:this._points.expandEnvelope(new j)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._points.size()!==i._points.size())return!1;for(var r=0;r<this._points.size();r++)if(!this.equal(this._points.getCoordinate(r),i._points.getCoordinate(r),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wt.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return at.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var r=arguments[0];return arguments[1].compare(this._points,r._points)}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(n.filter(this._points,i),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return\"LineString\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new m(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(ct),Jt=function(){};Jt.prototype.interfaces_=function(){return[]},Jt.prototype.getClass=function(){return Jt};var Qt=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new j;var t=new j;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error(\"getX called on empty Point\");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(T(arguments[0],ft)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(T(arguments[0],Ut)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return\"Point\"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error(\"getY called on empty Point\");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),et.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(ct),Zt=function(){};Zt.prototype.interfaces_=function(){return[]},Zt.prototype.getClass=function(){return Zt};var $t=function(t){function e(e,n,i){if(t.call(this,i),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new m(\"holes must not contain null elements\");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new m(\"shell is empty but holes are not\");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),i=0;i<n.length;i++)t[++e]=n[i];for(var r=0;r<this._holes.length;r++)for(var o=this._holes[r].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(at.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(at.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o===(l!==s))return!1;o=u,s=l}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e,r=this._shell,o=i._shell;if(!r.equalsExact(o,n))return!1;if(this._holes.length!==i._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(i._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);Gt.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);Y.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=Lt.minCoordinate(e.getCoordinates());Lt.scroll(i,r),Y.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],at.isCCW(e.getCoordinates())===n&&Lt.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],o=i,s=this._shell,a=o._shell,u=s.compareToSameClass(a,r);if(0!==u)return u;for(var l=this.getNumInteriorRing(),c=o.getNumInteriorRing(),p=0;p<l&&p<c;){var h=this.getInteriorRingN(p),f=o.getInteriorRingN(p),g=h.compareToSameClass(f,r);if(0!==g)return g;p++}return p<l?1:p<c?-1:0}},e.prototype.apply=function(t){if(T(t,ft)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(T(t,Ut)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(T(t,Vt))t.filter(this);else if(T(t,lt)){t.filter(this),this._shell.apply(t);for(var i=0;i<this._holes.length;i++)this._holes[i].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return\"Polygon\"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),i=0;i<n.length;i++)n[i]=this._holes[i].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(ct),te=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return\"MultiPoint\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(zt),ee=function(t){function e(e,n){e instanceof C&&n instanceof _e&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new m(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new m(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},e.prototype.getGeometryType=function(){return\"LinearRing\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Kt),ne=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new Nt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),i=0;i<n.getNumGeometries();i++)t.add(n.getGeometryN(i));var r=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r))},e.prototype.getGeometryType=function(){return\"MultiPolygon\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(zt),ie=function(t){this._factory=t||null,this._isUserDataCopied=!1},re={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};ie.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},ie.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},ie.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof zt?this.editGeometryCollection(t,e):t instanceof $t?this.editPolygon(t,e):t instanceof Qt?e.edit(t,this._factory):t instanceof Kt?e.edit(t,this._factory):(et.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},ie.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),i=new Nt,r=0;r<n.getNumGeometries();r++){var o=this.edit(n.getGeometryN(r),e);null===o||o.isEmpty()||i.add(o)}return n.getClass()===te?this._factory.createMultiPoint(i.toArray([])):n.getClass()===Xt?this._factory.createMultiLineString(i.toArray([])):n.getClass()===ne?this._factory.createMultiPolygon(i.toArray([])):this._factory.createGeometryCollection(i.toArray([]))},ie.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this._factory.createPolygon();for(var r=new Nt,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||r.add(s)}return this._factory.createPolygon(i,r.toArray([]))},ie.prototype.interfaces_=function(){return[]},ie.prototype.getClass=function(){return ie},ie.GeometryEditorOperation=function(){},re.NoOpGeometryOperation.get=function(){return oe},re.CoordinateOperation.get=function(){return se},re.CoordinateSequenceOperation.get=function(){return ae},Object.defineProperties(ie,re);var oe=function(){};oe.prototype.edit=function(t,e){return t},oe.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},oe.prototype.getClass=function(){return oe};var se=function(){};se.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof ee?e.createLinearRing(n):t instanceof Kt?e.createLineString(n):t instanceof Qt?n.length>0?e.createPoint(n[0]):e.createPoint():t},se.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},se.prototype.getClass=function(){return se};var ae=function(){};ae.prototype.edit=function(t,e){return t instanceof ee?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Kt?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ae.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},ae.prototype.getClass=function(){return ae};var ue=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new C}else if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var i=0;i<this._coordinates.length;i++)this._coordinates[i]=n.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],o=arguments[1];this._coordinates=r,this._dimension=o,null===r&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new C}},le={serialVersionUID:{configurable:!0}};ue.prototype.setOrdinate=function(t,e,n){switch(e){case V.X:this._coordinates[t].x=n;break;case V.Y:this._coordinates[t].y=n;break;case V.Z:this._coordinates[t].z=n;break;default:throw new m(\"invalid ordinateIndex\")}},ue.prototype.size=function(){return this._coordinates.length},ue.prototype.getOrdinate=function(t,e){switch(e){case V.X:return this._coordinates[t].x;case V.Y:return this._coordinates[t].y;case V.Z:return this._coordinates[t].z}return v.NaN},ue.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},ue.prototype.getCoordinateCopy=function(t){return new C(this._coordinates[t])},ue.prototype.getDimension=function(){return this._dimension},ue.prototype.getX=function(t){return this._coordinates[t].x},ue.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new ue(t,this._dimension)},ue.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},ue.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new ue(t,this._dimension)},ue.prototype.toString=function(){if(this._coordinates.length>0){var t=new D(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},ue.prototype.getY=function(t){return this._coordinates[t].y},ue.prototype.toCoordinateArray=function(){return this._coordinates},ue.prototype.interfaces_=function(){return[V,e]},ue.prototype.getClass=function(){return ue},le.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(ue,le);var ce=function(){},pe={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};ce.prototype.readResolve=function(){return ce.instance()},ce.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new ue(t)}if(T(arguments[0],V)){var e=arguments[0];return new ue(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2?new ue(n):new ue(n,i)}},ce.prototype.interfaces_=function(){return[b,e]},ce.prototype.getClass=function(){return ce},ce.instance=function(){return ce.instanceObject},pe.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},pe.instanceObject.get=function(){return new ce},Object.defineProperties(ce,pe);var he=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new Nt,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Pt;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Tt),fe=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof de){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var i=arguments[0];this._modelType=i._modelType,this._scale=i._scale}},ge={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fe.prototype.equals=function(t){if(!(t instanceof fe))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fe.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new M(n).compareTo(new M(i))},fe.prototype.getScale=function(){return this._scale},fe.prototype.isFloating=function(){return this._modelType===fe.FLOATING||this._modelType===fe.FLOATING_SINGLE},fe.prototype.getType=function(){return this._modelType},fe.prototype.toString=function(){var t=\"UNKNOWN\";return this._modelType===fe.FLOATING?t=\"Floating\":this._modelType===fe.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===fe.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},fe.prototype.makePrecise=function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(v.isNaN(t))return t;if(this._modelType===fe.FLOATING_SINGLE){return t}return this._modelType===fe.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof C){var e=arguments[0];if(this._modelType===fe.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fe.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fe.FLOATING?t=16:this._modelType===fe.FLOATING_SINGLE?t=6:this._modelType===fe.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fe.prototype.setScale=function(t){this._scale=Math.abs(t)},fe.prototype.interfaces_=function(){return[e,E]},fe.prototype.getClass=function(){return fe},fe.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},ge.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},ge.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fe,ge);var de=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},ye={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};de.prototype.readResolve=function(){return de.nameToTypeMap.get(this._name)},de.prototype.toString=function(){return this._name},de.prototype.interfaces_=function(){return[e]},de.prototype.getClass=function(){return de},ye.serialVersionUID.get=function(){return-552860263173159e4},ye.nameToTypeMap.get=function(){return new he},Object.defineProperties(de,ye),fe.Type=de,fe.FIXED=new de(\"FIXED\"),fe.FLOATING=new de(\"FLOATING\"),fe.FLOATING_SINGLE=new de(\"FLOATING SINGLE\");var _e=function t(){this._precisionModel=new fe,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?T(arguments[0],b)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fe&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},me={serialVersionUID:{configurable:!0}};_e.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new C(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new C(t.getMinX(),t.getMinY()),new C(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new C(t.getMinX(),t.getMinY()),new C(t.getMinX(),t.getMaxY()),new C(t.getMaxX(),t.getMaxY()),new C(t.getMaxX(),t.getMinY()),new C(t.getMinX(),t.getMinY())]),null)},_e.prototype.createLineString=function(t){return t?t instanceof Array?new Kt(this.getCoordinateSequenceFactory().create(t),this):T(t,V)?new Kt(t,this):void 0:new Kt(this.getCoordinateSequenceFactory().create([]),this)},_e.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xt(null,this);if(1===arguments.length){var t=arguments[0];return new Xt(t,this)}},_e.prototype.buildGeometry=function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var o=r.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(_e.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $t)return this.createMultiPolygon(_e.toPolygonArray(t));if(a instanceof Kt)return this.createMultiLineString(_e.toLineStringArray(t));if(a instanceof Qt)return this.createMultiPoint(_e.toPointArray(t));et.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},_e.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_e.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(T(arguments[0],V)){var e=arguments[0];return new Qt(e,this)}}},_e.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_e.prototype.createPolygon=function(){if(0===arguments.length)return new $t(null,null,this);if(1===arguments.length){if(T(arguments[0],V)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof ee){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new $t(i,r,this)}},_e.prototype.getSRID=function(){return this._SRID},_e.prototype.createGeometryCollection=function(){if(0===arguments.length)return new zt(null,this);if(1===arguments.length){var t=arguments[0];return new zt(t,this)}},_e.prototype.createGeometry=function(t){return new ie(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_e.prototype.getPrecisionModel=function(){return this._precisionModel},_e.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(T(arguments[0],V)){var e=arguments[0];return new ee(e,this)}}},_e.prototype.createMultiPolygon=function(){if(0===arguments.length)return new ne(null,this);if(1===arguments.length){var t=arguments[0];return new ne(t,this)}},_e.prototype.createMultiPoint=function(){if(0===arguments.length)return new te(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new te(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wt.copy(n,r,o,0,1),i[r]=this.createPoint(o)}return this.createMultiPoint(i)}}},_e.prototype.interfaces_=function(){return[e]},_e.prototype.getClass=function(){return _e},_e.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.getDefaultCoordinateSequenceFactory=function(){return ce.instance()},_e.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},me.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_e,me);var ve=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],Ie=function(t){this.geometryFactory=t||new _e};Ie.prototype.read=function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!Ee[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==ve.indexOf(n)?Ee[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Ee[n].apply(this,[e.geometries]):Ee[n].apply(this,[e])},Ie.prototype.write=function(t){var e=t.getGeometryType();if(!xe[e])throw new Error(\"Geometry is not supported\");return xe[e].apply(this,[t])};var Ee={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!Ee[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Ee.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(new C(i[0],i[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new C(t[0],t[1]),new C(t[2],t[1]),new C(t[2],t[3]),new C(t[0],t[3]),new C(t[0],t[1])])},Point:function(t){var e=new C(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Ee.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Ee.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var o=t[r],s=Ee.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(Ee.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},xe={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:\"Point\",coordinates:xe.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(xe.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=xe.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var i=0;i<t._holes.length;++i){var r=t._holes[i],o=xe.LineString.apply(this,[r]);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=i.getGeometryType();e.push(xe[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}},Ne=function(t){this.geometryFactory=t||new _e,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new Ie(this.geometryFactory)};Ne.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fe.FIXED&&this.reducePrecision(e),e},Ne.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ce=function(){this.parser=new Ie(this.geometryFactory)};Ce.prototype.write=function(t){return this.parser.write(t)};var Se=function(){},Le={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Se.prototype.interfaces_=function(){return[]},Se.prototype.getClass=function(){return Se},Se.opposite=function(t){return t===Se.LEFT?Se.RIGHT:t===Se.RIGHT?Se.LEFT:t},Le.ON.get=function(){return 0},Le.LEFT.get=function(){return 1},Le.RIGHT.get=function(){return 2},Object.defineProperties(Se,Le),(d.prototype=new Error).name=\"EmptyStackException\",(y.prototype=new xt).add=function(t){return this.array_.push(t),!0},y.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},y.prototype.push=function(t){return this.array_.push(t),t},y.prototype.pop=function(t){if(0===this.array_.length)throw new d;return this.array_.pop()},y.prototype.peek=function(){if(0===this.array_.length)throw new d;return this.array_[this.array_.length-1]},y.prototype.empty=function(){return 0===this.array_.length},y.prototype.isEmpty=function(){return this.empty()},y.prototype.search=function(t){return this.array_.indexOf(t)},y.prototype.size=function(){return this.array_.length},y.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var be=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};be.prototype.getCoordinate=function(){return this._minCoord},be.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},be.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();et.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],i=at.computeOrientation(this._minCoord,n,e),r=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===at.COUNTERCLOCKWISE?r=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===at.CLOCKWISE&&(r=!0),r&&(this._minIndex=this._minIndex-1)},be.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var i=Se.LEFT;return n[e].y<n[e+1].y&&(i=Se.RIGHT),i},be.prototype.getEdge=function(){return this._orientedDe},be.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},be.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},be.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}et.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Se.LEFT&&(this._orientedDe=this._minDe.getSym())},be.prototype.interfaces_=function(){return[]},be.prototype.getClass=function(){return be};var we=function(t){function e(n,i){t.call(this,e.msgWithCoord(n,i)),this.pt=i?new C(i):null,this.name=\"TopologyException\"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+\" [ \"+e+\" ]\"},e}($),Oe=function(){this.array_=[]};Oe.prototype.addLast=function(t){this.array_.push(t)},Oe.prototype.removeFirst=function(){return this.array_.shift()},Oe.prototype.isEmpty=function(){return 0===this.array_.length};var Te=function(){this._finder=null,this._dirEdgeList=new Nt,this._nodes=new Nt,this._rightMostCoord=null,this._env=null,this._finder=new be};Te.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Te.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Te.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new we(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var r=t.getEdges().iterator();r.hasNext();){var o=r.next();o.setVisited(!0),this.copySymDepths(o)}},Te.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Se.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Te.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Te.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Se.RIGHT)>=1&&e.getDepth(Se.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Te.prototype.computeDepths=function(t){var e=new Pt,n=new Oe,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var o=r.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Te.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Te.prototype.getEnvelope=function(){if(null===this._env){for(var t=new j,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),i=0;i<n.length-1;i++)t.expandToInclude(n[i]);this._env=t}return this._env},Te.prototype.addReachable=function(t){var e=new y;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Te.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Se.LEFT,t.getDepth(Se.RIGHT)),e.setDepth(Se.RIGHT,t.getDepth(Se.LEFT))},Te.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this._dirEdgeList.add(i);var r=i.getSym().getNode();r.isVisited()||e.push(r)}},Te.prototype.getNodes=function(){return this._nodes},Te.prototype.getDirectedEdges=function(){return this._dirEdgeList},Te.prototype.interfaces_=function(){return[E]},Te.prototype.getClass=function(){return Te};var Re=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Se.ON]=n}else if(arguments[0]instanceof t){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var r=0;r<this.location.length;r++)this.location[r]=i.location[r]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Se.ON]=o,this.location[Se.LEFT]=s,this.location[Se.RIGHT]=a}};Re.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Re.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==w.NONE)return!1;return!0},Re.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===w.NONE&&(this.location[e]=t)},Re.prototype.isLine=function(){return 1===this.location.length},Re.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Se.ON]=this.location[Se.ON],e[Se.LEFT]=w.NONE,e[Se.RIGHT]=w.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===w.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Re.prototype.getLocations=function(){return this.location},Re.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Se.LEFT];this.location[Se.LEFT]=this.location[Se.RIGHT],this.location[Se.RIGHT]=t},Re.prototype.toString=function(){var t=new D;return this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.LEFT])),t.append(w.toLocationSymbol(this.location[Se.ON])),this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.RIGHT])),t.toString()},Re.prototype.setLocations=function(t,e,n){this.location[Se.ON]=t,this.location[Se.LEFT]=e,this.location[Se.RIGHT]=n},Re.prototype.get=function(t){return t<this.location.length?this.location[t]:w.NONE},Re.prototype.isArea=function(){return this.location.length>1},Re.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===w.NONE)return!0;return!1},Re.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Se.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Re.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(w.NONE)},Re.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Re.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Re.prototype.interfaces_=function(){return[]},Re.prototype.getClass=function(){return Re};var Pe=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Re(e),this.elt[1]=new Re(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Re(n.elt[0]),this.elt[1]=new Re(n.elt[1])}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.elt[0]=new Re(w.NONE),this.elt[1]=new Re(w.NONE),this.elt[i].setLocation(r)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Re(o,s,a),this.elt[1]=new Re(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2],p=arguments[3];this.elt[0]=new Re(w.NONE,w.NONE,w.NONE),this.elt[1]=new Re(w.NONE,w.NONE,w.NONE),this.elt[u].setLocations(l,c,p)}};Pe.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Pe.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Pe.prototype.isNull=function(t){return this.elt[t].isNull()},Pe.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Pe.prototype.isLine=function(t){return this.elt[t].isLine()},Pe.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e])},Pe.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Pe.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Se.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Pe.prototype.toString=function(){var t=new D;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},Pe.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Pe.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Pe.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Se.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},Pe.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Pe.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Pe.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]))},Pe.prototype.interfaces_=function(){return[]},Pe.prototype.getClass=function(){return Pe},Pe.toLineLabel=function(t){for(var e=new Pe(w.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var De=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new Nt,this._pts=new Nt,this._label=new Pe(w.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Nt,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};De.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=at.isCCW(this._ring.getCoordinates())},De.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},De.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new we(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new we(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var i=e.getLabel();et.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},De.prototype.getLinearRing=function(){return this._ring},De.prototype.getCoordinate=function(t){return this._pts.get(t)},De.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},De.prototype.addPoints=function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var o=r;o<i.length;o++)this._pts.add(i[o])}else{var s=i.length-2;n&&(s=i.length-1);for(var a=s;a>=0;a--)this._pts.add(i[a])}},De.prototype.isHole=function(){return this._isHole},De.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},De.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!at.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},De.prototype.addHole=function(t){this._holes.add(t)},De.prototype.isShell=function(){return null===this._shell},De.prototype.getLabel=function(){return this._label},De.prototype.getEdges=function(){return this._edges},De.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},De.prototype.getShell=function(){return this._shell},De.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,Se.RIGHT);if(i===w.NONE)return null;if(this._label.getLocation(n)===w.NONE)return this._label.setLocation(n,i),null}},De.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},De.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},De.prototype.interfaces_=function(){return[]},De.prototype.getClass=function(){return De};var Me=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Ae=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new Nt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Me(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Fe=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fe.prototype.setVisited=function(t){this._isVisited=t},Fe.prototype.setInResult=function(t){this._isInResult=t},Fe.prototype.isCovered=function(){return this._isCovered},Fe.prototype.isCoveredSet=function(){return this._isCoveredSet},Fe.prototype.setLabel=function(t){this._label=t},Fe.prototype.getLabel=function(){return this._label},Fe.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fe.prototype.updateIM=function(t){et.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},Fe.prototype.isInResult=function(){return this._isInResult},Fe.prototype.isVisited=function(){return this._isVisited},Fe.prototype.interfaces_=function(){return[]},Fe.prototype.getClass=function(){return Fe};var Ge=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Pe(0,w.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=w.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==w.BOUNDARY&&(n=i)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Pe(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Pe)for(var n=arguments[0],i=0;i<2;i++){var r=this.computeMergedLocation(n,i);this._label.getLocation(i)===w.NONE&&this._label.setLocation(i,r)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=w.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case w.BOUNDARY:n=w.INTERIOR;break;case w.INTERIOR:default:n=w.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fe),qe=function(){this.nodeMap=new p,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};qe.prototype.find=function(t){return this.nodeMap.get(t)},qe.prototype.addNode=function(){if(arguments[0]instanceof C){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ge){var n=arguments[0],i=this.nodeMap.get(n.getCoordinate());return null===i?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i)}},qe.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},qe.prototype.iterator=function(){return this.nodeMap.values().iterator()},qe.prototype.values=function(){return this.nodeMap.values()},qe.prototype.getBoundaryNodes=function(t){for(var e=new Nt,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===w.BOUNDARY&&e.add(i)}return e},qe.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},qe.prototype.interfaces_=function(){return[]},qe.prototype.getClass=function(){return qe};var Be=function(){},Ve={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Be.prototype.interfaces_=function(){return[]},Be.prototype.getClass=function(){return Be},Be.isNorthern=function(t){return t===Be.NE||t===Be.NW},Be.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Be.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Be.isInHalfPlane=function(t,e){return e===Be.SE?t===Be.SE||t===Be.SW:t===e||t===e+1},Be.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Be.NE:Be.SE:e>=0?Be.NW:Be.SW}if(arguments[0]instanceof C&&arguments[1]instanceof C){var n=arguments[0],i=arguments[1];if(i.x===n.x&&i.y===n.y)throw new m(\"Cannot compute the quadrant for two identical points \"+n);return i.x>=n.x?i.y>=n.y?Be.NE:Be.SE:i.y>=n.y?Be.NW:Be.SW}},Ve.NE.get=function(){return 0},Ve.NW.get=function(){return 1},Ve.SW.get=function(){return 2},Ve.SE.get=function(){return 3},Object.defineProperties(Be,Ve);var Ue=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this._edge=e,this.init(n,i),this._label=null}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=r,this.init(o,s),this._label=a}};Ue.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:at.computeOrientation(t._p0,t._p1,this._p1)},Ue.prototype.getDy=function(){return this._dy},Ue.prototype.getCoordinate=function(){return this._p0},Ue.prototype.setNode=function(t){this._node=t},Ue.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)},Ue.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},Ue.prototype.getDirectedCoordinate=function(){return this._p1},Ue.prototype.getDx=function(){return this._dx},Ue.prototype.getLabel=function(){return this._label},Ue.prototype.getEdge=function(){return this._edge},Ue.prototype.getQuadrant=function(){return this._quadrant},Ue.prototype.getNode=function(){return this._node},Ue.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label},Ue.prototype.computeLabel=function(t){},Ue.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Be.quadrant(this._dx,this._dy),et.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")},Ue.prototype.interfaces_=function(){return[E]},Ue.prototype.getClass=function(){return Ue};var ze=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var i=e.getNumPoints()-1;this.init(e.getCoordinate(i),e.getCoordinate(i-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Pe(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new we(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Se.LEFT)===w.INTERIOR&&this._label.getLocation(e,Se.RIGHT)===w.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(\" \"+this._depth[Se.LEFT]+\"/\"+this._depth[Se.RIGHT]),e.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&e.print(\" inResult\")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,w.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,w.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===Se.LEFT&&(i=-1);var r=Se.opposite(t),o=e+n*i;this.setDepth(t,e),this.setDepth(r,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===w.EXTERIOR&&e===w.INTERIOR?1:t===w.INTERIOR&&e===w.EXTERIOR?-1:0},e}(Ue),Xe=function(){};Xe.prototype.createNode=function(t){return new Ge(t,null)},Xe.prototype.interfaces_=function(){return[]},Xe.prototype.getClass=function(){return Xe};var Ye=function(){if(this._edges=new Nt,this._nodes=null,this._edgeEndList=new Nt,0===arguments.length)this._nodes=new qe(new Xe);else if(1===arguments.length){var t=arguments[0];this._nodes=new qe(t)}};Ye.prototype.printEdges=function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Ye.prototype.find=function(t){return this._nodes.find(t)},Ye.prototype.addNode=function(){if(arguments[0]instanceof Ge){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof C){var e=arguments[0];return this._nodes.addNode(e)}},Ye.prototype.getNodeIterator=function(){return this._nodes.iterator()},Ye.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Ye.prototype.debugPrintln=function(t){Y.out.println(t)},Ye.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===w.BOUNDARY},Ye.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Ye.prototype.matchInSameDirection=function(t,e,n,i){return!!t.equals(n)&&(at.computeOrientation(t,e,i)===at.COLLINEAR&&Be.quadrant(t,e)===Be.quadrant(n,i))},Ye.prototype.getEdgeEnds=function(){return this._edgeEndList},Ye.prototype.debugPrint=function(t){Y.out.print(t)},Ye.prototype.getEdgeIterator=function(){return this._edges.iterator()},Ye.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},Ye.prototype.insertEdge=function(t){this._edges.add(t)},Ye.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Ye.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var i=new ze(n,!0),r=new ze(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},Ye.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Ye.prototype.getNodes=function(){return this._nodes.values()},Ye.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},Ye.prototype.interfaces_=function(){return[]},Ye.prototype.getClass=function(){return Ye},Ye.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var ke=function(){this._geometryFactory=null,this._shellList=new Nt;var t=arguments[0];this._geometryFactory=t};ke.prototype.sortShellsAndHoles=function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},ke.prototype.computePolygons=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next().toPolygon(this._geometryFactory);e.add(i)}return e},ke.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new we(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},ke.prototype.buildMinimalEdgeRings=function(t,e,n){for(var i=new Nt,r=t.iterator();r.hasNext();){var o=r.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else i.add(o)}return i},ke.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},ke.prototype.buildMaximalEdgeRings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new Ae(i,this._geometryFactory);e.add(r),r.setInResult()}}return e},ke.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},ke.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},ke.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),c=l.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var p=!1;c.contains(i)&&at.isPointInRing(r,l.getCoordinates())&&(p=!0),p&&(null===o||s.contains(c))&&(o=u)}return o},ke.prototype.findShell=function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return et.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},ke.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Ye.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new Nt,o=this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(o,this._shellList,r),this.placeFreeHoles(this._shellList,r)}},ke.prototype.interfaces_=function(){return[]},ke.prototype.getClass=function(){return ke};var je=function(){};je.prototype.getBounds=function(){},je.prototype.interfaces_=function(){return[]},je.prototype.getClass=function(){return je};var He=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};He.prototype.getItem=function(){return this._item},He.prototype.getBounds=function(){return this._bounds},He.prototype.interfaces_=function(){return[je,e]},He.prototype.getClass=function(){return He};var We=function(){this._size=null,this._items=null,this._size=0,this._items=new Nt,this._items.add(null)};We.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},We.prototype.size=function(){return this._size},We.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},We.prototype.clear=function(){this._size=0,this._items.clear()},We.prototype.isEmpty=function(){return 0===this._size},We.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},We.prototype.interfaces_=function(){return[]},We.prototype.getClass=function(){return We};var Ke=function(){};Ke.prototype.visitItem=function(t){},Ke.prototype.interfaces_=function(){return[]},Ke.prototype.getClass=function(){return Ke};var Je=function(){};Je.prototype.insert=function(t,e){},Je.prototype.remove=function(t,e){},Je.prototype.query=function(){},Je.prototype.interfaces_=function(){return[]},Je.prototype.getClass=function(){return Je};var Qe=function(){if(this._childBoundables=new Nt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Ze={serialVersionUID:{configurable:!0}};Qe.prototype.getLevel=function(){return this._level},Qe.prototype.size=function(){return this._childBoundables.size()},Qe.prototype.getChildBoundables=function(){return this._childBoundables},Qe.prototype.addChildBoundable=function(t){et.isTrue(null===this._bounds),this._childBoundables.add(t)},Qe.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Qe.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Qe.prototype.interfaces_=function(){return[je,e]},Qe.prototype.getClass=function(){return Qe},Ze.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Qe,Ze);var $e=function(){};$e.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$e.min=function(t){return $e.sort(t),t.get(0)},$e.sort=function(t,e){var n=t.toArray();e?Gt.sort(n,e):Gt.sort(n);for(var i=t.iterator(),r=0,o=n.length;r<o;r++)i.next(),i.set(n[r])},$e.singletonList=function(t){var e=new Nt;return e.add(t),e};var tn=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tn.prototype.expandToQueue=function(t,e){var n=tn.isComposite(this._boundable1),i=tn.isComposite(this._boundable2);if(n&&i)return tn.area(this._boundable1)>tn.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new m(\"neither boundable is composite\")},tn.prototype.isLeaves=function(){return!(tn.isComposite(this._boundable1)||tn.isComposite(this._boundable2))},tn.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tn.prototype.expand=function(t,e,n,i){for(var r=t.getChildBoundables().iterator();r.hasNext();){var o=r.next(),s=new tn(o,e,this._itemDistance);s.getDistance()<i&&n.add(s)}},tn.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tn.prototype.getDistance=function(){return this._distance},tn.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tn.prototype.interfaces_=function(){return[E]},tn.prototype.getClass=function(){return tn},tn.area=function(t){return t.getBounds().getArea()},tn.isComposite=function(t){return t instanceof Qe};var en=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new Nt,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];et.isTrue(n>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=n}},nn={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};en.prototype.getNodeCapacity=function(){return this._nodeCapacity},en.prototype.lastNode=function(t){return t.get(t.size()-1)},en.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Qe?t+=this.size(n):n instanceof He&&(t+=1)}return t}},en.prototype.removeItem=function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof He&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)},en.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new Nt:t}if(1===arguments.length){for(var e=arguments[0],n=new Nt,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Qe){var o=this.itemsTree(r);null!==o&&n.add(o)}else r instanceof He?n.add(r.getItem()):et.shouldNeverReachHere()}return n.size()<=0?null:n}},en.prototype.insert=function(t,e){et.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new He(t,e))},en.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(et.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var o=i.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Qe?this.boundablesAtLevel(n,s,r):(et.isTrue(s instanceof He),-1===n&&r.add(s))}return null}},en.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new Nt;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var r=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Qe?this.query(r,l,s):l instanceof He?s.visitItem(l.getItem()):et.shouldNeverReachHere())}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var c=arguments[0],p=arguments[1],h=arguments[2],f=p.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),c)&&(d instanceof Qe?this.query(c,d,h):d instanceof He?h.add(d.getItem()):et.shouldNeverReachHere())}},en.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},en.prototype.getRoot=function(){return this.build(),this._root},en.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=this.removeItem(i,r);if(o)return!0;for(var s=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Qe&&(o=this.remove(n,u,r)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(s),o}},en.prototype.createHigherLevels=function(t,e){et.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},en.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Qe){var i=this.depth(n);i>t&&(t=i)}}return t+1}},en.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var n=new Nt;n.add(this.createNode(e));var i=new Nt(t);$e.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var o=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},en.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},en.prototype.interfaces_=function(){return[e]},en.prototype.getClass=function(){return en},en.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nn.IntersectsOp.get=function(){return rn},nn.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nn.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(en,nn);var rn=function(){},on=function(){};on.prototype.distance=function(t,e){},on.prototype.interfaces_=function(){return[]},on.prototype.getClass=function(){return on};var sn=function(t){function n(e){e=e||n.DEFAULT_NODE_CAPACITY,t.call(this,e)}t&&(n.__proto__=t),(n.prototype=Object.create(t&&t.prototype)).constructor=n;var i={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return n.prototype.createParentBoundablesFromVerticalSlices=function(t,e){et.isTrue(t.length>0);for(var n=new Nt,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},n.prototype.createNode=function(t){return new an(t)},n.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},n.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},n.prototype.getIntersectsOp=function(){return n.intersectsOp},n.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),o=0;o<e;o++){i[o]=new Nt;for(var s=0;r.hasNext()&&s<n;){var a=r.next();i[o].add(a),s++}}return i},n.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];t.prototype.query.call(this,n,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var r=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,r,o,s)}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var a=arguments[0],u=arguments[1],l=arguments[2];t.prototype.query.call(this,a,u,l)}},n.prototype.getComparator=function(){return n.yComparator},n.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},n.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},n.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},n.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var i=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),r=new Nt(t);$e.sort(r,n.xComparator);var o=this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(o,e)},n.prototype.nearestNeighbour=function(){if(1===arguments.length){if(T(arguments[0],on)){var t=arguments[0],e=new tn(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof tn){var i=arguments[0];return this.nearestNeighbour(i,v.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof n&&T(arguments[1],on)){var r=arguments[0],o=arguments[1],s=new tn(this.getRoot(),r.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tn&&\"number\"==typeof arguments[1]){var a=arguments[0],u=arguments[1],l=null,c=new We;for(c.add(a);!c.isEmpty()&&u>0;){var p=c.poll(),h=p.getDistance();if(h>=u)break;p.isLeaves()?(u=h,l=p):p.expandToQueue(c,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new He(f,g),_=new tn(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},n.prototype.interfaces_=function(){return[Je,e]},n.prototype.getClass=function(){return n},n.centreX=function(t){return n.avg(t.getMinX(),t.getMaxX())},n.avg=function(t,e){return(t+e)/2},n.centreY=function(t){return n.avg(t.getMinY(),t.getMaxY())},i.STRtreeNode.get=function(){return an},i.serialVersionUID.get=function(){return 0x39920f7d5f261e0},i.xComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(i.getBounds()))}}},i.yComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreY(e.getBounds()),n.centreY(i.getBounds()))}}},i.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},i.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(n,i),n}(en),an=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new j(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qe),un=function(){};un.prototype.interfaces_=function(){return[]},un.prototype.getClass=function(){return un},un.relativeSign=function(t,e){return t<e?-1:t>e?1:0},un.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=un.relativeSign(e.x,n.x),r=un.relativeSign(e.y,n.y);switch(t){case 0:return un.compareValue(i,r);case 1:return un.compareValue(r,i);case 2:return un.compareValue(r,-i);case 3:return un.compareValue(-i,r);case 4:return un.compareValue(-i,-r);case 5:return un.compareValue(-r,-i);case 6:return un.compareValue(-r,i);case 7:return un.compareValue(i,-r)}return et.shouldNeverReachHere(\"invalid octant value\"),0},un.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ln=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new C(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))};ln.prototype.getCoordinate=function(){return this.coord},ln.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},ln.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:un.compare(this._segmentOctant,this.coord,e.coord)},ln.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ln.prototype.isInterior=function(){return this._isInterior},ln.prototype.interfaces_=function(){return[E]},ln.prototype.getClass=function(){return ln};var cn=function(){this._nodeMap=new p,this._edge=null;var t=arguments[0];this._edge=t};cn.prototype.getSplitCoordinates=function(){var t=new St;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},cn.prototype.addCollapsedNodes=function(){var t=new Nt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cn.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(new M(e+1))}},cn.prototype.addEdgeCoordinates=function(t,e,n){var i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);n.add(new C(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));r&&n.add(new C(e.coord))},cn.prototype.iterator=function(){return this._nodeMap.values().iterator()},cn.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},cn.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)},cn.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next();this.findCollapseIndex(i,r,e)&&t.add(new M(e[0])),i=r}},cn.prototype.getEdge=function(){return this._edge},cn.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return r&&(o[s]=new C(e.coord)),new gn(o,this._edge.getData())},cn.prototype.add=function(t,e){var n=new ln(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(et.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this._nodeMap.put(n,n),n)},cn.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new $(\"bad split edge start point at \"+n);var i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new $(\"bad split edge end point at \"+r)},cn.prototype.interfaces_=function(){return[]},cn.prototype.getClass=function(){return cn};var pn=function(){};pn.prototype.interfaces_=function(){return[]},pn.prototype.getClass=function(){return pn},pn.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof C&&arguments[1]instanceof C){var r=arguments[0],o=arguments[1],s=o.x-r.x,a=o.y-r.y;if(0===s&&0===a)throw new m(\"Cannot compute the octant for two identical points \"+r);return pn.octant(s,a)}};var hn=function(){};hn.prototype.getCoordinates=function(){},hn.prototype.size=function(){},hn.prototype.getCoordinate=function(t){},hn.prototype.isClosed=function(){},hn.prototype.setData=function(t){},hn.prototype.getData=function(){},hn.prototype.interfaces_=function(){return[]},hn.prototype.getClass=function(){return hn};var fn=function(){};fn.prototype.addIntersection=function(t,e){},fn.prototype.interfaces_=function(){return[hn]},fn.prototype.getClass=function(){return fn};var gn=function(){this._nodeList=new cn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};gn.prototype.getCoordinates=function(){return this._pts},gn.prototype.size=function(){return this._pts.length},gn.prototype.getCoordinate=function(t){return this._pts[t]},gn.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},gn.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},gn.prototype.setData=function(t){this._data=t},gn.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:pn.octant(t,e)},gn.prototype.getData=function(){return this._data},gn.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[3],o=new C(n.getIntersection(r));this.addIntersection(o,i)}},gn.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},gn.prototype.getNodeList=function(){return this._nodeList},gn.prototype.addIntersectionNode=function(t,e){var n=e,i=n+1;if(i<this._pts.length){var r=this._pts[i];t.equals2D(r)&&(n=i)}return this._nodeList.add(t,n)},gn.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},gn.prototype.interfaces_=function(){return[fn]},gn.prototype.getClass=function(){return gn},gn.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return gn.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){r.next().getNodeList().addSplitEdges(i)}};var dn=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new C,this.p1=new C;else if(1===arguments.length){var t=arguments[0];this.p0=new C(t.p0),this.p1=new C(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3];this.p0=new C(e,n),this.p1=new C(i,r)}},yn={serialVersionUID:{configurable:!0}};dn.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},dn.prototype.orientationIndex=function(){if(arguments[0]instanceof dn){var t=arguments[0],e=at.orientationIndex(this.p0,this.p1,t.p0),n=at.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof C){var i=arguments[0];return at.orientationIndex(this.p0,this.p1,i)}},dn.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},dn.prototype.isVertical=function(){return this.p0.x===this.p1.x},dn.prototype.equals=function(t){if(!(t instanceof dn))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},dn.prototype.intersection=function(t){var e=new rt;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},dn.prototype.project=function(){if(arguments[0]instanceof C){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new C(t);var e=this.projectionFactor(t),n=new C;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof dn){var i=arguments[0],r=this.projectionFactor(i.p0),o=this.projectionFactor(i.p1);if(r>=1&&o>=1)return null;if(r<=0&&o<=0)return null;var s=this.project(i.p0);r<0&&(s=this.p0),r>1&&(s=this.p1);var a=this.project(i.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new dn(s,a)}},dn.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},dn.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},dn.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},dn.prototype.distancePerpendicular=function(t){return at.distancePointLinePerpendicular(t,this.p0,this.p1)},dn.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},dn.prototype.midPoint=function(){return dn.midPoint(this.p0,this.p1)},dn.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return v.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i},dn.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=v.MAX_VALUE,r=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(r=s.distance(t.p1))<i&&(i=r,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(r=a.distance(this.p0))<i&&(i=r,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(r=u.distance(this.p1))<i&&(i=r,n[0]=this.p1,n[1]=u),n},dn.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},dn.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},dn.prototype.getLength=function(){return this.p0.distance(this.p1)},dn.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},dn.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},dn.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},dn.prototype.lineIntersection=function(t){try{return k.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof X))throw t}return null},dn.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},dn.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error(\"Cannot compute offset from zero-length line segment\");a=e*r/s,u=e*o/s}return new C(n-u,i+a)},dn.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},dn.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||v.isNaN(e))&&(e=1),e},dn.prototype.toString=function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},dn.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},dn.prototype.distance=function(){if(arguments[0]instanceof dn){var t=arguments[0];return at.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof C){var e=arguments[0];return at.distancePointLine(e,this.p0,this.p1)}},dn.prototype.pointAlong=function(t){var e=new C;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},dn.prototype.hashCode=function(){var t=v.doubleToLongBits(this.p0.x);t^=31*v.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=v.doubleToLongBits(this.p1.x);n^=31*v.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},dn.prototype.interfaces_=function(){return[E,e]},dn.prototype.getClass=function(){return dn},dn.midPoint=function(t,e){return new C((t.x+e.x)/2,(t.y+e.y)/2)},yn.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(dn,yn);var _n=function(){this.tempEnv1=new j,this.tempEnv2=new j,this._overlapSeg1=new dn,this._overlapSeg2=new dn};_n.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},_n.prototype.interfaces_=function(){return[]},_n.prototype.getClass=function(){return _n};var mn=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i};mn.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},mn.prototype.computeSelect=function(t,e,n,i){var r=this._pts[e],o=this._pts[n];if(i.tempEnv1.init(r,o),n-e==1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,i),s<n&&this.computeSelect(t,s,n,i)},mn.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},mn.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},mn.prototype.setId=function(t){this._id=t},mn.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},mn.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new j(t,e)}return this._env},mn.prototype.getEndIndex=function(){return this._end},mn.prototype.getStartIndex=function(){return this._start},mn.prototype.getContext=function(){return this._context},mn.prototype.getId=function(){return this._id},mn.prototype.computeOverlapsInternal=function(t,e,n,i,r,o){var s=this._pts[t],a=this._pts[e],u=n._pts[i],l=n._pts[r];if(e-t==1&&r-i==1)return o.overlap(this,t,n,i),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),p=Math.trunc((i+r)/2);t<c&&(i<p&&this.computeOverlapsInternal(t,c,n,i,p,o),p<r&&this.computeOverlapsInternal(t,c,n,p,r,o)),c<e&&(i<p&&this.computeOverlapsInternal(c,e,n,i,p,o),p<r&&this.computeOverlapsInternal(c,e,n,p,r,o))},mn.prototype.interfaces_=function(){return[]},mn.prototype.getClass=function(){return mn};var vn=function(){};vn.prototype.interfaces_=function(){return[]},vn.prototype.getClass=function(){return vn},vn.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=vn.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return vn.toIntArray(n)},vn.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Be.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){if(Be.quadrant(t[r-1],t[r])!==i)break}r++}return r-1},vn.getChains=function(){if(1===arguments.length){var t=arguments[0];return vn.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new Nt,r=vn.getChainStartIndices(e),o=0;o<r.length-1;o++){var s=new mn(e,r[o],r[o+1],n);i.add(s)}return i}},vn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var In=function(){};In.prototype.computeNodes=function(t){},In.prototype.getNodedSubstrings=function(){},In.prototype.interfaces_=function(){return[]},In.prototype.getClass=function(){return In};var En=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};En.prototype.setSegmentIntersector=function(t){this._segInt=t},En.prototype.interfaces_=function(){return[In]},En.prototype.getClass=function(){return En};var xn=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new Nt,this._index=new sn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=vn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new Nn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this._index.query(n.getEnvelope()).iterator();i.hasNext();){var r=i.next();if(r.getId()>n.getId()&&(n.computeOverlaps(r,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return Nn},Object.defineProperties(e,n),e}(En),Nn=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3],o=e.getContext(),s=i.getContext();this._si.processIntersections(o,n,s,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(_n),Cn=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Sn={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Cn.prototype.getEndCapStyle=function(){return this._endCapStyle},Cn.prototype.isSingleSided=function(){return this._isSingleSided},Cn.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Cn.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Cn.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Cn.JOIN_ROUND&&(this._quadrantSegments=Cn.DEFAULT_QUADRANT_SEGMENTS)},Cn.prototype.getJoinStyle=function(){return this._joinStyle},Cn.prototype.setJoinStyle=function(t){this._joinStyle=t},Cn.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Cn.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Cn.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Cn.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Cn.prototype.getMitreLimit=function(){return this._mitreLimit},Cn.prototype.setMitreLimit=function(t){this._mitreLimit=t},Cn.prototype.setSingleSided=function(t){this._isSingleSided=t},Cn.prototype.interfaces_=function(){return[]},Cn.prototype.getClass=function(){return Cn},Cn.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Sn.CAP_ROUND.get=function(){return 1},Sn.CAP_FLAT.get=function(){return 2},Sn.CAP_SQUARE.get=function(){return 3},Sn.JOIN_ROUND.get=function(){return 1},Sn.JOIN_MITRE.get=function(){return 2},Sn.JOIN_BEVEL.get=function(){return 3},Sn.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Sn.DEFAULT_MITRE_LIMIT.get=function(){return 5},Sn.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Cn,Sn);var Ln=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=at.COUNTERCLOCKWISE,this._inputLine=t||null},bn={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Ln.prototype.isDeletable=function(t,e,n,i){var r=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(r,o,s)&&(!!this.isShallow(r,o,s,i)&&this.isShallowSampled(r,o,t,n,i))},Ln.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;n<this._inputLine.length;){var r=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Ln.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},Ln.prototype.isShallowConcavity=function(t,e,n,i){if(!(at.computeOrientation(t,e,n)===this._angleOrientation))return!1;return at.distancePointLine(e,t,n)<i},Ln.prototype.isShallowSampled=function(t,e,n,i,r){var o=Math.trunc((i-n)/Ln.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<i;s+=o)if(!this.isShallow(t,e,this._inputLine[s],r))return!1;return!0},Ln.prototype.isConcave=function(t,e,n){var i=at.computeOrientation(t,e,n)===this._angleOrientation;return i},Ln.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=at.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Ln.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Ln.DELETE;)e++;return e},Ln.prototype.isShallow=function(t,e,n,i){return at.distancePointLine(e,t,n)<i},Ln.prototype.collapseLine=function(){for(var t=new St,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Ln.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Ln.prototype.interfaces_=function(){return[]},Ln.prototype.getClass=function(){return Ln},Ln.simplify=function(t,e){return new Ln(t).simplify(e)},bn.INIT.get=function(){return 0},bn.DELETE.get=function(){return 1},bn.KEEP.get=function(){return 1},bn.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Ln,bn);var wn=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Nt},On={COORDINATE_ARRAY_TYPE:{configurable:!0}};wn.prototype.getCoordinates=function(){return this._ptList.toArray(wn.COORDINATE_ARRAY_TYPE)},wn.prototype.setPrecisionModel=function(t){this._precisionModel=t},wn.prototype.addPt=function(t){var e=new C(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},wn.prototype.revere=function(){},wn.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var i=t.length-1;i>=0;i--)this.addPt(t[i])},wn.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},wn.prototype.toString=function(){return(new _e).createLineString(this.getCoordinates()).toString()},wn.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new C(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},wn.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},wn.prototype.interfaces_=function(){return[]},wn.prototype.getClass=function(){return wn},On.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(wn,On);var Tn=function(){},Rn={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Tn.prototype.interfaces_=function(){return[]},Tn.prototype.getClass=function(){return Tn},Tn.toDegrees=function(t){return 180*t/Math.PI},Tn.normalize=function(t){for(;t>Math.PI;)t-=Tn.PI_TIMES_2;for(;t<=-Math.PI;)t+=Tn.PI_TIMES_2;return t},Tn.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Tn.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0},Tn.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0},Tn.interiorAngle=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Math.abs(r-i)},Tn.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Tn.PI_TIMES_2;t>=Tn.PI_TIMES_2&&(t=0)}else{for(;t>=Tn.PI_TIMES_2;)t-=Tn.PI_TIMES_2;t<0&&(t=0)}return t},Tn.angleBetween=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Tn.diff(i,r)},Tn.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Tn.toRadians=function(t){return t*Math.PI/180},Tn.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Tn.COUNTERCLOCKWISE:n<0?Tn.CLOCKWISE:Tn.NONE},Tn.angleBetweenOriented=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n)-i;return r<=-Math.PI?r+Tn.PI_TIMES_2:r>Math.PI?r-Tn.PI_TIMES_2:r},Rn.PI_TIMES_2.get=function(){return 2*Math.PI},Rn.PI_OVER_2.get=function(){return Math.PI/2},Rn.PI_OVER_4.get=function(){return Math.PI/4},Rn.COUNTERCLOCKWISE.get=function(){return at.COUNTERCLOCKWISE},Rn.CLOCKWISE.get=function(){return at.CLOCKWISE},Rn.NONE.get=function(){return at.COLLINEAR},Object.defineProperties(Tn,Rn);var Pn=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new dn,this._seg1=new dn,this._offset0=new dn,this._offset1=new dn,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rt,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===Cn.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)},Dn={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Pn.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=at.computeOrientation(this._s0,this._s1,this._s2),i=n===at.CLOCKWISE&&this._side===Se.LEFT||n===at.COUNTERCLOCKWISE&&this._side===Se.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Pn.prototype.addLineEndCap=function(t,e){var n=new dn(t,e),i=new dn;this.computeOffsetSegment(n,Se.LEFT,this._distance,i);var r=new dn;this.computeOffsetSegment(n,Se.RIGHT,this._distance,r);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:this._segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,at.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case Cn.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case Cn.CAP_SQUARE:var u=new C;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new C(i.p1.x+u.x,i.p1.y+u.y),c=new C(r.p1.x+u.x,r.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(c)}},Pn.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Pn.prototype.addMitreJoin=function(t,e,n,i){var r=!0,o=null;try{o=k.intersection(e.p0,e.p1,n.p0,n.p1);(i<=0?1:o.distance(t)/Math.abs(i))>this._bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof X))throw t;o=new C(0,0),r=!1}r?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())},Pn.prototype.addFilletCorner=function(t,e,n,i,r){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,c=Math.atan2(l,u);i===at.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,i,r),this._segList.addPt(n)},Pn.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Pn.prototype.createSquare=function(t){this._segList.addPt(new C(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new C(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Pn.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Pn.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Pn.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Pn.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Pn.prototype.addLimitedMitreJoin=function(t,e,n,i){var r=this._seg0.p1,o=Tn.angle(r,this._seg0.p0),s=Tn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,a=Tn.normalize(o+s),u=Tn.normalize(a+Math.PI),l=i*n,c=n-l*Math.abs(Math.sin(s)),p=r.x+l*Math.cos(u),h=r.y+l*Math.sin(u),f=new C(p,h),g=new dn(r,f),d=g.pointAlongOffset(1,c),y=g.pointAlongOffset(1,-c);this._side===Se.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Pn.prototype.computeOffsetSegment=function(t,e,n,i){var r=e===Se.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=r*n*o/a,l=r*n*s/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},Pn.prototype.addFilletArc=function(t,e,n,i,r){var o=i===at.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=0,c=new C;l<s;){var p=e+o*l;c.x=t.x+r*Math.cos(p),c.y=t.y+r*Math.sin(p),this._segList.addPt(c),l+=u}},Pn.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new C((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var i=new C((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Pn.prototype.createCircle=function(t){var e=new C(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Pn.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Pn.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new wn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Pn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Pn.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL||this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,at.CLOCKWISE,this._distance))},Pn.prototype.closeRing=function(){this._segList.closeRing()},Pn.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Pn.prototype.interfaces_=function(){return[]},Pn.prototype.getClass=function(){return Pn},Dn.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Dn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Dn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Dn.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Pn,Dn);var Mn=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Mn.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var o=r.getCoordinates();return n&&Lt.reverse(o),o},Mn.prototype.computeSingleSidedBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{n.addSegments(t,!1);var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()},Mn.prototype.computeRingBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);e===Se.RIGHT&&(i=-i);var r=Ln.simplify(t,i),o=r.length-1;n.initSideSegments(r[o-1],r[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(r[s],a)}n.closeRing()},Mn.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),i=Ln.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],Se.LEFT);for(var o=2;o<=r;o++)e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var s=Ln.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Se.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Mn.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:e.createCircle(t);break;case Cn.CAP_SQUARE:e.createSquare(t)}},Mn.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()},Mn.prototype.getBufferParameters=function(){return this._bufParams},Mn.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Mn.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Mn.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},Mn.prototype.computeOffsetCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()},Mn.prototype.getSegGen=function(t){return new Pn(this._precisionModel,this._bufParams,t)},Mn.prototype.interfaces_=function(){return[]},Mn.prototype.getClass=function(){return Mn},Mn.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new C(t[n]);return e};var An=function(){this._subgraphs=null,this._seg=new dn,this._cga=new at;var t=arguments[0];this._subgraphs=t},Fn={DepthSegment:{configurable:!0}};An.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new Nt,n=this._subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(T(arguments[2],xt)&&arguments[0]instanceof C&&arguments[1]instanceof ze)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),l=0;l<u.length-1;l++){this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||at.computeOrientation(this._seg.p0,this._seg.p1,o)===at.RIGHT)){var c=s.getDepth(Se.LEFT);this._seg.p0.equals(u[l])||(c=s.getDepth(Se.RIGHT));var p=new Gn(this._seg,c);a.add(p)}}else if(T(arguments[2],xt)&&arguments[0]instanceof C&&T(arguments[1],xt))for(var h=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(h,y,g)}},An.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $e.min(e)._leftDepth},An.prototype.interfaces_=function(){return[]},An.prototype.getClass=function(){return An},Fn.DepthSegment.get=function(){return Gn},Object.defineProperties(An,Fn);var Gn=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new dn(t),this._leftDepth=e};Gn.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Gn.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Gn.prototype.toString=function(){return this._upwardSeg.toString()},Gn.prototype.interfaces_=function(){return[E]},Gn.prototype.getClass=function(){return Gn};var qn=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};qn.prototype.area=function(){return qn.area(this.p0,this.p1,this.p2)},qn.prototype.signedArea=function(){return qn.signedArea(this.p0,this.p1,this.p2)},qn.prototype.interpolateZ=function(t){if(null===t)throw new m(\"Supplied point is null.\");return qn.interpolateZ(t,this.p0,this.p1,this.p2)},qn.prototype.longestSideLength=function(){return qn.longestSideLength(this.p0,this.p1,this.p2)},qn.prototype.isAcute=function(){return qn.isAcute(this.p0,this.p1,this.p2)},qn.prototype.circumcentre=function(){return qn.circumcentre(this.p0,this.p1,this.p2)},qn.prototype.area3D=function(){return qn.area3D(this.p0,this.p1,this.p2)},qn.prototype.centroid=function(){return qn.centroid(this.p0,this.p1,this.p2)},qn.prototype.inCentre=function(){return qn.inCentre(this.p0,this.p1,this.p2)},qn.prototype.interfaces_=function(){return[]},qn.prototype.getClass=function(){return qn},qn.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},qn.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},qn.det=function(t,e,n,i){return t*i-e*n},qn.interpolateZ=function(t,e,n,i){var r=e.x,o=e.y,s=n.x-r,a=i.x-r,u=n.y-o,l=i.y-o,c=s*l-a*u,p=t.x-r,h=t.y-o,f=(l*p-a*h)/c,g=(-u*p+s*h)/c;return e.z+f*(n.z-e.z)+g*(i.z-e.z)},qn.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),o=n.distance(t),s=i;return r>s&&(s=r),o>s&&(s=o),s},qn.isAcute=function(t,e,n){return!!Tn.isAcute(t,e,n)&&(!!Tn.isAcute(e,n,t)&&!!Tn.isAcute(n,t,e))},qn.circumcentre=function(t,e,n){var i=n.x,r=n.y,o=t.x-i,s=t.y-r,a=e.x-i,u=e.y-r,l=2*qn.det(o,s,a,u),c=qn.det(s,o*o+s*s,u,a*a+u*u),p=qn.det(o,o*o+s*s,a,a*a+u*u);return new C(i-c/l,r+p/l)},qn.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new k(t.x+n/2,t.y+i/2,1),o=new k(t.x-i+n/2,t.y+n+i/2,1);return new k(r,o)},qn.angleBisector=function(t,e,n){var i=e.distance(t),r=i/(i+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new C(t.x+r*o,t.y+r*s)},qn.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-o*a,c=o*s-i*u,p=i*a-r*s,h=l*l+c*c+p*p,f=Math.sqrt(h)/2;return f},qn.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new C(i,r)},qn.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),o=t.distance(e),s=i+r+o,a=(i*t.x+r*e.x+o*n.x)/s,u=(i*t.y+r*e.y+o*n.y)/s;return new C(a,u)};var Bn=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Bn.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addPolygon=function(t){var e=this._distance,n=Se.LEFT;this._distance<0&&(e=-this._distance,n=Se.RIGHT);var i=t.getExteriorRing(),r=Lt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,w.EXTERIOR,w.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Lt.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Se.opposite(n),w.INTERIOR,w.EXTERIOR)}},Bn.prototype.isTriangleErodedCompletely=function(t,e){var n=new qn(t[0],t[1],t[2]),i=n.inCentre();return at.distancePointLine(i,n.p0,n.p1)<Math.abs(e)},Bn.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Lt.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var i=new gn(t,new Pe(0,w.BOUNDARY,e,n));this._curveList.add(i)},Bn.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Bn.prototype.addPolygonRing=function(t,e,n,i,r){if(0===e&&t.length<ee.MINIMUM_VALID_SIZE)return null;var o=i,s=r;t.length>=ee.MINIMUM_VALID_SIZE&&at.isCCW(t)&&(o=r,s=i,n=Se.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Bn.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $t?this.addPolygon(t):t instanceof Kt?this.addLineString(t):t instanceof Qt?this.addPoint(t):t instanceof te?this.addCollection(t):t instanceof Xt?this.addCollection(t):t instanceof ne?this.addCollection(t):t instanceof zt&&this.addCollection(t)},Bn.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r},Bn.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Bn.prototype.interfaces_=function(){return[]},Bn.prototype.getClass=function(){return Bn};var Vn=function(){};Vn.prototype.locate=function(t){},Vn.prototype.interfaces_=function(){return[]},Vn.prototype.getClass=function(){return Vn};var Un=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};Un.prototype.next=function(){if(this._atStart)return this._atStart=!1,Un.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new i;var t=this._parent.getGeometryN(this._index++);return t instanceof zt?(this._subcollectionIterator=new Un(t),this._subcollectionIterator.next()):t},Un.prototype.remove=function(){throw new Error(this.getClass().getName())},Un.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},Un.prototype.interfaces_=function(){return[Et]},Un.prototype.getClass=function(){return Un},Un.isAtomic=function(t){return!(t instanceof zt)};var zn=function(){this._geom=null;var t=arguments[0];this._geom=t};zn.prototype.locate=function(t){return zn.locate(t,this._geom)},zn.prototype.interfaces_=function(){return[Vn]},zn.prototype.getClass=function(){return zn},zn.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&at.isPointInRing(t,e.getCoordinates())},zn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(zn.isPointInRing(t,r))return!1}return!0},zn.containsPoint=function(t,e){if(e instanceof $t)return zn.containsPointInPolygon(t,e);if(e instanceof zt)for(var n=new Un(e);n.hasNext();){var i=n.next();if(i!==e&&zn.containsPoint(t,i))return!0}return!1},zn.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:zn.containsPoint(t,e)?w.INTERIOR:w.EXTERIOR};var Xn=function(){this._edgeMap=new p,this._edgeList=null,this._ptInAreaLocation=[w.NONE,w.NONE]};Xn.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},Xn.prototype.propagateSideLabels=function(t){for(var e=w.NONE,n=this.iterator();n.hasNext();){var i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,Se.LEFT)!==w.NONE&&(e=i.getLocation(t,Se.LEFT))}if(e===w.NONE)return null;for(var r=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Se.ON)===w.NONE&&a.setLocation(t,Se.ON,r),a.isArea(t)){var u=a.getLocation(t,Se.LEFT),l=a.getLocation(t,Se.RIGHT);if(l!==w.NONE){if(l!==r)throw new we(\"side location conflict\",s.getCoordinate());u===w.NONE&&et.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),r=u}else et.isTrue(a.getLocation(t,Se.LEFT)===w.NONE,\"found single null side\"),a.setLocation(t,Se.RIGHT,r),a.setLocation(t,Se.LEFT,r)}}},Xn.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},Xn.prototype.print=function(t){Y.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Xn.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},Xn.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel().getLocation(t,Se.LEFT);et.isTrue(i!==w.NONE,\"Found unlabelled area edge\");for(var r=i,o=this.iterator();o.hasNext();){var s=o.next().getLabel();et.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,Se.LEFT),u=s.getLocation(t,Se.RIGHT);if(a===u)return!1;if(u!==r)return!1;r=a}return!0},Xn.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},Xn.prototype.iterator=function(){return this.getEdges().iterator()},Xn.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new Nt(this._edgeMap.values())),this._edgeList},Xn.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===w.NONE&&(this._ptInAreaLocation[t]=zn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},Xn.prototype.toString=function(){var t=new D;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},Xn.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},Xn.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next().getLabel(),r=0;r<2;r++)i.isLine(r)&&i.getLocation(r)===w.BOUNDARY&&(e[r]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=w.NONE;if(e[u])l=w.EXTERIOR;else{var c=s.getCoordinate();l=this.getLocation(u,c,t)}a.setAllLocationsIfNull(u,l)}},Xn.prototype.getDegree=function(){return this._edgeMap.size()},Xn.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},Xn.prototype.interfaces_=function(){return[]},Xn.prototype.getClass=function(){return Xn};var Yn=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var r=this._resultAreaEdgeList.get(i),o=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new we(\"no outgoing dirEdge found\",this.getCoordinate());et.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),o=i.getQuadrant();return Be.isNorthern(r)&&Be.isNorthern(o)?n:Be.isNorthern(r)||Be.isNorthern(o)?0!==n.getDy()?n:0!==i.getDy()?i:(et.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):i},e.prototype.print=function(t){Y.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Nt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Se.LEFT),i=t.getDepth(Se.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,r)!==i)throw new we(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var l=this._edgeList.get(u);l.setEdgeDepths(Se.RIGHT,a),a=l.getDepth(Se.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,i=this._SCANNING_FOR_INCOMING,r=this._resultAreaEdgeList.size()-1;r>=0;r--){var o=this._resultAreaEdgeList.get(r),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),i){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(et.isTrue(null!==e,\"found null for first outgoing dirEdge\"),et.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],i=0,r=this.iterator();r.hasNext();){r.next().getEdgeRing()===n&&i++}return i}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=w.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=w.INTERIOR;break}if(i.isInResult()){t=w.EXTERIOR;break}}}if(t===w.NONE)return null;for(var r=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(r===w.INTERIOR):(s.isInResult()&&(r=w.EXTERIOR),a.isInResult()&&(r=w.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Pe(w.NONE);for(var n=this.iterator();n.hasNext();)for(var i=n.next().getEdge().getLabel(),r=0;r<2;r++){var o=i.getLocation(r);o!==w.INTERIOR&&o!==w.BOUNDARY||this._label.setLocation(r,w.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xn),kn=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new Ge(t,new Yn)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xe),jn=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};jn.prototype.compareTo=function(t){var e=t;return jn.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},jn.prototype.interfaces_=function(){return[E]},jn.prototype.getClass=function(){return jn},jn.orientation=function(t){return 1===Lt.increasingDirection(t)},jn.compareOriented=function(t,e,n,i){for(var r=e?1:-1,o=i?1:-1,s=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var c=t[u].compareTo(n[l]);if(0!==c)return c;var p=(u+=r)===s,h=(l+=o)===a;if(p&&!h)return-1;if(!p&&h)return 1;if(p&&h)return 0}};var Hn=function(){this._edges=new Nt,this._ocaMap=new p};Hn.prototype.print=function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},Hn.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Hn.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Hn.prototype.iterator=function(){return this._edges.iterator()},Hn.prototype.getEdges=function(){return this._edges},Hn.prototype.get=function(t){return this._edges.get(t)},Hn.prototype.findEqualEdge=function(t){var e=new jn(t.getCoordinates());return this._ocaMap.get(e)},Hn.prototype.add=function(t){this._edges.add(t);var e=new jn(t.getCoordinates());this._ocaMap.put(e,t)},Hn.prototype.interfaces_=function(){return[]},Hn.prototype.getClass=function(){return Hn};var Wn=function(){};Wn.prototype.processIntersections=function(t,e,n,i){},Wn.prototype.isDone=function(){},Wn.prototype.interfaces_=function(){return[]},Wn.prototype.getClass=function(){return Wn};var Kn=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Kn.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Kn.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},Kn.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Kn.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Kn.prototype.getLineIntersector=function(){return this._li},Kn.prototype.hasProperIntersection=function(){return this._hasProper},Kn.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Kn.prototype.hasIntersection=function(){return this._hasIntersection},Kn.prototype.isDone=function(){return!1},Kn.prototype.hasInteriorIntersection=function(){return this._hasInterior},Kn.prototype.interfaces_=function(){return[Wn]},Kn.prototype.getClass=function(){return Kn},Kn.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jn=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new C(t),this.segmentIndex=e,this.dist=n};Jn.prototype.getSegmentIndex=function(){return this.segmentIndex},Jn.prototype.getCoordinate=function(){return this.coord},Jn.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},Jn.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jn.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jn.prototype.toString=function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},Jn.prototype.getDistance=function(){return this.dist},Jn.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jn.prototype.interfaces_=function(){return[E]},Jn.prototype.getClass=function(){return Jn};var Qn=function(){this._nodeMap=new p,this.edge=null;var t=arguments[0];this.edge=t};Qn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Qn.prototype.iterator=function(){return this._nodeMap.values().iterator()},Qn.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},Qn.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Qn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return r&&(o[s]=e.coord),new ni(o,new Pe(this.edge._label))},Qn.prototype.add=function(t,e,n){var i=new Jn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)},Qn.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Qn.prototype.interfaces_=function(){return[]},Qn.prototype.getClass=function(){return Qn};var Zn=function(){};Zn.prototype.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=this.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return Zn.toIntArray(n)},Zn.prototype.findChainEnd=function(t,e){for(var n=Be.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){if(Be.quadrant(t[i-1],t[i])!==n)break;i++}return i-1},Zn.prototype.interfaces_=function(){return[]},Zn.prototype.getClass=function(){return Zn},Zn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var $n=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new j,this.env2=new j;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Zn;this.startIndex=e.getChainStartIndices(this.pts)};$n.prototype.getCoordinates=function(){return this.pts},$n.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},$n.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},$n.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],c=this.pts[r],p=this.pts[o],h=s.pts[a],f=s.pts[u];if(o-r==1&&u-a==1)return l.addIntersections(this.e,r,s.e,a),null;if(this.env1.init(c,p),this.env2.init(h,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((r+o)/2),d=Math.trunc((a+u)/2);r<g&&(a<d&&this.computeIntersectsForChain(r,g,s,a,d,l),d<u&&this.computeIntersectsForChain(r,g,s,d,u,l)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,l),d<u&&this.computeIntersectsForChain(g,o,s,d,u,l))}},$n.prototype.getStartIndexes=function(){return this.startIndex},$n.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},$n.prototype.interfaces_=function(){return[]},$n.prototype.getClass=function(){return $n};var ti=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},ei={NULL_VALUE:{configurable:!0}};ti.prototype.getDepth=function(t,e){return this._depth[t][e]},ti.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},ti.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==ti.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===ti.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._depth[i][r]===ti.NULL_VALUE}},ti.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}},ti.prototype.getDelta=function(t){return this._depth[t][Se.RIGHT]-this._depth[t][Se.LEFT]},ti.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?w.EXTERIOR:w.INTERIOR},ti.prototype.toString=function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]},ti.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var i=t.getLocation(e,n);i!==w.EXTERIOR&&i!==w.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=ti.depthAtLocation(i):this._depth[e][n]+=ti.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],o=arguments[1];arguments[2]===w.INTERIOR&&this._depth[r][o]++}},ti.prototype.interfaces_=function(){return[]},ti.prototype.getClass=function(){return ti},ti.depthAtLocation=function(t){return t===w.EXTERIOR?0:t===w.INTERIOR?1:ti.NULL_VALUE},ei.NULL_VALUE.get=function(){return-1},Object.defineProperties(ti,ei);var ni=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Qn(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ti,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.pts=i,this._label=r}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Pe.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var i=!0,r=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(i=!1),this.pts[s].equals2D(n.pts[--o])||(r=!1),!i&&!r)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new $n(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new j;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,i){var r=new C(t.getIntersection(i)),o=e,s=t.getEdgeDistance(n,i),a=o+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(o=a,s=0)}this.eiList.add(r,o,s)},e.prototype.toString=function(){var t=new D;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Se.ON),e.getLocation(1,Se.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Se.LEFT),e.getLocation(1,Se.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Se.RIGHT),e.getLocation(1,Se.RIGHT),2))},e}(Fe),ii=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Hn,this._bufParams=t||null};ii.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},ii.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip(),n.merge(i);var r=ii.depthDelta(i),o=e.getDepthDelta()+r;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(ii.depthDelta(t.getLabel()))},ii.prototype.buildSubgraphs=function(t,e){for(var n=new Nt,i=t.iterator();i.hasNext();){var r=i.next(),o=r.getRightmostCoordinate(),s=new An(n).getDepth(o);r.computeDepth(s),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},ii.prototype.createSubgraphs=function(t){for(var e=new Nt,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new Te;r.create(i),e.add(r)}}return $e.sort(e,$e.reverseOrder()),e},ii.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},ii.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new xn,n=new rt;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kn(n)),e},ii.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var i=new Mn(n,this._bufParams),r=new Bn(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new Ye(new kn),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new ke(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},ii.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings().iterator();i.hasNext();){var r=i.next(),o=r.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=r.getData(),a=new ni(r.getCoordinates(),new Pe(s));this.insertUniqueEdge(a)}}},ii.prototype.setNoder=function(t){this._workingNoder=t},ii.prototype.interfaces_=function(){return[]},ii.prototype.getClass=function(){return ii},ii.depthDelta=function(t){var e=t.getLocation(0,Se.LEFT),n=t.getLocation(0,Se.RIGHT);return e===w.INTERIOR&&n===w.EXTERIOR?1:e===w.EXTERIOR&&n===w.INTERIOR?-1:0},ii.convertSegStrings=function(t){for(var e=new _e,n=new Nt;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)};var ri=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=i,this._offsetX=r,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};ri.prototype.rescale=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],i=0;i<n.length;i++)n[i].x=n[i].x/this._scaleFactor+this._offsetX,n[i].y=n[i].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Y.out.println(n)}},ri.prototype.scale=function(){if(T(arguments[0],It)){for(var t=arguments[0],e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new gn(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],o=new Array(r.length).fill(null),s=0;s<r.length;s++)o[s]=new C(Math.round((r[s].x-this._offsetX)*this._scaleFactor),Math.round((r[s].y-this._offsetY)*this._scaleFactor),r[s].z);return Lt.removeRepeatedPoints(o)}},ri.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},ri.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},ri.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},ri.prototype.interfaces_=function(){return[In]},ri.prototype.getClass=function(){return ri};var oi=function(){this._li=new rt,this._segStrings=null;var t=arguments[0];this._segStrings=t},si={fact:{configurable:!0}};oi.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1].iterator();i.hasNext();)for(var r=i.next().getCoordinates(),o=1;o<r.length-1;o++)if(r[o].equals(n))throw new $(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)},oi.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],o=arguments[1],s=r.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var l=0;l<a.length-1;l++)this.checkInteriorIntersections(r,u,o,l);else if(4===arguments.length){var c=arguments[0],p=arguments[1],h=arguments[2],f=arguments[3];if(c===h&&p===f)return null;var g=c.getCoordinates()[p],d=c.getCoordinates()[p+1],y=h.getCoordinates()[f],_=h.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new $(\"found non-noded intersection at \"+g+\"-\"+d+\" and \"+y+\"-\"+_)}},oi.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},oi.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),i=0;i<n.length-2;i++)this.checkCollapse(n[i],n[i+1],n[i+2])},oi.prototype.hasInteriorIntersection=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},oi.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new $(\"found non-noded collapse at \"+oi.fact.createLineString([t,e,n]))},oi.prototype.interfaces_=function(){return[]},oi.prototype.getClass=function(){return oi},si.fact.get=function(){return new _e},Object.defineProperties(oi,si);var ai=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new m(\"Scale factor must be non-zero\");1!==e&&(this._pt=new C(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new C,this._p1Scaled=new C),this.initCorners(this._pt)},ui={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};ai.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>i||this._maxy<r||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return et.isTrue(!(s&&a),\"Found bad envelope test\"),a},ai.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new C(this._maxx,this._maxy),this._corner[1]=new C(this._minx,this._maxy),this._corner[2]=new C(this._minx,this._miny),this._corner[3]=new C(this._maxx,this._miny)},ai.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},ai.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},ai.prototype.getCoordinate=function(){return this._originalPt},ai.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},ai.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=ai.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new j(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},ai.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},ai.prototype.intersectsToleranceSquare=function(t,e){var n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},ai.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)},ai.prototype.interfaces_=function(){return[]},ai.prototype.getClass=function(){return ai},ui.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(ai,ui);var li=function(){this.tempEnv1=new j,this.selectedSegment=new dn};li.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},li.prototype.interfaces_=function(){return[]},li.prototype.getClass=function(){return li};var ci=function(){this._index=null;var t=arguments[0];this._index=t},pi={HotPixelSnapAction:{configurable:!0}};ci.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),o=new hi(e,n,i);return this._index.query(r,{interfaces_:function(){return[Ke]},visitItem:function(t){t.select(r,o)}}),o.isNodeAdded()}},ci.prototype.interfaces_=function(){return[]},ci.prototype.getClass=function(){return ci},pi.HotPixelSnapAction.get=function(){return hi},Object.defineProperties(ci,pi);var hi=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],i=e.getContext();if(null!==this._parentEdge&&i===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(i,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(li),fi=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new Nt};fi.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}},fi.prototype.isDone=function(){return!1},fi.prototype.getInteriorIntersections=function(){return this._interiorIntersections},fi.prototype.interfaces_=function(){return[Wn]},fi.prototype.getClass=function(){return fi};var gi=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rt,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};gi.prototype.checkCorrectness=function(t){var e=gn.getNodedSubstrings(t),n=new oi(e);try{n.checkValid()}catch(t){if(!(t instanceof z))throw t;t.printStackTrace()}},gi.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},gi.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},gi.prototype.findInteriorIntersections=function(t,e){var n=new fi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},gi.prototype.computeVertexSnaps=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof gn)for(var n=arguments[0],i=n.getCoordinates(),r=0;r<i.length;r++){var o=new ai(i[r],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,r)&&n.addIntersection(i[r],r)}},gi.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new xn,this._pointSnapper=new ci(this._noder.getIndex()),this.snapRound(t,this._li)},gi.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new ai(n,this._scaleFactor,this._li);this._pointSnapper.snap(i)}},gi.prototype.interfaces_=function(){return[In]},gi.prototype.getClass=function(){return gi};var di=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Cn,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},yi={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};di.prototype.bufferFixedPrecision=function(t){var e=new ri(new gi(new fe(1)),t.getScale()),n=new ii(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},di.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=di.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof we))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],i=di.precisionScaleFactor(this._argGeom,this._distance,n),r=new fe(i);this.bufferFixedPrecision(r)}},di.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fe.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},di.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},di.prototype.bufferOriginalPrecision=function(){try{var t=new ii(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof $))throw t;this._saveException=t}},di.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},di.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},di.prototype.interfaces_=function(){return[]},di.prototype.getClass=function(){return di},di.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new di(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=arguments[2],o=new di(n);o.setQuadrantSegments(r);return o.getResultGeometry(i)}if(arguments[2]instanceof Cn&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new di(s,u).getResultGeometry(a)}}else if(4===arguments.length){var l=arguments[0],c=arguments[1],p=arguments[2],h=arguments[3],f=new di(l);f.setQuadrantSegments(p),f.setEndCapStyle(h);return f.getResultGeometry(c)}},di.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=R.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,o)},yi.CAP_ROUND.get=function(){return Cn.CAP_ROUND},yi.CAP_BUTT.get=function(){return Cn.CAP_FLAT},yi.CAP_FLAT.get=function(){return Cn.CAP_FLAT},yi.CAP_SQUARE.get=function(){return Cn.CAP_SQUARE},yi.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(di,yi);var _i=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};_i.prototype.getCoordinates=function(){return this._pt},_i.prototype.getCoordinate=function(t){return this._pt[t]},_i.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},_i.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},_i.prototype.getDistance=function(){return this._distance},_i.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},_i.prototype.interfaces_=function(){return[]},_i.prototype.getClass=function(){return _i};var mi=function(){};mi.prototype.interfaces_=function(){return[]},mi.prototype.getClass=function(){return mi},mi.computeDistance=function(){if(arguments[2]instanceof _i&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=t.getCoordinates(),r=new dn,o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof _i&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];mi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)mi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof _i&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)mi.computeDistance(p,h,f);else if(p instanceof $t)mi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);mi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof _i&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var vi=function(t){this._maxPtDist=new _i,this._inputGeom=t||null},Ii={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};vi.prototype.computeMaxMidpointDistance=function(t){var e=new xi(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.computeMaxVertexDistance=function(t){var e=new Ei(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},vi.prototype.getDistancePoints=function(){return this._maxPtDist},vi.prototype.interfaces_=function(){return[]},vi.prototype.getClass=function(){return vi},Ii.MaxPointDistanceFilter.get=function(){return Ei},Ii.MaxMidpointDistanceFilter.get=function(){return xi},Object.defineProperties(vi,Ii);var Ei=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};Ei.prototype.filter=function(t){this._minPtDist.initialize(),mi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ei.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ei.prototype.interfaces_=function(){return[ft]},Ei.prototype.getClass=function(){return Ei};var xi=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};xi.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=new C((n.x+i.x)/2,(n.y+i.y)/2);this._minPtDist.initialize(),mi.computeDistance(this._geom,r,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xi.prototype.isDone=function(){return!1},xi.prototype.isGeometryChanged=function(){return!1},xi.prototype.getMaxPointDistance=function(){return this._maxPtDist},xi.prototype.interfaces_=function(){return[Ut]},xi.prototype.getClass=function(){return xi};var Ni=function(t){this._comps=t||null};Ni.prototype.filter=function(t){t instanceof $t&&this._comps.add(t)},Ni.prototype.interfaces_=function(){return[Vt]},Ni.prototype.getClass=function(){return Ni},Ni.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Ni.getPolygons(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $t?n.add(e):e instanceof zt&&e.apply(new Ni(n)),n}};var Ci=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};Ci.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof ee){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Kt&&this._lines.add(t)},Ci.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Ci.prototype.interfaces_=function(){return[lt]},Ci.prototype.getClass=function(){return Ci},Ci.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Ci.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(Ci.getLines(e,n))}},Ci.getLines=function(){if(1===arguments.length){var t=arguments[0];return Ci.getLines(t,!1)}if(2===arguments.length){if(T(arguments[0],It)&&T(arguments[1],It)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();Ci.getLines(r,n)}return n}if(arguments[0]instanceof ct&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new Nt;return o.apply(new Ci(a,s)),a}if(arguments[0]instanceof ct&&T(arguments[1],It)){var u=arguments[0],l=arguments[1];return u instanceof Kt?l.add(u):u.apply(new Ci(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&T(arguments[0],It)&&T(arguments[1],It)){for(var c=arguments[0],p=arguments[1],h=arguments[2],f=c.iterator();f.hasNext();){var g=f.next();Ci.getLines(g,p,h)}return p}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof ct&&T(arguments[1],It)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new Ci(y,_)),y}}};var Si=function(){if(this._boundaryRule=gt.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new m(\"Rule must be non-null\");this._boundaryRule=t}};Si.prototype.locateInternal=function(){if(arguments[0]instanceof C&&arguments[1]instanceof $t){var t=arguments[0],e=arguments[1];if(e.isEmpty())return w.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===w.EXTERIOR)return w.EXTERIOR;if(i===w.BOUNDARY)return w.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var o=e.getInteriorRingN(r),s=this.locateInPolygonRing(t,o);if(s===w.INTERIOR)return w.EXTERIOR;if(s===w.BOUNDARY)return w.BOUNDARY}return w.INTERIOR}if(arguments[0]instanceof C&&arguments[1]instanceof Kt){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return w.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?at.isOnLine(a,l)?w.INTERIOR:w.EXTERIOR:w.BOUNDARY}if(arguments[0]instanceof C&&arguments[1]instanceof Qt){var c=arguments[0];return arguments[1].getCoordinate().equals2D(c)?w.INTERIOR:w.EXTERIOR}},Si.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?at.locatePointInRing(t,e.getCoordinates()):w.EXTERIOR},Si.prototype.intersects=function(t,e){return this.locate(t,e)!==w.EXTERIOR},Si.prototype.updateLocationInfo=function(t){t===w.INTERIOR&&(this._isIn=!0),t===w.BOUNDARY&&this._numBoundaries++},Si.prototype.computeLocation=function(t,e){if(e instanceof Qt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Kt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $t)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof ne)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof zt)for(var u=new Un(e);u.hasNext();){var l=u.next();l!==e&&this.computeLocation(t,l)}},Si.prototype.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:e instanceof Kt?this.locateInternal(t,e):e instanceof $t?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?w.BOUNDARY:this._numBoundaries>0||this._isIn?w.INTERIOR:w.EXTERIOR)},Si.prototype.interfaces_=function(){return[]},Si.prototype.getClass=function(){return Si};var Li=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._component=i,this._segIndex=r,this._pt=o}},bi={INSIDE_AREA:{configurable:!0}};Li.prototype.isInsideArea=function(){return this._segIndex===Li.INSIDE_AREA},Li.prototype.getCoordinate=function(){return this._pt},Li.prototype.getGeometryComponent=function(){return this._component},Li.prototype.getSegmentIndex=function(){return this._segIndex},Li.prototype.interfaces_=function(){return[]},Li.prototype.getClass=function(){return Li},bi.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Li,bi);var wi=function(t){this._pts=t||null};wi.prototype.filter=function(t){t instanceof Qt&&this._pts.add(t)},wi.prototype.interfaces_=function(){return[Vt]},wi.prototype.getClass=function(){return wi},wi.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Qt?$e.singletonList(t):wi.getPoints(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Qt?n.add(e):e instanceof zt&&e.apply(new wi(n)),n}};var Oi=function(){this._locations=null;var t=arguments[0];this._locations=t};Oi.prototype.filter=function(t){(t instanceof Qt||t instanceof Kt||t instanceof $t)&&this._locations.add(new Li(t,0,t.getCoordinate()))},Oi.prototype.interfaces_=function(){return[Vt]},Oi.prototype.getClass=function(){return Oi},Oi.getLocations=function(t){var e=new Nt;return t.apply(new Oi(e)),e};var Ti=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Si,this._minDistanceLocation=null,this._minDistance=v.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=i,this._terminateDistance=r}};Ti.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=Ni.getPolygons(this._geom[e]);if(r.size()>0){var o=Oi.getLocations(this._geom[i]);if(this.computeContainmentDistance(o,r,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[i]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&T(arguments[0],xt)&&T(arguments[1],xt)){for(var s=arguments[0],a=arguments[1],u=arguments[2],l=0;l<s.size();l++)for(var c=s.get(l),p=0;p<a.size();p++)if(this.computeContainmentDistance(c,a.get(p),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Li&&arguments[1]instanceof $t){var h=arguments[0],f=arguments[1],g=arguments[2],d=h.getCoordinate();if(w.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=h,g[1]=new Li(f,d),null}},Ti.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=Ci.getLines(this._geom[0]),n=Ci.getLines(this._geom[1]),i=wi.getPoints(this._geom[0]),r=wi.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},Ti.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Ti.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Ti.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Ti.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Qt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),o=0;o<i.length-1;o++){var s=at.distancePointLine(r,i[o],i[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new dn(i[o],i[o+1]).closestPoint(r);n[0]=new Li(t,o,a),n[1]=new Li(e,0,r)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Kt){var u=arguments[0],l=arguments[1],c=arguments[2];if(u.getEnvelopeInternal().distance(l.getEnvelopeInternal())>this._minDistance)return null;for(var p=u.getCoordinates(),h=l.getCoordinates(),f=0;f<p.length-1;f++)for(var g=0;g<h.length-1;g++){var d=at.distanceLineLine(p[f],p[f+1],h[g],h[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new dn(p[f],p[f+1]),_=new dn(h[g],h[g+1]),m=y.closestPoints(_);c[0]=new Li(u,f,m[0]),c[1]=new Li(l,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Ti.prototype.computeMinDistancePoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o),a=r.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Li(r,0,r.getCoordinate()),n[1]=new Li(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new m(\"null geometries are not supported\");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Ti.prototype.computeMinDistanceLines=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.interfaces_=function(){return[]},Ti.prototype.getClass=function(){return Ti},Ti.distance=function(t,e){return new Ti(t,e).distance()},Ti.isWithinDistance=function(t,e,n){return new Ti(t,e,n).distance()<=n},Ti.nearestPoints=function(t,e){return new Ti(t,e).nearestPoints()};var Ri=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};Ri.prototype.getCoordinates=function(){return this._pt},Ri.prototype.getCoordinate=function(t){return this._pt[t]},Ri.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},Ri.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},Ri.prototype.toString=function(){return Z.toLineString(this._pt[0],this._pt[1])},Ri.prototype.getDistance=function(){return this._distance},Ri.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},Ri.prototype.interfaces_=function(){return[]},Ri.prototype.getClass=function(){return Ri};var Pi=function(){};Pi.prototype.interfaces_=function(){return[]},Pi.prototype.getClass=function(){return Pi},Pi.computeDistance=function(){if(arguments[2]instanceof Ri&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=new dn,r=t.getCoordinates(),o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];Pi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Pi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)Pi.computeDistance(p,h,f);else if(p instanceof $t)Pi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Pi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var Di=function(){this._g0=null,this._g1=null,this._ptDist=new Ri,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Mi={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Di.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Di.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new m(\"Fraction is not in range (0.0 - 1.0]\");this._densifyFrac=t},Di.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Di.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Di.prototype.computeOrientedDistance=function(t,e,n){var i=new Ai(e);if(t.apply(i),n.setMaximum(i.getMaxPointDistance()),this._densifyFrac>0){var r=new Fi(e,this._densifyFrac);t.apply(r),n.setMaximum(r.getMaxPointDistance())}},Di.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Di.prototype.interfaces_=function(){return[]},Di.prototype.getClass=function(){return Di},Di.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Di(t,e).distance()}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new Di(n,i);return o.setDensifyFraction(r),o.distance()}},Mi.MaxPointDistanceFilter.get=function(){return Ai},Mi.MaxDensifiedByFractionDistanceFilter.get=function(){return Fi},Object.defineProperties(Di,Mi);var Ai=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._euclideanDist=new Pi,this._geom=null;var t=arguments[0];this._geom=t};Ai.prototype.filter=function(t){this._minPtDist.initialize(),Pi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ai.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ai.prototype.interfaces_=function(){return[ft]},Ai.prototype.getClass=function(){return Ai};var Fi=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Fi.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=(i.x-n.x)/this._numSubSegs,o=(i.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*r,u=n.y+s*o,l=new C(a,u);this._minPtDist.initialize(),Pi.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Fi.prototype.isDone=function(){return!1},Fi.prototype.isGeometryChanged=function(){return!1},Fi.prototype.getMaxPointDistance=function(){return this._maxPtDist},Fi.prototype.interfaces_=function(){return[Ut]},Fi.prototype.getClass=function(){return Fi};var Gi=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qi={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Gi.prototype.checkMaximumDistance=function(t,e,n){var i=new Di(e,t);if(i.setDensifyFraction(.25),this._maxDistanceFound=i.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var r=i.getCoordinates();this._errorLocation=r[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too large (\"+this._maxDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\")\"}},Gi.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Gi.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Gi.VERBOSE&&Y.out.println(\"Min Dist= \"+this._minDistanceFound+\"  err= \"+(1-this._minDistanceFound/this._bufDistance)+\"  Max Dist= \"+this._maxDistanceFound+\"  err= \"+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Gi.prototype.checkNegativeValid=function(){if(!(this._input instanceof $t||this._input instanceof ne||this._input instanceof zt))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Gi.prototype.getErrorIndicator=function(){return this._errorIndicator},Gi.prototype.checkMinimumDistance=function(t,e,n){var i=new Ti(t,e,n);if(this._minDistanceFound=i.distance(),this._minDistanceFound<n){this._isValid=!1;var r=i.nearestPoints();this._errorLocation=i.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too small (\"+this._minDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\" )\"}},Gi.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Gi.prototype.getErrorLocation=function(){return this._errorLocation},Gi.prototype.getPolygonLines=function(t){for(var e=new Nt,n=new Ci(e),i=Ni.getPolygons(t).iterator();i.hasNext();){i.next().apply(n)}return t.getFactory().buildGeometry(e)},Gi.prototype.getErrorMessage=function(){return this._errMsg},Gi.prototype.interfaces_=function(){return[]},Gi.prototype.getClass=function(){return Gi},qi.VERBOSE.get=function(){return!1},qi.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gi,qi);var Bi=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Vi={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Bi.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Bi.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Bi.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new j(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new j(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg=\"Buffer envelope is incorrect\",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report(\"Envelope\")},Bi.prototype.checkDistance=function(){var t=new Gi(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report(\"Distance\")},Bi.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg=\"Area of positive buffer is smaller than input\",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg=\"Area of negative buffer is larger than input\",this._errorIndicator=this._result),this.report(\"Area\")},Bi.prototype.checkPolygonal=function(){this._result instanceof $t||this._result instanceof ne||(this._isValid=!1),this._errorMsg=\"Result is not polygonal\",this._errorIndicator=this._result,this.report(\"Polygonal\")},Bi.prototype.getErrorIndicator=function(){return this._errorIndicator},Bi.prototype.getErrorLocation=function(){return this._errorLocation},Bi.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg=\"Result is non-empty\",this._errorIndicator=this._result),void this.report(\"ExpectedEmpty\"))},Bi.prototype.report=function(t){if(!Bi.VERBOSE)return null;Y.out.println(\"Check \"+t+\": \"+(this._isValid?\"passed\":\"FAILED\"))},Bi.prototype.getErrorMessage=function(){return this._errorMsg},Bi.prototype.interfaces_=function(){return[]},Bi.prototype.getClass=function(){return Bi},Bi.isValidMsg=function(t,e,n){var i=new Bi(t,e,n);return i.isValid()?null:i.getErrorMessage()},Bi.isValid=function(t,e,n){return!!new Bi(t,e,n).isValid()},Vi.VERBOSE.get=function(){return!1},Vi.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Bi,Vi);var Ui=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};Ui.prototype.getCoordinates=function(){return this._pts},Ui.prototype.size=function(){return this._pts.length},Ui.prototype.getCoordinate=function(t){return this._pts[t]},Ui.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},Ui.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:pn.octant(this.getCoordinate(t),this.getCoordinate(t+1))},Ui.prototype.setData=function(t){this._data=t},Ui.prototype.getData=function(){return this._data},Ui.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},Ui.prototype.interfaces_=function(){return[hn]},Ui.prototype.getClass=function(){return Ui};var zi=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Nt,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zi.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zi.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zi.prototype.getIntersectionSegments=function(){return this._intSegments},zi.prototype.count=function(){return this._intersectionCount},zi.prototype.getIntersections=function(){return this._intersections},zi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zi.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zi.prototype.processIntersections=function(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,i)))return null}var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=r,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zi.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zi.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zi.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zi.prototype.interfaces_=function(){return[Wn]},zi.prototype.getClass=function(){return zi},zi.createAllIntersectionsFinder=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e},zi.createAnyIntersectionFinder=function(t){return new zi(t)},zi.createIntersectionCounter=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var Xi=function(){this._li=new rt,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};Xi.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},Xi.prototype.getIntersections=function(){return this._segInt.getIntersections()},Xi.prototype.isValid=function(){return this.execute(),this._isValid},Xi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Xi.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zi(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new xn;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},Xi.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new we(this.getErrorMessage(),this._segInt.getInteriorIntersection())},Xi.prototype.getErrorMessage=function(){if(this._isValid)return\"no intersections found\";var t=this._segInt.getIntersectionSegments();return\"found non-noded intersection between \"+Z.toLineString(t[0],t[1])+\" and \"+Z.toLineString(t[2],t[3])},Xi.prototype.interfaces_=function(){return[]},Xi.prototype.getClass=function(){return Xi},Xi.computeIntersections=function(t){var e=new Xi(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Yi=function t(){this._nv=null;var e=arguments[0];this._nv=new Xi(t.toSegmentStrings(e))};Yi.prototype.checkValid=function(){this._nv.checkValid()},Yi.prototype.interfaces_=function(){return[]},Yi.prototype.getClass=function(){return Yi},Yi.toSegmentStrings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ui(i.getCoordinates(),i))}return e},Yi.checkValid=function(t){new Yi(t).checkValid()};var ki=function(t){this._mapOp=t};ki.prototype.map=function(t){for(var e=new Nt,n=0;n<t.getNumGeometries();n++){var i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(_e.toGeometryArray(e))},ki.prototype.interfaces_=function(){return[]},ki.prototype.getClass=function(){return ki},ki.map=function(t,e){return new ki(e).map(t)};var ji=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Nt,this._resultLineList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};ji.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},ji.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},ji.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},ji.prototype.collectLineEdge=function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Lr.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},ji.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getEdge();if(n.isLineEdge()&&!i.isCoveredSet()){var r=this._op.isCoveredByA(n.getCoordinate());i.setCovered(r)}}},ji.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},ji.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(i),n.setInResult(!0)}},ji.prototype.collectBoundaryTouchEdge=function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(et.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Lr.isResultOfOp(i,e)&&e===Lr.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},ji.prototype.interfaces_=function(){return[]},ji.prototype.getClass=function(){return ji};var Hi=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new Nt;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Hi.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Hi.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Lr.INTERSECTION))){var i=n.getLabel();Lr.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},Hi.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Hi.prototype.interfaces_=function(){return[]},Hi.prototype.getClass=function(){return Hi};var Wi=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Wi.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformPolygon=function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof ee&&!i.isEmpty()||(n=!1);for(var r=new Nt,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof ee||(n=!1),r.add(s))}if(n)return this._factory.createPolygon(i,r.toArray([]));var a=new Nt;return null!==i&&a.add(i),a.addAll(r),this._factory.buildGeometry(a)},Wi.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Wi.prototype.getInputGeometry=function(){return this._inputGeom},Wi.prototype.transformMultiLineString=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformCoordinates=function(t,e){return this.copy(t)},Wi.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformMultiPoint=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformMultiPolygon=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.copy=function(t){return t.copy()},Wi.prototype.transformGeometryCollection=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this._pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_e.toGeometryArray(n)):this._factory.buildGeometry(n)},Wi.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Qt)return this.transformPoint(t,null);if(t instanceof te)return this.transformMultiPoint(t,null);if(t instanceof ee)return this.transformLinearRing(t,null);if(t instanceof Kt)return this.transformLineString(t,null);if(t instanceof Xt)return this.transformMultiLineString(t,null);if(t instanceof $t)return this.transformPolygon(t,null);if(t instanceof ne)return this.transformMultiPolygon(t,null);if(t instanceof zt)return this.transformGeometryCollection(t,null);throw new m(\"Unknown Geometry subtype: \"+t.getClass().getName())},Wi.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Wi.prototype.interfaces_=function(){return[]},Wi.prototype.getClass=function(){return Wi};var Ki=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new dn,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Kt&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];this._srcPts=i,this._isClosed=t.isClosed(i),this._snapTolerance=r}};Ki.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;i<n;i++){var r=t.get(i),o=this.findSnapForVertex(r,e);null!==o&&(t.set(i,new C(o)),0===i&&this._isClosed&&t.set(t.size()-1,new C(o)))}},Ki.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Ki.prototype.snapTo=function(t){var e=new St(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Ki.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;i<n;i++){var r=e[i],o=this.findSegmentIndexToSnap(r,t);o>=0&&t.add(o+1,new C(r),!1)}},Ki.prototype.findSegmentIndexToSnap=function(t,e){for(var n=v.MAX_VALUE,i=-1,r=0;r<e.size()-1;r++){if(this._seg.p0=e.get(r),this._seg.p1=e.get(r+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,i=r)}return i},Ki.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Ki.prototype.interfaces_=function(){return[]},Ki.prototype.getClass=function(){return Ki},Ki.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Ji=function(t){this._srcGeom=t||null},Qi={SNAP_PRECISION_FACTOR:{configurable:!0}};Ji.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Zi(e,n).transform(this._srcGeom)},Ji.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),i=new Zi(t,n,!0).transform(this._srcGeom),r=i;return e&&T(r,Zt)&&(r=i.buffer(0)),r},Ji.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Ji.prototype.extractTargetCoordinates=function(t){for(var e=new f,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},Ji.prototype.computeMinimumSegmentLength=function(t){for(var e=v.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);i<e&&(e=i)}return e},Ji.prototype.interfaces_=function(){return[]},Ji.prototype.getClass=function(){return Ji},Ji.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ji(t);i[0]=r.snapTo(e,n);var o=new Ji(e);return i[1]=o.snapTo(i[0],n),i},Ji.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ji.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fe.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1];return Math.min(Ji.computeOverlaySnapTolerance(r),Ji.computeOverlaySnapTolerance(o))}},Ji.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Ji.SNAP_PRECISION_FACTOR},Ji.snapToSelf=function(t,e,n){return new Ji(t).snapToSelf(e,n)},Qi.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Ji,Qi);var Zi=function(t){function e(e,n,i){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==i&&i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Ki(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Wi),$i=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};$i.prototype.getCommon=function(){return v.longBitsToDouble(this._commonBits)},$i.prototype.add=function(t){var e=v.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=$i.signExpBits(this._commonBits),this._isFirst=!1,null;if($i.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=$i.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=$i.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},$i.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=v.longBitsToDouble(t),n=\"0000000000000000000000000000000000000000000000000000000000000000\"+v.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+\"  \"+i.substring(1,12)+\"(exp) \"+i.substring(12)+\" [ \"+e+\" ]\"}},$i.prototype.interfaces_=function(){return[]},$i.prototype.getClass=function(){return $i},$i.getBit=function(t,e){return 0!=(t&1<<e)?1:0},$i.signExpBits=function(t){return t>>52},$i.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},$i.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if($i.getBit(t,i)!==$i.getBit(e,i))return n;n++}return 52};var tr=function(){this._commonCoord=null,this._ccFilter=new nr},er={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};tr.prototype.addCommonBits=function(t){var e=new ir(this._commonCoord);t.apply(e),t.geometryChanged()},tr.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new C(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new ir(e);return t.apply(n),t.geometryChanged(),t},tr.prototype.getCommonCoordinate=function(){return this._commonCoord},tr.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},tr.prototype.interfaces_=function(){return[]},tr.prototype.getClass=function(){return tr},er.CommonCoordinateFilter.get=function(){return nr},er.Translater.get=function(){return ir},Object.defineProperties(tr,er);var nr=function(){this._commonBitsX=new $i,this._commonBitsY=new $i};nr.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},nr.prototype.getCommonCoordinate=function(){return new C(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},nr.prototype.interfaces_=function(){return[ft]},nr.prototype.getClass=function(){return nr};var ir=function(){this.trans=null;var t=arguments[0];this.trans=t};ir.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},ir.prototype.isDone=function(){return!1},ir.prototype.isGeometryChanged=function(){return!0},ir.prototype.interfaces_=function(){return[Ut]},ir.prototype.getClass=function(){return ir};var rr=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rr.prototype.selfSnap=function(t){return new Ji(t).snapTo(t,this._snapTolerance)},rr.prototype.removeCommonBits=function(t){this._cbr=new tr,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rr.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rr.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Lr.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rr.prototype.checkValid=function(t){t.isValid()||Y.out.println(\"Snapped geometry is invalid\")},rr.prototype.computeSnapTolerance=function(){this._snapTolerance=Ji.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rr.prototype.snap=function(t){var e=this.removeCommonBits(t);return Ji.snap(e[0],e[1],this._snapTolerance)},rr.prototype.interfaces_=function(){return[]},rr.prototype.getClass=function(){return rr},rr.overlayOp=function(t,e,n){return new rr(t,e).getResultGeometry(n)},rr.union=function(t,e){return rr.overlayOp(t,e,Lr.UNION)},rr.intersection=function(t,e){return rr.overlayOp(t,e,Lr.INTERSECTION)},rr.symDifference=function(t,e){return rr.overlayOp(t,e,Lr.SYMDIFFERENCE)},rr.difference=function(t,e){return rr.overlayOp(t,e,Lr.DIFFERENCE)};var or=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};or.prototype.getResultGeometry=function(t){var e=null,n=!1,i=null;try{e=Lr.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof $))throw t;i=t}if(!n)try{e=rr.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof $?i:t}return e},or.prototype.interfaces_=function(){return[]},or.prototype.getClass=function(){return or},or.overlayOp=function(t,e,n){return new or(t,e).getResultGeometry(n)},or.union=function(t,e){return or.overlayOp(t,e,Lr.UNION)},or.intersection=function(t,e){return or.overlayOp(t,e,Lr.INTERSECTION)},or.symDifference=function(t,e){return or.overlayOp(t,e,Lr.SYMDIFFERENCE)},or.difference=function(t,e){return or.overlayOp(t,e,Lr.DIFFERENCE)};var sr=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sr.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sr.prototype.interfaces_=function(){return[]},sr.prototype.getClass=function(){return sr};var ar=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=i,this._xValue=r,this._obj=o}},ur={INSERT:{configurable:!0},DELETE:{configurable:!0}};ar.prototype.isDelete=function(){return this._eventType===ar.DELETE},ar.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},ar.prototype.getObject=function(){return this._obj},ar.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},ar.prototype.getInsertEvent=function(){return this._insertEvent},ar.prototype.isInsert=function(){return this._eventType===ar.INSERT},ar.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},ar.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},ar.prototype.interfaces_=function(){return[E]},ar.prototype.getClass=function(){return ar},ur.INSERT.get=function(){return 1},ur.DELETE.get=function(){return 2},Object.defineProperties(ar,ur);var lr=function(){};lr.prototype.interfaces_=function(){return[]},lr.prototype.getClass=function(){return lr};var cr=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};cr.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(cr.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},cr.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},cr.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},cr.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},cr.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next().getCoordinate();if(t.isIntersection(i))return!0}return!1},cr.prototype.hasProperIntersection=function(){return this._hasProper},cr.prototype.hasIntersection=function(){return this._hasIntersection},cr.prototype.isDone=function(){return this._isDone},cr.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},cr.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},cr.prototype.addIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},cr.prototype.interfaces_=function(){return[]},cr.prototype.getClass=function(){return cr},cr.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var pr=function(t){function e(){t.call(this),this.events=new Nt,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$e.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof cr&&T(arguments[0],xt)&&T(arguments[1],xt)){var i=arguments[0],r=arguments[1],o=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(o)}else if(\"boolean\"==typeof arguments[2]&&T(arguments[0],xt)&&arguments[1]instanceof cr){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var o=new sr(n,r),s=new ar(e,n.getMinX(r),o);this.events.add(s),this.events.add(new ar(n.getMaxX(r),s))}},e.prototype.processOverlaps=function(t,e,n,i){for(var r=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(r.computeIntersections(a,i),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var o=r.next();this.addEdge(o,i)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(lr),hr=function(){this._min=v.POSITIVE_INFINITY,this._max=v.NEGATIVE_INFINITY},fr={NodeComparator:{configurable:!0}};hr.prototype.getMin=function(){return this._min},hr.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},hr.prototype.getMax=function(){return this._max},hr.prototype.toString=function(){return Z.toLineString(new C(this._min,0),new C(this._max,0))},hr.prototype.interfaces_=function(){return[]},hr.prototype.getClass=function(){return hr},fr.NodeComparator.get=function(){return gr},Object.defineProperties(hr,fr);var gr=function(){};gr.prototype.compare=function(t,e){var n=t,i=e,r=(n._min+n._max)/2,o=(i._min+i._max)/2;return r<o?-1:r>o?1:0},gr.prototype.interfaces_=function(){return[N]},gr.prototype.getClass=function(){return gr};var dr=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],i=arguments[2];this._min=e,this._max=n,this._item=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),yr=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),_r=function(){this._leaves=new Nt,this._root=null,this._level=0};_r.prototype.buildTree=function(){$e.sort(this._leaves,new hr.NodeComparator);for(var t=this._leaves,e=null,n=new Nt;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_r.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error(\"Index cannot be added to once it has been queried\");this._leaves.add(new dr(t,e,n))},_r.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_r.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_r.prototype.printNode=function(t){Y.out.println(Z.toLineString(new C(t._min,this._level),new C(t._max,this._level)))},_r.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_r.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{var r=new yr(t.get(n),t.get(n+1));e.add(r)}}},_r.prototype.interfaces_=function(){return[]},_r.prototype.getClass=function(){return _r};var mr=function(){this._items=new Nt};mr.prototype.visitItem=function(t){this._items.add(t)},mr.prototype.getItems=function(){return this._items},mr.prototype.interfaces_=function(){return[Ke]},mr.prototype.getClass=function(){return mr};var vr=function(){this._index=null;var t=arguments[0];if(!T(t,Zt))throw new m(\"Argument must be Polygonal\");this._index=new xr(t)},Ir={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vr.prototype.locate=function(t){var e=new st(t),n=new Er(e);return this._index.query(t.y,t.y,n),e.getLocation()},vr.prototype.interfaces_=function(){return[Vn]},vr.prototype.getClass=function(){return vr},Ir.SegmentVisitor.get=function(){return Er},Ir.IntervalIndexedGeometry.get=function(){return xr},Object.defineProperties(vr,Ir);var Er=function(){this._counter=null;var t=arguments[0];this._counter=t};Er.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Er.prototype.interfaces_=function(){return[Ke]},Er.prototype.getClass=function(){return Er};var xr=function(){this._index=new _r;var t=arguments[0];this.init(t)};xr.prototype.init=function(t){for(var e=Ci.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},xr.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new dn(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n)}},xr.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mr;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._index.query(i,r,o)}},xr.prototype.interfaces_=function(){return[]},xr.prototype.getClass=function(){return xr};var Nr=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new he,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Si,2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=i,null!==n&&this.add(n)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=r,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var i=this._nodes.addNode(n).getLabel(),r=1;w.NONE;i.getLocation(t,Se.ON)===w.BOUNDARY&&r++;var o=e.determineBoundary(this._boundaryNodeRule,r);i.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new cr(n,!0,!1);o.setIsDoneIfProperInt(r);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof ee||this._parentGeom instanceof $t||this._parentGeom instanceof ne,u=i||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var i=new cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Qt){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,w.INTERIOR)}else if(arguments[0]instanceof C){var e=arguments[0];this.insertPoint(this._argIndex,e,w.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),w.EXTERIOR,w.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,w.INTERIOR,w.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],w.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],w.BOUNDARY)},e.prototype.addLineString=function(t){var e=Lt.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ni(e,new Pe(this._argIndex,w.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),et.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===w.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var i=Lt.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;var r=e,o=n;at.isCCW(i)&&(r=n,o=e);var s=new ni(i,new Pe(this._argIndex,w.BOUNDARY,r,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,i[0],w.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var i=this._nodes.addNode(e),r=i.getLabel();null===r?i._label=new Pe(t,n):r.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new pr},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var o=r.next();this.addSelfIntersectionNode(t,o.coord,i)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof ne&&(this._useBoundaryDeterminationRule=!1),e instanceof $t)this.addPolygon(e);else if(e instanceof Kt)this.addLineString(e);else if(e instanceof Qt)this.addPoint(e);else if(e instanceof te)this.addCollection(e);else if(e instanceof Xt)this.addCollection(e);else if(e instanceof ne)this.addCollection(e);else{if(!(e instanceof zt))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return T(this._parentGeom,Zt)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vr(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?w.BOUNDARY:w.INTERIOR},e}(Ye),Cr=function(){if(this._li=new rt,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Nr(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,e,i),this._arg[1]=new Nr(1,n,i)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];r.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(r.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,r,s),this._arg[1]=new Nr(1,o,s)}};Cr.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Cr.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Cr.prototype.interfaces_=function(){return[]},Cr.prototype.getClass=function(){return Cr};var Sr=function(){};Sr.prototype.interfaces_=function(){return[]},Sr.prototype.getClass=function(){return Sr},Sr.map=function(){if(arguments[0]instanceof ct&&T(arguments[1],Sr.MapOp)){for(var t=arguments[0],e=arguments[1],n=new Nt,i=0;i<t.getNumGeometries();i++){var r=e.map(t.getGeometryN(i));null!==r&&n.add(r)}return t.getFactory().buildGeometry(n)}if(T(arguments[0],It)&&T(arguments[1],Sr.MapOp)){for(var o=arguments[0],s=arguments[1],a=new Nt,u=o.iterator();u.hasNext();){var l=u.next(),c=s.map(l);null!==c&&a.add(c)}return a}},Sr.MapOp=function(){};var Lr=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Si,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Hn,this._resultPolyList=new Nt,this._resultLineList=new Nt,this._resultPointList=new Nt,this._graph=new Ye(new kn),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip();var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,i,r){var o=new Nt;return o.addAll(t),o.addAll(n),o.addAll(i),o.isEmpty()?e.createEmptyResult(r,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(this._ptLocator.locate(t,i)!==w.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new Nt,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new Nt;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Yi.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new ke(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var i=new ji(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);var r=new Hi(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea()&&!i.isInteriorAreaEdge()&&e.isResultOfOp(r.getLocation(0,Se.RIGHT),r.getLocation(1,Se.RIGHT),t)&&i.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;r<2;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(et.isTrue(!i.isNull(r,Se.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,Se.LEFT,i.getLocation(r,Se.LEFT)),et.isTrue(!i.isNull(r,Se.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,Se.RIGHT,i.getLocation(r,Se.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Cr);Lr.overlayOp=function(t,e,n){return new Lr(t,e).getResultGeometry(n)},Lr.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Lr.createEmptyResult(Lr.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return ki.map(t,{interfaces_:function(){return[Sr.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.INTERSECTION)},Lr.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.SYMDIFFERENCE)},Lr.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),o=-1;switch(t){case Lr.INTERSECTION:o=Math.min(i,r);break;case Lr.UNION:o=Math.max(i,r);break;case Lr.DIFFERENCE:o=i;break;case Lr.SYMDIFFERENCE:o=Math.max(i,r)}return o},Lr.createEmptyResult=function(t,e,n,i){var r=null;switch(Lr.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},Lr.difference=function(t,e){return t.isEmpty()?Lr.createEmptyResult(Lr.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.DIFFERENCE))},Lr.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Lr.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];switch(r===w.BOUNDARY&&(r=w.INTERIOR),o===w.BOUNDARY&&(o=w.INTERIOR),s){case Lr.INTERSECTION:return r===w.INTERIOR&&o===w.INTERIOR;case Lr.UNION:return r===w.INTERIOR||o===w.INTERIOR;case Lr.DIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR;case Lr.SYMDIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR||r!==w.INTERIOR&&o===w.INTERIOR}return!1}},Lr.INTERSECTION=1,Lr.UNION=2,Lr.DIFFERENCE=3,Lr.SYMDIFFERENCE=4;var br=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Si,this._seg=new dn;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};br.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),i=0;i<n.size()-1;i++){n.getCoordinate(i,this._seg.p0),n.getCoordinate(i+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},br.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?w.BOUNDARY:this._ptLocator.locate(t,this._g)},br.prototype.extractLinework=function(t){var e=new wr;t.apply(e);var n=e.getLinework(),i=_e.toLineStringArray(n);return t.getFactory().createMultiLineString(i)},br.prototype.interfaces_=function(){return[]},br.prototype.getClass=function(){return br};var wr=function(){this._linework=null,this._linework=new Nt};wr.prototype.getLinework=function(){return this._linework},wr.prototype.filter=function(t){if(t instanceof $t){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},wr.prototype.interfaces_=function(){return[Vt]},wr.prototype.getClass=function(){return wr};var Or=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Or.prototype.extractPoints=function(t,e,n){for(var i=t.getCoordinates(),r=0;r<i.length-1;r++)this.computeOffsetPoints(i[r],i[r+1],e,n)},Or.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Or.prototype.getPoints=function(t){for(var e=new Nt,n=Ci.getLines(this._g).iterator();n.hasNext();){var i=n.next();this.extractPoints(i,t,e)}return e},Or.prototype.computeOffsetPoints=function(t,e,n,i){var r=e.x-t.x,o=e.y-t.y,s=Math.sqrt(r*r+o*o),a=n*r/s,u=n*o/s,l=(e.x+t.x)/2,c=(e.y+t.y)/2;if(this._doLeft){var p=new C(l-u,c+a);i.add(p)}if(this._doRight){var h=new C(l+u,c-a);i.add(h)}},Or.prototype.interfaces_=function(){return[]},Or.prototype.getClass=function(){return Or};var Tr=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new Nt;var e=arguments[0],n=arguments[1],i=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,i],this._locFinder=[new br(this._geom[0],this._boundaryDistanceTolerance),new br(this._geom[1],this._boundaryDistanceTolerance),new br(this._geom[2],this._boundaryDistanceTolerance)]},Rr={TOLERANCE:{configurable:!0}};Tr.prototype.reportResult=function(t,e,n){Y.out.println(\"Overlay result invalid - A:\"+w.toLocationSymbol(e[0])+\" B:\"+w.toLocationSymbol(e[1])+\" expected:\"+(n?\"i\":\"e\")+\" actual:\"+w.toLocationSymbol(e[2]))},Tr.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Tr.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._location[0]=this._locFinder[0].getLocation(r),this._location[1]=this._locFinder[1].getLocation(r),this._location[2]=this._locFinder[2].getLocation(r),!!Tr.hasLocation(this._location,w.BOUNDARY)||this.isValidResult(i,this._location)}},Tr.prototype.addTestPts=function(t){var e=new Or(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Tr.prototype.isValidResult=function(t,e){var n=Lr.isResultOfOp(e[0],e[1],t),i=!(n^e[2]===w.INTERIOR);return i||this.reportResult(t,e,n),i},Tr.prototype.getInvalidLocation=function(){return this._invalidLocation},Tr.prototype.interfaces_=function(){return[]},Tr.prototype.getClass=function(){return Tr},Tr.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Tr.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Ji.computeSizeBasedSnapTolerance(t),Ji.computeSizeBasedSnapTolerance(e))},Tr.isValid=function(t,e,n,i){return new Tr(t,e,i).isValid(n)},Rr.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Tr,Rr);var Pr=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Pr.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this._skipEmpty&&i.isEmpty()||e.add(i)}},Pr.prototype.combine=function(){for(var t=new Nt,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Pr.prototype.interfaces_=function(){return[]},Pr.prototype.getClass=function(){return Pr},Pr.combine=function(){if(1===arguments.length){var t=arguments[0];return new Pr(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Pr(Pr.createList(e,n)).combine()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];return new Pr(Pr.createList(i,r,o)).combine()}},Pr.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Pr.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Nt;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=new Nt;return s.add(i),s.add(r),s.add(o),s}};var Dr=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Nt)},Mr={STRTREE_NODE_CAPACITY:{configurable:!0}};Dr.prototype.reduceToGeometries=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next(),r=null;T(i,xt)?r=this.unionTree(i):i instanceof ct&&(r=i),e.add(r)}return e},Dr.prototype.extractByEnvelope=function(t,e,n){for(var i=new Nt,r=0;r<e.getNumGeometries();r++){var o=e.getGeometryN(r);o.getEnvelopeInternal().intersects(t)?i.add(o):n.add(o)}return this._geomFactory.buildGeometry(i)},Dr.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){return Pr.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var r=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,r)},Dr.prototype.union=function(){if(null===this._inputPolys)throw new Error(\"union() method cannot be called twice\");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new sn(Dr.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var i=t.itemsTree();return this.unionTree(i)},Dr.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(i-n<=1){var r=Dr.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n==2)return this.unionSafe(Dr.getGeometry(e,n),Dr.getGeometry(e,n+1));var o=Math.trunc((i+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,i);return this.unionSafe(s,a)}},Dr.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},Dr.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Dr.prototype.unionActual=function(t,e){return Dr.restrictToPolygons(t.union(e))},Dr.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Dr.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var i=new Nt,r=this.extractByEnvelope(n,t,i),o=this.extractByEnvelope(n,e,i),s=this.unionActual(r,o);i.add(s);return Pr.combine(i)},Dr.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Dr.prototype.interfaces_=function(){return[]},Dr.prototype.getClass=function(){return Dr},Dr.restrictToPolygons=function(t){if(T(t,Zt))return t;var e=Ni.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_e.toPolygonArray(e))},Dr.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Dr.union=function(t){return new Dr(t).union()},Mr.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Dr,Mr);var Ar=function(){};Ar.prototype.interfaces_=function(){return[]},Ar.prototype.getClass=function(){return Ar},Ar.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.UNION)},t.GeoJSONReader=Ne,t.GeoJSONWriter=Ce,t.OverlayOp=Lr,t.UnionOp=Ar,t.BufferOp=di,Object.defineProperty(t,\"__esModule\",{value:!0})});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/turf-jsts/jsts.min.js\n// module id = 5812\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/union/node_modules/@turf/helpers/index.js\n// module id = 5813\n// module chunks = 7","import { coordEach } from '@turf/meta';\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nexport default bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/buffer/node_modules/@turf/bbox/main.es.js\n// module id = 5814\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/buffer/node_modules/@turf/helpers/main.es.js\n// module id = 5815\n// module chunks = 7","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/area.js\n// module id = 5816\n// module chunks = 7","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/circle.js\n// module id = 5817\n// module chunks = 7","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/compose.js\n// module id = 5818\n// module chunks = 7","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/buffer.js\n// module id = 5819\n// module chunks = 7","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/polygon.js\n// module id = 5820\n// module chunks = 7","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/pointEqual.js\n// module id = 5821\n// module chunks = 7","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/bisect.js\n// module id = 5822\n// module chunks = 7","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/bisector.js\n// module id = 5823\n// module chunks = 7","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/pairs.js\n// module id = 5824\n// module chunks = 7","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/deviation.js\n// module id = 5825\n// module chunks = 7","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/variance.js\n// module id = 5826\n// module chunks = 7","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/extent.js\n// module id = 5827\n// module chunks = 7","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/array.js\n// module id = 5828\n// module chunks = 7","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/range.js\n// module id = 5829\n// module chunks = 7","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/ticks.js\n// module id = 5830\n// module chunks = 7","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/threshold/sturges.js\n// module id = 5831\n// module chunks = 7","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/min.js\n// module id = 5832\n// module chunks = 7","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/transpose.js\n// module id = 5833\n// module chunks = 7","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/polygonContains.js\n// module id = 5834\n// module chunks = 7","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/distance.js\n// module id = 5835\n// module chunks = 7","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/length.js\n// module id = 5836\n// module chunks = 7","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/bounds.js\n// module id = 5837\n// module chunks = 7","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/albers.js\n// module id = 5838\n// module chunks = 7","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/index.js\n// module id = 5839\n// module chunks = 7","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/equirectangular.js\n// module id = 5840\n// module chunks = 7","import bbox from '@turf/bbox';\r\nimport bboxPolygon from '@turf/bbox-polygon';\r\nimport combineFeatures from './combineFeatures';\r\nimport createFeatureCollectionFromFeature from './createFeatureCollectionFromFeature';\r\n\r\n/**\r\n * uses bbox function from Turf to create a new geojson that is a bounding box around all the input layers\r\n */\r\n\r\nconst bboxFunction = (geojsonList) => {\r\n\r\n    if(geojsonList.length < 1) {\r\n        return {newJson: 'select a layer'};\r\n    }\r\n\r\n    let combinedgeojsons = combineFeatures(geojsonList);\r\n    let bbox_res = bbox(combinedgeojsons);\r\n    let bboxPolygon_res = bboxPolygon(bbox_res);\r\n    // returns a feature... we want all jsons as feature collections\r\n    let bboxFeatureCollection = createFeatureCollectionFromFeature([bboxPolygon_res])\r\n\r\n  return {bbox: bbox_res, newJson: bboxFeatureCollection };\r\n\r\n}\r\n  export default bboxFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/bboxFunction.js","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/Cell.js\n// module id = 5842\n// module chunks = 7","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/Circle.js\n// module id = 5843\n// module chunks = 7","import pointInPolygon from '@turf/boolean-point-in-polygon';\nimport { featureCollection } from '@turf/helpers';\nimport { featureEach, geomEach } from '@turf/meta';\n\n/**\n * Finds {@link Points} that fall within {@link (Multi)Polygon(s)}.\n *\n * @name pointsWithinPolygon\n * @param {Feauture|FeatureCollection<Point>} points Points as input search\n * @param {FeatureCollection|Geoemtry|Feature<Polygon|MultiPolygon>} polygons Points must be within these (Multi)Polygon(s)\n * @returns {FeatureCollection<Point>} points that land within at least one polygon\n * @example\n * var points = turf.points([\n *     [-46.6318, -23.5523],\n *     [-46.6246, -23.5325],\n *     [-46.6062, -23.5513],\n *     [-46.663, -23.554],\n *     [-46.643, -23.557]\n * ]);\n *\n * var searchWithin = turf.polygon([[\n *     [-46.653,-23.543],\n *     [-46.634,-23.5346],\n *     [-46.613,-23.543],\n *     [-46.614,-23.559],\n *     [-46.631,-23.567],\n *     [-46.653,-23.560],\n *     [-46.653,-23.543]\n * ]]);\n *\n * var ptsWithin = turf.pointsWithinPolygon(points, searchWithin);\n *\n * //addToMap\n * var addToMap = [points, searchWithin, ptsWithin]\n * turf.featureEach(ptsWithin, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction pointsWithinPolygon(points, polygons) {\n    var results = [];\n    geomEach(polygons, function (polygon) {\n        featureEach(points, function (point) {\n            if (pointInPolygon(point, polygon)) results.push(point);\n        });\n    });\n    return featureCollection(results);\n}\n\nexport default pointsWithinPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/points-within-polygon/main.es.js\n// module id = 5844\n// module chunks = 7","import rbush from './rbush';\nimport {featureEach, coordEach} from '@turf/meta';\n\n/**\n * GeoJSON implementation of [RBush](https://github.com/mourner/rbush#rbush) spatial index.\n *\n * @name rbush\n * @param {number} [maxEntries=9] defines the maximum number of entries in a tree node. 9 (used by default) is a\n * reasonable choice for most applications. Higher value means faster insertion and slower search, and vice versa.\n * @returns {RBush} GeoJSON RBush\n * @example\n * import geojsonRbush from 'geojson-rbush';\n * var tree = geojsonRbush();\n */\nfunction geojsonRbush(maxEntries) {\n    var tree = rbush(maxEntries);\n    /**\n     * [insert](https://github.com/mourner/rbush#data-format)\n     *\n     * @param {Feature<any>} feature insert single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.insert(polygon)\n     */\n    tree.insert = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        } else {\n            feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n        }\n        return rbush.prototype.insert.call(this, feature);\n    };\n\n    /**\n     * [load](https://github.com/mourner/rbush#bulk-inserting-data)\n     *\n     * @param {BBox[]|FeatureCollection<any>} features load entire GeoJSON FeatureCollection\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygons = {\n     *   \"type\": \"FeatureCollection\",\n     *   \"features\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *       }\n     *     },\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"properties\": {},\n     *       \"geometry\": {\n     *         \"type\": \"Polygon\",\n     *         \"coordinates\": [[[-93, 32], [-83, 32], [-83, 39], [-93, 39], [-93, 32]]]\n     *       }\n     *     }\n     *   ]\n     * }\n     * tree.load(polygons)\n     */\n    tree.load = function (features) {\n        var load = [];\n        // Load an Array of BBox\n        if (Array.isArray(features)) {\n            features.forEach(function (bbox) {\n                var feature = bboxPolygon(bbox);\n                feature.bbox = bbox;\n                load.push(feature);\n            });\n        } else {\n            // Load FeatureCollection\n            featureEach(features, function (feature) {\n                feature.bbox = feature.bbox ? feature.bbox : turfBBox(feature);\n                load.push(feature);\n            });\n        }\n        return rbush.prototype.load.call(this, load);\n    };\n\n    /**\n     * [remove](https://github.com/mourner/rbush#removing-data)\n     *\n     * @param {BBox|Feature<any>} feature remove single GeoJSON Feature\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.remove(polygon)\n     */\n    tree.remove = function (feature) {\n        if (Array.isArray(feature)) {\n            var bbox = feature;\n            feature = bboxPolygon(bbox);\n            feature.bbox = bbox;\n        }\n        return rbush.prototype.remove.call(this, feature);\n    };\n\n    /**\n     * [clear](https://github.com/mourner/rbush#removing-data)\n     *\n     * @returns {RBush} GeoJSON Rbush\n     * @example\n     * tree.clear()\n     */\n    tree.clear = function () {\n        return rbush.prototype.clear.call(this);\n    };\n\n    /**\n     * [search](https://github.com/mourner/rbush#search)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson search with GeoJSON\n     * @returns {FeatureCollection<any>} all features that intersects with the given GeoJSON.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.search(polygon)\n     */\n    tree.search = function (geojson) {\n        var features = rbush.prototype.search.call(this, this.toBBox(geojson));\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [collides](https://github.com/mourner/rbush#collisions)\n     *\n     * @param {BBox|FeatureCollection|Feature<any>} geojson collides with GeoJSON\n     * @returns {boolean} true if there are any items intersecting the given GeoJSON, otherwise false.\n     * @example\n     * var polygon = {\n     *   \"type\": \"Feature\",\n     *   \"properties\": {},\n     *   \"geometry\": {\n     *     \"type\": \"Polygon\",\n     *     \"coordinates\": [[[-78, 41], [-67, 41], [-67, 48], [-78, 48], [-78, 41]]]\n     *   }\n     * }\n     * tree.collides(polygon)\n     */\n    tree.collides = function (geojson) {\n        return rbush.prototype.collides.call(this, this.toBBox(geojson));\n    };\n\n    /**\n     * [all](https://github.com/mourner/rbush#search)\n     *\n     * @returns {FeatureCollection<any>} all the features in RBush\n     * @example\n     * tree.all()\n     * //=FeatureCollection\n     */\n    tree.all = function () {\n        var features = rbush.prototype.all.call(this);\n        return {\n            type: 'FeatureCollection',\n            features: features\n        };\n    };\n\n    /**\n     * [toJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @returns {any} export data as JSON object\n     * @example\n     * var exported = tree.toJSON()\n     * //=JSON object\n     */\n    tree.toJSON = function () {\n        return rbush.prototype.toJSON.call(this);\n    };\n\n    /**\n     * [fromJSON](https://github.com/mourner/rbush#export-and-import)\n     *\n     * @param {any} json import previously exported data\n     * @returns {RBush} GeoJSON RBush\n     * @example\n     * var exported = {\n     *   \"children\": [\n     *     {\n     *       \"type\": \"Feature\",\n     *       \"geometry\": {\n     *         \"type\": \"Point\",\n     *         \"coordinates\": [110, 50]\n     *       },\n     *       \"properties\": {},\n     *       \"bbox\": [110, 50, 110, 50]\n     *     }\n     *   ],\n     *   \"height\": 1,\n     *   \"leaf\": true,\n     *   \"minX\": 110,\n     *   \"minY\": 50,\n     *   \"maxX\": 110,\n     *   \"maxY\": 50\n     * }\n     * tree.fromJSON(exported)\n     */\n    tree.fromJSON = function (json) {\n        return rbush.prototype.fromJSON.call(this, json);\n    };\n\n    /**\n     * Converts GeoJSON to {minX, minY, maxX, maxY} schema\n     *\n     * @private\n     * @param {BBox|FeatureCollectio|Feature<any>} geojson feature(s) to retrieve BBox from\n     * @returns {Object} converted to {minX, minY, maxX, maxY}\n     */\n    tree.toBBox = function (geojson) {\n        var bbox;\n        if (geojson.bbox) bbox = geojson.bbox;\n        else if (Array.isArray(geojson) && geojson.length === 4) bbox = geojson;\n        else bbox = turfBBox(geojson);\n\n        return {\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        };\n    };\n    return tree;\n}\n\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @private\n * @name bboxPolygon\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox) {\n    var lowLeft = [bbox[0], bbox[1]];\n    var topLeft = [bbox[0], bbox[3]];\n    var topRight = [bbox[2], bbox[3]];\n    var lowRight = [bbox[2], bbox[1]];\n    var coordinates = [[lowLeft, lowRight, topRight, topLeft, lowLeft]];\n\n    return {\n        type: 'Feature',\n        bbox: bbox,\n        properties: {},\n        geometry: {\n            type: 'Polygon',\n            coordinates: coordinates\n        }\n    };\n}\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @private\n * @name bbox\n * @param {FeatureCollection|Feature<any>} geojson input features\n * @returns {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction turfBBox(geojson) {\n    var bbox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (bbox[0] > coord[0]) bbox[0] = coord[0];\n        if (bbox[1] > coord[1]) bbox[1] = coord[1];\n        if (bbox[2] < coord[0]) bbox[2] = coord[0];\n        if (bbox[3] < coord[1]) bbox[3] = coord[1];\n    });\n    return bbox;\n}\n\nexport default geojsonRbush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geojson-rbush/index.js\n// module id = 5845\n// module chunks = 7","import { getCoord } from '@turf/invariant';\nimport { degreesToRadians, isObject, radiansToLength } from '@turf/helpers';\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians((coordinates2[1] - coordinates1[1]));\n    var dLon = degreesToRadians((coordinates2[0] - coordinates1[0]));\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\nexport default distance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/distance/main.es.js\n// module id = 5846\n// module chunks = 7","import { featureCollection, lineString } from '@turf/helpers';\nimport { getCoords } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Creates a {@link FeatureCollection} of 2-vertex {@link LineString} segments from a {@link LineString|(Multi)LineString} or {@link Polygon|(Multi)Polygon}.\n *\n * @name lineSegment\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|MultiPolygon|Polygon>} geojson GeoJSON Polygon or LineString\n * @returns {FeatureCollection<LineString>} 2-vertex line segments\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n * var segments = turf.lineSegment(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, segments]\n */\nfunction lineSegment(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    var results = [];\n    flattenEach(geojson, function (feature) {\n        lineSegmentFeature(feature, results);\n    });\n    return featureCollection(results);\n}\n\n/**\n * Line Segment\n *\n * @private\n * @param {Feature<LineString|Polygon>} geojson Line or polygon feature\n * @param {Array} results push to results\n * @returns {void}\n */\nfunction lineSegmentFeature(geojson, results) {\n    var coords = [];\n    var geometry = geojson.geometry;\n    switch (geometry.type) {\n    case 'Polygon':\n        coords = getCoords(geometry);\n        break;\n    case 'LineString':\n        coords = [getCoords(geometry)];\n    }\n    coords.forEach(function (coord) {\n        var segments = createSegments(coord, geojson.properties);\n        segments.forEach(function (segment) {\n            segment.id = results.length;\n            results.push(segment);\n        });\n    });\n}\n\n/**\n * Create Segments from LineString coordinates\n *\n * @private\n * @param {LineString} coords LineString coordinates\n * @param {*} properties GeoJSON properties\n * @returns {Array<Feature<LineString>>} line segments\n */\nfunction createSegments(coords, properties) {\n    var segments = [];\n    coords.reduce(function (previousCoords, currentCoords) {\n        var segment = lineString([previousCoords, currentCoords], properties);\n        segment.bbox = bbox(previousCoords, currentCoords);\n        segments.push(segment);\n        return currentCoords;\n    });\n    return segments;\n}\n\n/**\n * Create BBox between two coordinates (faster than @turf/bbox)\n *\n * @private\n * @param {Array<number>} coords1 Point coordinate\n * @param {Array<number>} coords2 Point coordinate\n * @returns {BBox} [west, south, east, north]\n */\nfunction bbox(coords1, coords2) {\n    var x1 = coords1[0];\n    var y1 = coords1[1];\n    var x2 = coords2[0];\n    var y2 = coords2[1];\n    var west = (x1 < x2) ? x1 : x2;\n    var south = (y1 < y2) ? y1 : y2;\n    var east = (x1 > x2) ? x1 : x2;\n    var north = (y1 > y2) ? y1 : y2;\n    return [west, south, east, north];\n}\n\nexport default lineSegment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-segment/main.es.js\n// module id = 5847\n// module chunks = 7","import rbush from 'geojson-rbush';\nimport lineSegment from '@turf/line-segment';\nimport { getCoords } from '@turf/invariant';\nimport { featureEach } from '@turf/meta';\nimport { feature, featureCollection, point } from '@turf/helpers';\n\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line1 any LineString or Polygon\n * @param {Geometry|FeatureCollection|Feature<LineString|MultiLineString|Polygon|MultiPolygon>} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === 'LineString') line1 = feature(line1);\n    if (line2.type === 'LineString') line2 = feature(line2);\n    if (line1.type === 'Feature' &&\n        line2.type === 'Feature' &&\n        line1.geometry.type === 'LineString' &&\n        line2.geometry.type === 'LineString' &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) results.push(intersect);\n        return featureCollection(results);\n    }\n\n    // Handles complex GeoJSON Geometries\n    var tree = rbush();\n    tree.load(lineSegment(line2));\n    featureEach(lineSegment(line1), function (segment) {\n        featureEach(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = getCoords(intersect).join(',');\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return featureCollection(results);\n}\n\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = getCoords(line1);\n    var coords2 = getCoords(line2);\n    if (coords1.length !== 2) {\n        throw new Error('<intersects> line1 must only contain 2 coordinates');\n    }\n    if (coords2.length !== 2) {\n        throw new Error('<intersects> line2 must only contain 2 coordinates');\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n    var numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\n    var numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\n\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + (uA * (x2 - x1));\n        var y = y1 + (uA * (y2 - y1));\n        return point([x, y]);\n    }\n    return null;\n}\n\nexport default lineIntersect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-intersect/main.es.js\n// module id = 5848\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/polygon-to-line/node_modules/@turf/helpers/index.js\n// module id = 5849\n// module chunks = 7","const findLayerById = (layerId, layers) => {\r\n        return layers.find( l => l.id === layerId );\r\n    };\r\n  \r\n  export default findLayerById\r\n  \r\n  \n\n\n// WEBPACK FOOTER //\n// ./src/utils/findLayerById.js","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Dialog,\r\n    Typography,\r\n    DialogContent,\r\n    DialogTitle,\r\n    } from '@material-ui/core';\r\nimport SubmitOrCancelAction from '../DialogActions/SubmitOrCancelAction';\r\nimport OkAction from '../DialogActions/OkAction'\r\nimport intersectFunction from '../../utils/geoprocessing/intersectFunction';\r\nimport differenceFunction from '../../utils/geoprocessing/differenceFunction';\r\nimport unionFunction from '../../utils/geoprocessing/unionFunction';\r\nimport bufferFunction from '../../utils/geoprocessing/bufferFunction';\r\nimport bboxFunction from '../../utils/geoprocessing/bboxFunction';\r\nimport voronoiFunction from '../../utils/geoprocessing/voronoiFunction';\r\nimport clipFunction from '../../utils/geoprocessing/clipFunction';\r\nimport Loadable from 'react-loadable'\r\nimport LoadingCircular from '../../utils/Loading/LoadingCirular';\r\nimport MultiLayerSelect from '../MultiLayerSelect';\r\nimport LayerNameTextField from '../LayerNameTextField';\r\nimport { withSnackbar } from 'notistack';\r\nimport roundToNdecimals from '../../utils/roundToNdecimals';\r\nimport DialogFeedback from '../DialogContent/DialogFeedback';\r\nimport BboxTextField from '../BboxTextField';\r\nimport findLayerById from '../../utils/findLayerById';\r\nimport LayersSelect from '../LayersSelect';\r\n\r\n/**\r\n * Contains content of All geoprocessing.\r\n */\r\n\r\n\r\nconst BufferContent = Loadable({\r\n  loader: () => import('../DialogContent/BufferContent'),\r\n  delay: 300, // 0.3 seconds\r\n  loading: LoadingCircular,\r\n});\r\n\r\nconst LayerLayerGeoprocessingContent = Loadable({\r\n  loader: () => import('../DialogContent/LayerLayerGeoprocessingContent'),\r\n  delay: 300, // 0.3 seconds\r\n  loading: LoadingCircular,\r\n});\r\n\r\nconst styles = theme => ({\r\n    dialogPaper: {\r\n        minHeight: '50vh',\r\n        //overflowY: \"visible\",\r\n        maxHeight: '100vh'\r\n      },\r\n      spaced: {\r\n        marginBottom: 50,\r\n      },\r\n      spacedALittle: {\r\n        marginTop: theme.spacing.unit *3\r\n      },\r\n      container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width:'100%'\r\n      },\r\n  });\r\n\r\n  class GeoProcessingDialog extends Component {\r\n    state = {\r\n        processingFunction: null,\r\n        layerIds: [], //Ids of the selectedLayers\r\n        outputName:'',\r\n        errorMessage:'',\r\n        distance: '',\r\n        bbox: ['','','',''],\r\n        clipLayer: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {type} = this.props;\r\n        this.setProcessingFunction(type);\r\n        this.setState({outputName: type,});\r\n    }\r\n\r\n    setLayerIds = (layerIds) => {\r\n      this.setState({layerIds: layerIds})\r\n    }\r\n\r\n    setSingleLayerId = (layerId) => {\r\n      let {layerIds} = this.state;\r\n      layerIds[0] = layerId;\r\n      this.setState({layerIds: layerIds})\r\n    }\r\n\r\n    setProcessingFunction = (type) => {\r\n        let func = null;\r\n  \r\n        switch (type) {\r\n          case 'intersect':\r\n            func = intersectFunction;\r\n            break;\r\n          case 'union':\r\n            func = unionFunction;\r\n            break;\r\n          case 'difference':\r\n            func = differenceFunction;\r\n            break;\r\n          case 'buffer':\r\n            func = bufferFunction;\r\n            break;\r\n          case 'bbox':\r\n            func = bboxFunction;\r\n            break;\r\n          case 'voronoi':\r\n            func = voronoiFunction;\r\n            break;\r\n          case 'clip':\r\n            func = clipFunction;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({processingFunction: func});\r\n      }\r\n\r\n    calculate = () => {\r\n    const {closeDialog, type, layers, enqueueSnackbar} = this.props;\r\n    const {bbox, processingFunction, layerIds, outputName, distance, clipLayer} = this.state;\r\n    \r\n    let selectedLayersDataList = [];\r\n\r\n    for (var i in layerIds ) {\r\n      //let layer = layers.find( l => l.id === layerIds[i] );\r\n      let layer = findLayerById(layerIds[i], layers);\r\n      if( layer) {\r\n        let data = layer ? layer.data : null;\r\n        data.dispName = layer.displayName;\r\n        selectedLayersDataList.push( data );\r\n      }\r\n       \r\n    }\r\n\r\n      let newJson;\r\n      let feedbackText = '';\r\n\r\n      if (type === 'buffer') {       \r\n        newJson = processingFunction(selectedLayersDataList[0], distance);       \r\n      }\r\n      \r\n      else if (type === 'bbox') {\r\n       let res = processingFunction(selectedLayersDataList)\r\n        newJson = res.newJson;\r\n        if(res.bbox) {\r\n          feedbackText = 'bbox calculated. [minX, minY, maxX, maxY] = [ ' +  roundToNdecimals(res.bbox[0] ,4) + ', '  +  roundToNdecimals(res.bbox[1] ,4) + ', ' +  roundToNdecimals(res.bbox[2] ,4) + ', ' +  roundToNdecimals(res.bbox[3] ,4) + ' ]';\r\n        }\r\n      }\r\n      else if (type === 'voronoi') {\r\n        newJson = processingFunction(selectedLayersDataList, bbox);\r\n        newJson.opacity = 0.5;\r\n       }\r\n      else if (type === 'clip') {\r\n        let clipAreaLayer = layers.find( l => l.id === clipLayer);\r\n        let errorMessage = '';\r\n        \r\n        if(clipAreaLayer && selectedLayersDataList.length > 0) {\r\n         let clipArea = clipAreaLayer.data\r\n        \r\n        let newJsons = processingFunction(selectedLayersDataList, clipArea);\r\n        \r\n          if( newJson === 'Select layers to proceed') {\r\n            errorMessage = newJson;\r\n            this.setState({errorMessage: errorMessage});\r\n          } else {\r\n            newJsons.forEach(newJson => {\r\n              if (typeof newJson === 'string') {\r\n                enqueueSnackbar(newJson, {variant: 'error'});\r\n              }\r\n              else {\r\n                let newName = newJson ? 'clip_' + newJson.dispName : ';';  \r\n                this.submitNewLayer(newJson,'',newName, false);\r\n              }\r\n            });\r\n          }\r\n      } else if (!clipAreaLayer ) {\r\n        errorMessage = 'select clip layer'\r\n        this.setState({errorMessage: errorMessage});\r\n      } else if ( selectedLayersDataList.length === 0) {\r\n        errorMessage = 'Select layers to proceed';\r\n        this.setState({errorMessage: errorMessage});\r\n      }\r\n\r\n        if(errorMessage.length === 0 ) {\r\n          closeDialog();\r\n        }\r\n      }\r\n      \r\n      else if (type === 'intersect' || type === 'union'  || type === 'difference'){\r\n        newJson = processingFunction(selectedLayersDataList[0], selectedLayersDataList[1]);\r\n      }\r\n\r\n      if(newJson) {\r\n        this.submitNewLayer(newJson, feedbackText, outputName);\r\n      }       \r\n       \r\n    };\r\n\r\n    submitNewLayer = (newJson, feedbackText, outputName, closeAfter=true) => {\r\n      const {receiveNewJson, type, enqueueSnackbar, closeDialog} = this.props;\r\n      if(newJson.type === \"FeatureCollection\") {\r\n        receiveNewJson(newJson, outputName);\r\n        let succesMessage =  type + ' layer was successfully created';\r\n        feedbackText = feedbackText ? feedbackText : succesMessage;\r\n        try {\r\n          enqueueSnackbar(feedbackText, {variant: 'success'});\r\n        } catch (error) {\r\n          console.log('error supressed')\r\n        }\r\n        if (closeAfter) {\r\n          closeDialog();\r\n        }\r\n       } else {\r\n         this.setState({errorMessage: newJson});\r\n       }\r\n    }\r\n\r\n    setError = (message) => {\r\n      this.setState({errorMessage: message});\r\n    }\r\n\r\n    handleClose = () => {\r\n        const {closeDialog} = this.props;\r\n        closeDialog();\r\n    };\r\n\r\n    setName  = (name) => {\r\n      this.setState({outputName: name});\r\n    }\r\n\r\n    changeDistance = (value) => {\r\n      this.setState({distance: value});\r\n    }\r\n\r\n    setBbox = (bbox) => {\r\n      this.setState({bbox: bbox});\r\n    }\r\n\r\n    setClipLayer = (layerId) => {\r\n      this.setState({clipLayer: layerId});\r\n    }\r\n    \r\n\r\n    getContent = type => {\r\n      const {layers, classes} = this.props;\r\n      const {outputName, errorMessage, distance, layerIds, bbox} = this.state;\r\n      \r\n      if(type === 'intersect' || type === 'difference' || type === 'union'){\r\n\r\n        return (\r\n          <LayerLayerGeoprocessingContent\r\n              errorMessage={errorMessage}\r\n              layers={layers}\r\n              layerIds={layerIds}\r\n              setLayerIds={this.setLayerIds.bind(this)}\r\n              outputName={outputName}\r\n              setName={this.setName.bind(this)}\r\n              type={type}\r\n          /> );\r\n        };\r\n\r\n        if (type === 'buffer') {\r\n          return (\r\n            <BufferContent\r\n              errorMessage={errorMessage}\r\n              layers={layers}\r\n              changeLayer={this.setSingleLayerId.bind(this)}\r\n              distance={distance}\r\n              changeDistance={this.changeDistance.bind(this)}\r\n              outputName={outputName}\r\n              setName={this.setName.bind(this)}\r\n              layerId={layerIds[0]}\r\n            />\r\n             );\r\n        }\r\n\r\n        if (type === 'bbox') {\r\n          return (\r\n            <DialogContent classes={{root: classes.dialogPaper}} >\r\n                <MultiLayerSelect\r\n                layers={layers}\r\n                setLayerIds={this.setLayerIds.bind(this)}\r\n                />\r\n                <LayerNameTextField\r\n                  layerName={outputName}\r\n                  setName={this.setName.bind(this)}\r\n                  defaultName={outputName}\r\n                  layers={layers}\r\n                  layerIndex={-1}\r\n                  promt={'Output layer name'} />          \r\n            </DialogContent> );\r\n\r\n        }\r\n        if (type === 'voronoi') {\r\n          let layerOptions = layers.filter(layer => layer.type === \"Point\");\r\n          return (\r\n            <DialogContent classes={{root: classes.dialogPaper}} >\r\n            <DialogFeedback message={type + ' operation only accepts Point layers'}/>\r\n            {errorMessage.length > 0 ?\r\n                <DialogFeedback message={errorMessage} variant={'error'} />\r\n                : null\r\n              }   \r\n                <div className={classes.spacedALittle}></div>\r\n                <MultiLayerSelect\r\n                className={classes.spacedALittle}\r\n                layers={layerOptions}\r\n                setLayerIds={this.setLayerIds.bind(this)}\r\n                />\r\n                <div className={classes.spacedALittle}></div>\r\n                <BboxTextField\r\n                  optional={true}\r\n                  layers={layerOptions}\r\n                  setBbox={this.setBbox.bind(this)}\r\n                  bbox={bbox}\r\n                  layerIds={layerIds}\r\n                  setError={this.setError.bind(this)}/>\r\n                <LayerNameTextField\r\n                  layerName={outputName}\r\n                  setName={this.setName.bind(this)}\r\n                  defaultName={outputName}\r\n                  layers={layers}\r\n                  layerIndex={-1}\r\n                  promt={'Output layer name'} /> \r\n            </DialogContent> );\r\n        }\r\n        if (type === 'clip') {\r\n          let polygonLayers = layers.filter(layer => layer.type === \"Polygon\" || layer.type === \"MultiPolygon\"  );\r\n          let {clipLayer} = this.state;\r\n          return (\r\n            <DialogContent classes={{root: classes.dialogPaper}} >\r\n            {errorMessage.length > 0 ?\r\n                <DialogFeedback message={errorMessage} variant={'error'} />\r\n                : null\r\n              }   \r\n                <div className={classes.spacedALittle}></div>\r\n                <MultiLayerSelect\r\n                className={classes.spacedALittle}\r\n                layers={layers}\r\n                setLayerIds={this.setLayerIds.bind(this)}\r\n                promt={'Choose layers to clip'}\r\n                />\r\n               \r\n                <div className={classes.spacedALittle}></div>\r\n                <LayersSelect\r\n                className={classes.spaced}\r\n                layers={polygonLayers}\r\n                layerId={clipLayer}\r\n                changeLayer={this.setClipLayer.bind(this)}\r\n                promt = {'Choose clip layer (polygon)'} />\r\n                \r\n                <div className={classes.spacedALittle}></div>\r\n                <Typography>This operation will clip all selected layers to the area defined by the clip polygon.\r\n                  Output layer names will by 'clip_' + layer name </Typography>\r\n\r\n            </DialogContent> );\r\n        }\r\n\r\n\r\n        return (\r\n            <DialogContent>\r\n                <Typography>{type}</Typography>            \r\n            </DialogContent> );\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n\r\n      const {open, layers, type, classes} = this.props;\r\n     \r\n      let content = layers.length > 0 ?\r\n      this.getContent(type)\r\n      : \r\n      <DialogContent>\r\n        <Typography>Add some layers first</Typography>         \r\n      </DialogContent>\r\n\r\n        let actions = layers.length > 0 ?\r\n        <SubmitOrCancelAction submitText='Calculate' submit={this.calculate} cancel={this.handleClose}/>\r\n        : \r\n        <OkAction ok={this.handleClose}/>\r\n\r\n        let diaglogTitle = type.charAt(0).toUpperCase() + type.slice(1);\r\n  \r\n      return (\r\n        <Dialog\r\n        fullWidth={true}\r\n        open={open}\r\n        onClose={this.handleClose}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        classes={{ paper: classes.dialogPaper }}\r\n        \r\n      >\r\n          <DialogTitle id=\"scroll-dialog-title\">{diaglogTitle}</DialogTitle>\r\n            {content}\r\n            {actions}\r\n      </Dialog>\r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(withSnackbar(GeoProcessingDialog));\n\n\n// WEBPACK FOOTER //\n// ./src/components/Dialogs/GeoProcessingDialog.js","\"use strict\";\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\nvar invariant_1 = require(\"@turf/invariant\");\r\nvar martinez = __importStar(require(\"martinez-polygon-clipping\"));\r\n/**\r\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\r\n * finds their polygonal intersection. If they don't intersect, returns null.\r\n *\r\n * @name intersect\r\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\r\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\r\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\r\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *   [-122.801742, 45.48565],\r\n *   [-122.801742, 45.60491],\r\n *   [-122.584762, 45.60491],\r\n *   [-122.584762, 45.48565],\r\n *   [-122.801742, 45.48565]\r\n * ]]);\r\n *\r\n * var poly2 = turf.polygon([[\r\n *   [-122.520217, 45.535693],\r\n *   [-122.64038, 45.553967],\r\n *   [-122.720031, 45.526554],\r\n *   [-122.669906, 45.507309],\r\n *   [-122.723464, 45.446643],\r\n *   [-122.532577, 45.408574],\r\n *   [-122.487258, 45.477466],\r\n *   [-122.520217, 45.535693]\r\n * ]]);\r\n *\r\n * var intersection = turf.intersect(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, intersection];\r\n */\r\nfunction intersect(poly1, poly2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var geom1 = invariant_1.getGeom(poly1);\r\n    var geom2 = invariant_1.getGeom(poly2);\r\n    if (geom1.type === \"Polygon\" && geom2.type === \"Polygon\") {\r\n        var intersection = martinez.intersection(geom1.coordinates, geom2.coordinates);\r\n        if (intersection === null || intersection.length === 0) {\r\n            return null;\r\n        }\r\n        if (intersection.length === 1) {\r\n            var start = intersection[0][0][0];\r\n            var end = intersection[0][0][intersection[0][0].length - 1];\r\n            if (start[0] === end[0] && start[1] === end[1]) {\r\n                return helpers_1.polygon(intersection[0], options.properties);\r\n            }\r\n            return null;\r\n        }\r\n        return helpers_1.multiPolygon(intersection, options.properties);\r\n    }\r\n    else if (geom1.type === \"MultiPolygon\") {\r\n        var resultCoords = [];\r\n        // iterate through the polygon and run intersect with each part, adding to the resultCoords.\r\n        for (var _i = 0, _a = geom1.coordinates; _i < _a.length; _i++) {\r\n            var coords = _a[_i];\r\n            var subGeom = invariant_1.getGeom(helpers_1.polygon(coords));\r\n            var subIntersection = intersect(subGeom, geom2);\r\n            if (subIntersection) {\r\n                var subIntGeom = invariant_1.getGeom(subIntersection);\r\n                if (subIntGeom.type === \"Polygon\") {\r\n                    resultCoords.push(subIntGeom.coordinates);\r\n                }\r\n                else if (subIntGeom.type === \"MultiPolygon\") {\r\n                    resultCoords = resultCoords.concat(subIntGeom.coordinates);\r\n                }\r\n                else {\r\n                    throw new Error(\"intersection is invalid\");\r\n                }\r\n            }\r\n        }\r\n        // Make a polygon with the result\r\n        if (resultCoords.length === 0) {\r\n            return null;\r\n        }\r\n        if (resultCoords.length === 1) {\r\n            return helpers_1.polygon(resultCoords[0], options.properties);\r\n        }\r\n        else {\r\n            return helpers_1.multiPolygon(resultCoords, options.properties);\r\n        }\r\n    }\r\n    else if (geom2.type === \"MultiPolygon\") {\r\n        // geom1 is a polygon and geom2 a multiPolygon,\r\n        // put the multiPolygon first and fallback to the previous case.\r\n        return intersect(geom2, geom1);\r\n    }\r\n    else {\r\n        // handle invalid geometry types\r\n        throw new Error(\"poly1 and poly2 must be either polygons or multiPolygons\");\r\n    }\r\n}\r\nexports.default = intersect;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/intersect/index.js\n// module id = 5941\n// module chunks = 7","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/intersect/node_modules/@turf/invariant/index.js\n// module id = 5942\n// module chunks = 7","import  difference from '@turf/difference';\r\n\r\nconst differenceFunction = (geojson1, geojson2) => {\r\n  if( !(geojson1 && geojson2) ) {\r\n    return 'Two geometries are required'\r\n  } else if (geojson1.features[0].geometry.type !== 'Polygon' && geojson1.features[0].geometry.type !== 'MultiPolygon'  ) {\r\n    return 'The geometries must be of type Polygon or MultiPolygon.'\r\n  } else if (geojson1 === geojson2) {\r\n    return 'The geometries cannot be identical'\r\n  }\r\n\r\n  let newFeatures = []\r\n\r\n   geojson1.features.forEach((f1, i) => {\r\n    let f1_temp = JSON.parse(JSON.stringify(f1));\r\n     geojson2.features.forEach((f2) => {\r\n        f1_temp = difference(f1_temp, f2)\r\n     });\r\n      \r\n     newFeatures.push(f1_temp)\r\n    });\r\n\r\n    newFeatures.forEach( (f, i) => {\r\n      geojson1.features[i] = f;\r\n    });\r\n\r\n    //Remove all null or unidentified features\r\n    geojson1.features = geojson1.features.filter(f => f != null);\r\n\r\n    if (!geojson1.features[0]) {\r\n      return 'There is no geometry left after performing the difference operation. Try swapping the order'\r\n    }\r\n    return(geojson1);\r\n    \r\n  }\r\n\r\n  export default differenceFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/differenceFunction.js","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/difference/main.es.js\n// module id = 5944\n// module chunks = 7","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/difference/node_modules/@turf/area/main.es.js\n// module id = 5945\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/meta/node_modules/@turf/helpers/main.es.js\n// module id = 5946\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/difference/node_modules/@turf/helpers/main.es.js\n// module id = 5947\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/invariant/node_modules/@turf/helpers/main.es.js\n// module id = 5948\n// module chunks = 7","import  union from '@turf/union';\r\nimport performActionOnAllFeaturePairs from './performActionOnAllFeaturePairs';\r\nimport combineFeatures from './combineFeatures';\r\nimport getSimpleJsonType from '../getSimpleJsonType';\r\n\r\n/**\r\n * returns a union of two geojsons.\r\n */\r\nconst unionFunction = (geojson1, geojson2) => {\r\n\r\n  let type1 = getSimpleJsonType(geojson1);\r\n  let type2 = getSimpleJsonType(geojson2);\r\n\r\n\r\n  if( !(geojson1 && geojson2) ) {\r\n    return 'Two geometries are required'\r\n  } else if (type1 !== type2 ) {\r\n    return 'The geometries must be of the same type.'\r\n  } else if (geojson1 === geojson2) {\r\n    return 'The geometries cannot be identical'\r\n  }\r\n\r\n  let newGeojson;\r\n\r\n  if(type1 === 'Polygon') {\r\n    newGeojson = performActionOnAllFeaturePairs(geojson1, geojson2, union);\r\n  } else {\r\n    newGeojson =  combineFeatures([geojson1, geojson2])\r\n  }\r\n\r\n  //Remove null or undefined features:\r\n  newGeojson.features = newGeojson.features.filter(f => f != null);\r\n\r\n    return(newGeojson);\r\n  }\r\n\r\n  export default unionFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/unionFunction.js","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar martinez = require(\"martinez-polygon-clipping\");\r\nvar invariant_1 = require(\"@turf/invariant\");\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\r\nfunction union(polygon1, polygon2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var coords1 = invariant_1.getGeom(polygon1).coordinates;\r\n    var coords2 = invariant_1.getGeom(polygon2).coordinates;\r\n    var unioned = martinez.union(coords1, coords2);\r\n    if (unioned.length === 0)\r\n        return null;\r\n    if (unioned.length === 1)\r\n        return helpers_1.polygon(unioned[0], options.properties);\r\n    else\r\n        return helpers_1.multiPolygon(unioned, options.properties);\r\n}\r\nexports.default = union;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/union/index.js\n// module id = 5950\n// module chunks = 7","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/union/node_modules/@turf/invariant/index.js\n// module id = 5951\n// module chunks = 7","// Polygon and Multipolygon are both classified as Polygon\r\n// LineString and MultiLineString are both calssified as Linestring\r\nconst getSimpleJsonType = (json) => {\r\n    let type;\r\n    switch (json.features[0].geometry.type) {\r\n        case 'Polygon':\r\n        case 'MultiPolygon':\r\n            type='Polygon'\r\n          break;\r\n        case 'LineString':\r\n        case 'MultiLineString':\r\n            type='LineString'\r\n            break;\r\n        case 'Point':\r\n            type='Point'\r\n            break;\r\n        default:\r\n          break;\r\n      }\r\n      return type;\r\n    };\r\n\r\nexport default getSimpleJsonType\n\n\n// WEBPACK FOOTER //\n// ./src/utils/getSimpleJsonType.js","import  buffer from '@turf/buffer';\r\n\r\nconst bufferFunction = (geojson, distance) => {\r\n\r\n    if(!geojson) {\r\n        return 'select a layer'\r\n    } if(! distance) {\r\n        return 'choose a distance in meters'\r\n    }\r\n\r\n    let newGeojson = buffer(geojson, distance, {units: 'meters'});\r\n      //Remove null or undefined features:\r\n  newGeojson.features = newGeojson.features.filter(f => f != null);\r\n\r\n  if (!newGeojson.features[0]) {\r\n    return 'The geometry remaining'\r\n  }\r\n  return newGeojson;\r\n\r\n}\r\n  export default bufferFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/bufferFunction.js","import center from '@turf/center';\nimport turfBbox from '@turf/bbox';\nimport { BufferOp, GeoJSONReader, GeoJSONWriter } from 'turf-jsts';\nimport { toMercator, toWgs84 } from '@turf/projection';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { geoTransverseMercator } from 'd3-geo';\nimport { earthRadius, feature, featureCollection, lengthToRadians, radiansToLength } from '@turf/helpers';\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=64] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n    // Optional params\n    options = options || {};\n    var units = options.units;\n    var steps = options.steps || 64;\n\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be an number');\n\n    // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n    if (radius === undefined) throw new Error('radius is required');\n    if (steps <= 0) throw new Error('steps must be greater than 0');\n\n    // default params\n    steps = steps || 64;\n    units = units || 'kilometers';\n\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    case 'FeatureCollection':\n        featureEach(geojson, function (feature$$1) {\n            var multiBuffered = bufferFeature(feature$$1, radius, units, steps);\n            if (multiBuffered) {\n                featureEach(multiBuffered, function (buffered) {\n                    if (buffered) results.push(buffered);\n                });\n            }\n        });\n        return featureCollection(results);\n    }\n    return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=64] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n    var properties = geojson.properties || {};\n    var geometry = (geojson.type === 'Feature') ? geojson.geometry : geojson;\n\n    // Geometry Types faster than jsts\n    if (geometry.type === 'GeometryCollection') {\n        var results = [];\n        geomEach(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    }\n\n    // Project GeoJSON to Transverse Mercator projection (convert to Meters)\n    var projected;\n    var bbox = turfBbox(geojson);\n    var needsTransverseMercator = bbox[1] > 50 && bbox[3] > 50;\n\n    if (needsTransverseMercator) {\n        projected = {\n            type: geometry.type,\n            coordinates: projectCoords(geometry.coordinates, defineProjection(geometry))\n        };\n    } else {\n        projected = toMercator(geometry);\n    }\n\n    // JSTS buffer operation\n    var reader = new GeoJSONReader();\n    var geom = reader.read(projected);\n    var distance = radiansToLength(lengthToRadians(radius, units), 'meters');\n    var buffered = BufferOp.bufferOp(geom, distance);\n    var writer = new GeoJSONWriter();\n    buffered = writer.write(buffered);\n\n    // Detect if empty geometries\n    if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n    // Unproject coordinates (convert to Degrees)\n    var result;\n    if (needsTransverseMercator) {\n        result = {\n            type: buffered.type,\n            coordinates: unprojectCoords(buffered.coordinates, defineProjection(geometry))\n        };\n    } else {\n        result = toWgs84(buffered);\n    }\n\n    return (result.geometry) ? result : feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n    if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n    return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj(coords);\n    return coords.map(function (coord) {\n        return projectCoords(coord, proj);\n    });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj.invert(coords);\n    return coords.map(function (coord) {\n        return unprojectCoords(coord, proj);\n    });\n}\n\n/**\n * Define Transverse Mercator projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Transverse Mercator Projection\n */\nfunction defineProjection(geojson) {\n    var coords = center(geojson).geometry.coordinates.reverse();\n    var rotate = coords.map(function (coord) { return -coord; });\n    return geoTransverseMercator()\n        .center(coords)\n        .rotate(rotate)\n        .scale(earthRadius);\n}\n\nexport default buffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/buffer/main.es.js\n// module id = 5954\n// module chunks = 7","import bbox from '@turf/bbox';\nimport { isObject, point } from '@turf/helpers';\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.featureCollection([\n *   turf.point( [-97.522259, 35.4691]),\n *   turf.point( [-97.502754, 35.463455]),\n *   turf.point( [-97.508269, 35.463245])\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], properties);\n}\n\nexport default center;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/buffer/node_modules/@turf/center/main.es.js\n// module id = 5955\n// module chunks = 7","import { coordEach } from '@turf/meta';\nimport { isNumber, isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n\n/**\n * Converts a WGS84 GeoJSON object into Mercator (EPSG:900913) projection\n *\n * @name toMercator\n * @param {GeoJSON|Position} geojson WGS84 GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-71,41]);\n * var converted = turf.toMercator(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toMercator(geojson, options) {\n    return convert(geojson, 'mercator', options);\n}\n\n/**\n * Converts a Mercator (EPSG:900913) GeoJSON object into WGS84 projection\n *\n * @name toWgs84\n * @param {GeoJSON|Position} geojson Mercator GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-7903683.846322424, 5012341.663847514]);\n * var converted = turf.toWgs84(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toWgs84(geojson, options) {\n    return convert(geojson, 'wgs84', options);\n}\n\n\n/**\n * Converts a GeoJSON coordinates to the defined `projection`\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON Feature or Geometry\n * @param {string} projection defines the projection system to convert the coordinates to\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n */\nfunction convert(geojson, projection, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n\n    // Handle Position\n    if (Array.isArray(geojson) && isNumber(geojson[0])) geojson = (projection === 'mercator') ? convertToMercator(geojson) : convertToWgs84(geojson);\n\n    // Handle GeoJSON\n    else {\n        // Handle possible data mutation\n        if (mutate !== true) geojson = clone(geojson);\n\n        coordEach(geojson, function (coord) {\n            var newCoord = (projection === 'mercator') ? convertToMercator(coord) : convertToWgs84(coord);\n            coord[0] = newCoord[0];\n            coord[1] = newCoord[1];\n        });\n    }\n    return geojson;\n}\n\n/**\n * Convert lon/lat values to 900913 x/y.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} lonLat WGS84 point\n * @returns {Array<number>} Mercator [x, y] point\n */\nfunction convertToMercator(lonLat) {\n    var D2R = Math.PI / 180,\n        // 900913 properties\n        A = 6378137.0,\n        MAXEXTENT = 20037508.342789244;\n\n    // compensate longitudes passing the 180th meridian\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n    var adjusted = (Math.abs(lonLat[0]) <= 180) ? lonLat[0] : (lonLat[0] - (sign(lonLat[0]) * 360));\n    var xy = [\n        A * adjusted * D2R,\n        A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * lonLat[1] * D2R)))\n    ];\n\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n    return xy;\n}\n\n/**\n * Convert 900913 x/y values to lon/lat.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} xy Mercator [x, y] point\n * @returns {Array<number>} WGS84 [lon, lat] point\n */\nfunction convertToWgs84(xy) {\n    // 900913 properties.\n    var R2D = 180 / Math.PI;\n    var A = 6378137.0;\n\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n}\n\n/**\n * Returns the sign of the input, or zero\n *\n * @private\n * @param {number} x input\n * @returns {number} -1|0|1 output\n */\nfunction sign(x) {\n    return (x < 0) ? -1 : (x > 0) ? 1 : 0;\n}\n\nexport { toMercator, toWgs84 };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/projection/main.es.js\n// module id = 5956\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/projection/node_modules/@turf/helpers/main.es.js\n// module id = 5957\n// module chunks = 7","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nexport default clone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/clone/main.es.js\n// module id = 5958\n// module chunks = 7","export {default as geoArea} from \"./src/area\";\nexport {default as geoBounds} from \"./src/bounds\";\nexport {default as geoCentroid} from \"./src/centroid\";\nexport {default as geoCircle} from \"./src/circle\";\nexport {default as geoClipExtent} from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoContains} from \"./src/contains\";\nexport {default as geoDistance} from \"./src/distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./src/graticule\";\nexport {default as geoInterpolate} from \"./src/interpolate\";\nexport {default as geoLength} from \"./src/length\";\nexport {default as geoPath} from \"./src/path/index\";\nexport {default as geoAlbers} from \"./src/projection/albers\";\nexport {default as geoAlbersUsa} from \"./src/projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./src/projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./src/projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./src/projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./src/projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./src/projection/conicEquidistant\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./src/projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./src/projection/gnomonic\";\nexport {default as geoIdentity} from \"./src/projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./src/projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./src/projection/mercator\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./src/projection/naturalEarth1\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./src/projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./src/projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./src/projection/transverseMercator\";\nexport {default as geoRotation} from \"./src/rotation\";\nexport {default as geoStream} from \"./src/stream\";\nexport {default as geoTransform} from \"./src/transform\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/index.js\n// module id = 5959\n// module chunks = 7","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/bounds.js\n// module id = 5960\n// module chunks = 7","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/centroid.js\n// module id = 5961\n// module chunks = 7","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/constant.js\n// module id = 5962\n// module chunks = 7","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/line.js\n// module id = 5963\n// module chunks = 7","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/cross.js\n// module id = 5964\n// module chunks = 7","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/histogram.js\n// module id = 5966\n// module chunks = 7","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/constant.js\n// module id = 5967\n// module chunks = 7","export default function(x) {\n  return x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/identity.js\n// module id = 5968\n// module chunks = 7","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/threshold/freedmanDiaconis.js\n// module id = 5969\n// module chunks = 7","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/threshold/scott.js\n// module id = 5970\n// module chunks = 7","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/mean.js\n// module id = 5972\n// module chunks = 7","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/median.js\n// module id = 5973\n// module chunks = 7","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/merge.js\n// module id = 5974\n// module chunks = 7","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/scan.js\n// module id = 5976\n// module chunks = 7","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-array/src/zip.js\n// module id = 5979\n// module chunks = 7","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/contains.js\n// module id = 5980\n// module chunks = 7","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/graticule.js\n// module id = 5981\n// module chunks = 7","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/interpolate.js\n// module id = 5982\n// module chunks = 7","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/index.js\n// module id = 5983\n// module chunks = 7","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/area.js\n// module id = 5984\n// module chunks = 7","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/centroid.js\n// module id = 5985\n// module chunks = 7","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/context.js\n// module id = 5986\n// module chunks = 7","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/measure.js\n// module id = 5987\n// module chunks = 7","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/path/string.js\n// module id = 5988\n// module chunks = 7","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/antimeridian.js\n// module id = 5989\n// module chunks = 7","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/clip/circle.js\n// module id = 5990\n// module chunks = 7","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/resample.js\n// module id = 5991\n// module chunks = 7","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js\n// module id = 5992\n// module chunks = 7","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/albersUsa.js\n// module id = 5993\n// module chunks = 7","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js\n// module id = 5994\n// module chunks = 7","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js\n// module id = 5995\n// module chunks = 7","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/conicConformal.js\n// module id = 5996\n// module chunks = 7","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/conicEquidistant.js\n// module id = 5997\n// module chunks = 7","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/gnomonic.js\n// module id = 5998\n// module chunks = 7","import {clipExtent} from \"../clip/extent\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/identity.js\n// module id = 5999\n// module chunks = 7","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/naturalEarth1.js\n// module id = 6000\n// module chunks = 7","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/orthographic.js\n// module id = 6001\n// module chunks = 7","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/stereographic.js\n// module id = 6002\n// module chunks = 7","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-geo/src/projection/transverseMercator.js\n// module id = 6003\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return helpers_1.polygon([[\n            lowLeft,\n            lowRight,\n            topRight,\n            topLeft,\n            lowLeft,\n        ]], options.properties, { bbox: bbox, id: options.id });\n}\nexports.default = bboxPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bbox-polygon/index.js\n// module id = 6004\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bbox-polygon/node_modules/@turf/helpers/index.js\n// module id = 6005\n// module chunks = 7","import voronoi from '@turf/voronoi';\r\nimport combineFeatures from './combineFeatures';\r\n/**\r\n * Creates voronoi area for a list of points\r\n */\r\n\r\nconst voronoiFunction = (geojsonList, bbox) => {\r\n\r\n    let newJson;\r\n\r\n    if (geojsonList.length < 1) {\r\n        return 'select a layer';\r\n    } \r\n\r\n    let combinedgeojsons = combineFeatures(geojsonList);\r\n    \r\n    if (!bbox[0] || !bbox[1] || !bbox[2] || !bbox[3]) {\r\n        newJson = voronoi(combinedgeojsons);\r\n    } else {\r\n        newJson = voronoi(combinedgeojsons, {bbox: bbox});\r\n    }\r\n\r\n    //Remove null or undefined features:\r\n    newJson.features = newJson.features.filter(f => f != null);\r\n\r\n  return newJson;\r\n\r\n}\r\n  export default voronoiFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/voronoiFunction.js","import { featureCollection, isObject, polygon } from '@turf/helpers';\nimport { collectionOf } from '@turf/invariant';\nimport { voronoi } from 'd3-voronoi';\n\n/**\n * @private\n * @param {Array<Array<number>>} coords representing a polygon\n * @returns {Feature<Polygon>} polygon\n */\nfunction coordsToPolygon(coords) {\n    coords = coords.slice();\n    coords.push(coords[0]);\n    return polygon([coords]);\n}\n\n/**\n * Takes a FeatureCollection of points, and a bounding box, and returns a FeatureCollection\n * of Voronoi polygons.\n *\n * The Voronoi algorithim used comes from the d3-voronoi package.\n *\n * @name voronoi\n * @param {FeatureCollection<Point>} points to find the Voronoi polygons around.\n * @param {Object} [options={}] Optional parameters\n * @param {number[]} [options.bbox=[-180, -85, 180, -85]] clipping rectangle, in [minX, minY, maxX, MaxY] order.\n * @returns {FeatureCollection<Polygon>} a set of polygons, one per input point.\n * @example\n * var options = {\n *   bbox: [-70, 40, -60, 60]\n * };\n * var points = turf.randomPoint(100, options);\n * var voronoiPolygons = turf.voronoi(points, options);\n *\n * //addToMap\n * var addToMap = [voronoiPolygons, points];\n */\nfunction voronoi$1(points, options) {\n    // Optional params\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox || [-180, -85, 180, 85];\n\n    // Input Validation\n    if (!points) throw new Error('points is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox is invalid');\n    collectionOf(points, 'Point', 'points');\n\n    // Main\n    return featureCollection(\n        voronoi()\n            .x(function (feature) { return feature.geometry.coordinates[0]; })\n            .y(function (feature) { return feature.geometry.coordinates[1]; })\n            .extent([[bbox[0], bbox[1]], [bbox[2], bbox[3]]])\n            .polygons(points.features)\n            .map(coordsToPolygon)\n    );\n}\n\nexport default voronoi$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/voronoi/main.es.js\n// module id = 6007\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/voronoi/node_modules/@turf/helpers/main.es.js\n// module id = 6008\n// module chunks = 7","export {default as voronoi} from \"./src/voronoi\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/index.js\n// module id = 6009\n// module chunks = 7","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/voronoi.js\n// module id = 6010\n// module chunks = 7","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/constant.js\n// module id = 6011\n// module chunks = 7","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/point.js\n// module id = 6012\n// module chunks = 7","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-voronoi/src/Beach.js\n// module id = 6013\n// module chunks = 7","import getJsonType from '../getJsonType';\r\nimport intersect from './intersectFunction';\r\nimport isLineSegmentWithinPolygon from './isLineSegmentWithinPolygon';\r\nimport pointsWithinPolygon from '@turf/points-within-polygon';\r\nimport lineSplit from '@turf/line-split';\r\nimport polygonToLine from '@turf/polygon-to-line';\r\n\r\n/**\r\n * Clips all geometry to fit inside the clipArea.\r\n */\r\n\r\nconst clipFunction = (geojsonList, clipArea) => {\r\n    \r\n    if (geojsonList.length === 0 || !clipArea) {\r\n        return 'Select layers to proceed';\r\n    }\r\n\r\n    let newJsons = geojsonList.map(data => {\r\n        let type = getJsonType(data);\r\n        let newJson;\r\n        if (type === 'Polygon' || type === 'MultiPolygon') {\r\n            newJson = intersect(data, clipArea);         \r\n        }\r\n        if (type === 'Point') {\r\n            newJson = pointsWithinPolygon(data, clipArea);\r\n        }if (type === 'LineString' || type === 'MultiLineString' ){\r\n            newJson = {\r\n                \"type\": \"FeatureCollection\",\r\n                \"features\": []\r\n              }\r\n            data.features.forEach(line => {\r\n                clipArea.features.forEach(poly => {\r\n                    //Transform Polygon layer to lines.\r\n                    //Split the lines where they intersect the polygon border lines\r\n                    let splitLines = lineSplit(line, polygonToLine(poly));\r\n                    \r\n                    //If line does not intersect with polygon border, it is either\r\n                    //completely inside or completely outside\r\n                    if(splitLines.features.length === 0) {\r\n                        if(isLineSegmentWithinPolygon(line, clipArea)) {\r\n                            newJson.features.push(line);\r\n                        }\r\n                    }\r\n\r\n                    //For all lines that intersect the polygon area, keep the parts that are inside\r\n                    splitLines.features.forEach( lineSegment => {\r\n                        if(isLineSegmentWithinPolygon(lineSegment, clipArea)) {\r\n                            newJson.features.push(lineSegment);\r\n                        }\r\n                        \r\n                    });\r\n              });\r\n            });\r\n        }\r\n\r\n        //Remove null or undefined features:\r\n        newJson.features = newJson.features.filter(f => f != null);\r\n\r\n        if(newJson) {\r\n           if (newJson.type === \"FeatureCollection\") {\r\n               if(newJson.features.length === 0){\r\n                   return data.dispName + 'has no overlapping geometry'\r\n               }\r\n            newJson.dispName = data.dispName;\r\n            return newJson;     \r\n            }\r\n            if (typeof newJson === 'string'){\r\n                return data.dispName + ': ' + newJson; \r\n            }\r\n        }\r\n\r\n        return 'something went wrong during clip operations';\r\n        \r\n\r\n\r\n    });\r\n\r\n  return newJsons;\r\n\r\n}\r\nexport default clipFunction\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/clipFunction.js","import pointsWithinPolygon from '@turf/points-within-polygon';\r\nimport center from '@turf/center'\r\nimport {point} from '@turf/helpers';\r\n\r\n/**\r\n * Returns boolean. True if the center coordinate of the line segment is inside the clipArea. False otherwise.\r\n */\r\nconst isLineSegmentWithinPolygon = (lineSegment, clipArea) => {\r\n \r\n    let segCoords = lineSegment.geometry.coordinates;\r\n    let point2check;\r\n    //Check any point that is not a start or end point.\r\n    if (segCoords.length == 2 ) {\r\n        point2check = center(lineSegment);                       \r\n    } else {\r\n        point2check = point(segCoords[1]);\r\n    }\r\n\r\n    let first_within = pointsWithinPolygon(point2check, clipArea).features.length;\r\n\r\n    if(first_within > 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\nexport default isLineSegmentWithinPolygon\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geoprocessing/isLineSegmentWithinPolygon.js","import { getCoord, getCoords } from '@turf/invariant';\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var ignoreBoundary = options.ignoreBoundary;\n\n    // validation\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n\n    var pt = getCoord(point);\n    var polys = getCoords(polygon);\n    var type = (polygon.geometry) ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) return false;\n\n    // normalize to multipolygon\n    if (type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n}\n\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] &&\n           bbox[1] <= pt[1] &&\n           bbox[2] >= pt[0] &&\n           bbox[3] >= pt[1];\n}\n\nexport default booleanPointInPolygon;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/points-within-polygon/node_modules/@turf/boolean-point-in-polygon/main.es.js\n// module id = 6016\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/points-within-polygon/node_modules/@turf/helpers/main.es.js\n// module id = 6017\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = require(\"@turf/bbox\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox_1.default(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return helpers_1.point([x, y], options.properties, options);\n}\nexports.default = center;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/center/index.js\n// module id = 6018\n// module chunks = 7","import rbush from 'geojson-rbush';\nimport square from '@turf/square';\nimport bbox from '@turf/bbox';\nimport truncate from '@turf/truncate';\nimport lineSegment from '@turf/line-segment';\nimport lineIntersect from '@turf/line-intersect';\nimport nearestPointOnLine from '@turf/nearest-point-on-line';\nimport { getCoord, getCoords, getType } from '@turf/invariant';\nimport { featureEach, featureReduce, flattenEach } from '@turf/meta';\nimport { featureCollection, lineString } from '@turf/helpers';\n\n/**\n * Split a LineString by another GeoJSON Feature.\n *\n * @name lineSplit\n * @param {Feature<LineString>} line LineString Feature to split\n * @param {Feature<any>} splitter Feature used to split line\n * @returns {FeatureCollection<LineString>} Split LineStrings\n * @example\n * var line = turf.lineString([[120, -25], [145, -25]]);\n * var splitter = turf.lineString([[130, -15], [130, -35]]);\n *\n * var split = turf.lineSplit(line, splitter);\n *\n * //addToMap\n * var addToMap = [line, splitter]\n */\nfunction lineSplit(line, splitter) {\n    if (!line) throw new Error('line is required');\n    if (!splitter) throw new Error('splitter is required');\n\n    var lineType = getType(line);\n    var splitterType = getType(splitter);\n\n    if (lineType !== 'LineString') throw new Error('line must be LineString');\n    if (splitterType === 'FeatureCollection') throw new Error('splitter cannot be a FeatureCollection');\n    if (splitterType === 'GeometryCollection') throw new Error('splitter cannot be a GeometryCollection');\n\n    // remove excessive decimals from splitter\n    // to avoid possible approximation issues in rbush\n    var truncatedSplitter = truncate(splitter, {precision: 7});\n\n    switch (splitterType) {\n    case 'Point':\n        return splitLineWithPoint(line, truncatedSplitter);\n    case 'MultiPoint':\n        return splitLineWithPoints(line, truncatedSplitter);\n    case 'LineString':\n    case 'MultiLineString':\n    case 'Polygon':\n    case 'MultiPolygon':\n        return splitLineWithPoints(line, lineIntersect(line, truncatedSplitter));\n    }\n}\n\n/**\n * Split LineString with MultiPoint\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {FeatureCollection<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoints(line, splitter) {\n    var results = [];\n    var tree = rbush();\n\n    flattenEach(splitter, function (point) {\n        // Add index/id to features (needed for filter)\n        results.forEach(function (feature, index) {\n            feature.id = index;\n        });\n        // First Point - doesn't need to handle any previous line results\n        if (!results.length) {\n            results = splitLineWithPoint(line, point).features;\n\n            // Add Square BBox to each feature for GeoJSON-RBush\n            results.forEach(function (feature) {\n                if (!feature.bbox) feature.bbox = square(bbox(feature));\n            });\n            tree.load(featureCollection(results));\n        // Split with remaining points - lines might needed to be split multiple times\n        } else {\n            // Find all lines that are within the splitter's bbox\n            var search = tree.search(point);\n\n            if (search.features.length) {\n                // RBush might return multiple lines - only process the closest line to splitter\n                var closestLine = findClosestFeature(point, search);\n\n                // Remove closest line from results since this will be split into two lines\n                // This removes any duplicates inside the results & index\n                results = results.filter(function (feature) { return feature.id !== closestLine.id; });\n                tree.remove(closestLine);\n\n                // Append the two newly split lines into the results\n                featureEach(splitLineWithPoint(closestLine, point), function (line) {\n                    results.push(line);\n                    tree.insert(line);\n                });\n            }\n        }\n    });\n    return featureCollection(results);\n}\n\n/**\n * Split LineString with Point\n *\n * @private\n * @param {Feature<LineString>} line LineString\n * @param {Feature<Point>} splitter Point\n * @returns {FeatureCollection<LineString>} split LineStrings\n */\nfunction splitLineWithPoint(line, splitter) {\n    var results = [];\n\n    // handle endpoints\n    var startPoint = getCoords(line)[0];\n    var endPoint = getCoords(line)[line.geometry.coordinates.length - 1];\n    if (pointsEquals(startPoint, getCoord(splitter)) ||\n        pointsEquals(endPoint, getCoord(splitter))) return featureCollection([line]);\n\n    // Create spatial index\n    var tree = rbush();\n    var segments = lineSegment(line);\n    tree.load(segments);\n\n    // Find all segments that are within bbox of splitter\n    var search = tree.search(splitter);\n\n    // Return itself if point is not within spatial index\n    if (!search.features.length) return featureCollection([line]);\n\n    // RBush might return multiple lines - only process the closest line to splitter\n    var closestSegment = findClosestFeature(splitter, search);\n\n    // Initial value is the first point of the first segments (beginning of line)\n    var initialValue = [startPoint];\n    var lastCoords = featureReduce(segments, function (previous, current, index) {\n        var currentCoords = getCoords(current)[1];\n        var splitterCoords = getCoord(splitter);\n\n        // Location where segment intersects with line\n        if (index === closestSegment.id) {\n            previous.push(splitterCoords);\n            results.push(lineString(previous));\n            // Don't duplicate splitter coordinate (Issue #688)\n            if (pointsEquals(splitterCoords, currentCoords)) return [splitterCoords];\n            return [splitterCoords, currentCoords];\n\n        // Keep iterating over coords until finished or intersection is found\n        } else {\n            previous.push(currentCoords);\n            return previous;\n        }\n    }, initialValue);\n    // Append last line to final split results\n    if (lastCoords.length > 1) {\n        results.push(lineString(lastCoords));\n    }\n    return featureCollection(results);\n}\n\n\n/**\n * Find Closest Feature\n *\n * @private\n * @param {Feature<Point>} point Feature must be closest to this point\n * @param {FeatureCollection<LineString>} lines Collection of Features\n * @returns {Feature<LineString>} closest LineString\n */\nfunction findClosestFeature(point, lines) {\n    if (!lines.features.length) throw new Error('lines must contain features');\n    // Filter to one segment that is the closest to the line\n    if (lines.features.length === 1) return lines.features[0];\n\n    var closestFeature;\n    var closestDistance = Infinity;\n    featureEach(lines, function (segment) {\n        var pt = nearestPointOnLine(segment, point);\n        var dist = pt.properties.dist;\n        if (dist < closestDistance) {\n            closestFeature = segment;\n            closestDistance = dist;\n        }\n    });\n    return closestFeature;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Array<number>} pt1 point\n * @param {Array<number>} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction pointsEquals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\nexport default lineSplit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-split/main.es.js\n// module id = 6019\n// module chunks = 7","import quickselect from './quickselect';\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nexport default rbush;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geojson-rbush/rbush.js\n// module id = 6020\n// module chunks = 7","function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nexport default quickselect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/geojson-rbush/quickselect.js\n// module id = 6021\n// module chunks = 7","import distance from '@turf/distance';\n\n/**\n * Takes a bounding box and calculates the minimum square bounding box that\n * would contain the input.\n *\n * @name square\n * @param {BBox} bbox extent in [west, south, east, north] order\n * @returns {BBox} a square surrounding `bbox`\n * @example\n * var bbox = [-20, -20, -15, 0];\n * var squared = turf.square(bbox);\n *\n * //addToMap\n * var addToMap = [turf.bboxPolygon(bbox), turf.bboxPolygon(squared)]\n */\nfunction square(bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var horizontalDistance = distance(bbox.slice(0, 2), [east, south]);\n    var verticalDistance = distance(bbox.slice(0, 2), [west, north]);\n    if (horizontalDistance >= verticalDistance) {\n        var verticalMidpoint = (south + north) / 2;\n        return [\n            west,\n            verticalMidpoint - ((east - west) / 2),\n            east,\n            verticalMidpoint + ((east - west) / 2)\n        ];\n    } else {\n        var horizontalMidpoint = (west + east) / 2;\n        return [\n            horizontalMidpoint - ((north - south) / 2),\n            south,\n            horizontalMidpoint + ((north - south) / 2),\n            north\n        ];\n    }\n}\n\nexport default square;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/square/main.es.js\n// module id = 6022\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/distance/node_modules/@turf/helpers/main.es.js\n// module id = 6023\n// module chunks = 7","import { coordEach } from '@turf/meta';\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nexport default bbox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-split/node_modules/@turf/bbox/main.es.js\n// module id = 6024\n// module chunks = 7","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/truncate/main.es.js\n// module id = 6025\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/truncate/node_modules/@turf/helpers/main.es.js\n// module id = 6026\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-segment/node_modules/@turf/helpers/main.es.js\n// module id = 6027\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-intersect/node_modules/@turf/helpers/main.es.js\n// module id = 6028\n// module chunks = 7","import bearing from '@turf/bearing';\nimport distance from '@turf/distance';\nimport destination from '@turf/destination';\nimport lineIntersects from '@turf/line-intersect';\nimport { flattenEach } from '@turf/meta';\nimport { isObject, lineString, point } from '@turf/helpers';\nimport { getCoords } from '@turf/invariant';\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n\n    // validation\n    var type = (lines.geometry) ? lines.geometry.type : lines.type;\n    if (type !== 'LineString' && type !== 'MultiLineString') {\n        throw new Error('lines must be LineString or MultiLineString');\n    }\n\n    var closestPt = point([Infinity, Infinity], {\n        dist: Infinity\n    });\n\n    var length = 0.0;\n    flattenEach(lines, function (line) {\n        var coords = getCoords(line);\n\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = point(coords[i]);\n            start.properties.dist = distance(pt, start, options);\n            //stop\n            var stop = point(coords[i + 1]);\n            stop.properties.dist = distance(pt, stop, options);\n            // sectionLength\n            var sectionLength = distance(start, stop, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop.properties.dist);\n            var direction = bearing(start, stop);\n            var perpendicularPt1 = destination(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = destination(pt, heightDistance, direction - 90, options);\n            var intersect = lineIntersects(\n                lineString([perpendicularPt1.geometry.coordinates, perpendicularPt2.geometry.coordinates]),\n                lineString([start.geometry.coordinates, stop.geometry.coordinates])\n            );\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = distance(pt, intersectPt, options);\n                intersectPt.properties.location = length + distance(start, intersectPt, options);\n            }\n\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop.properties.dist < closestPt.properties.dist) {\n                closestPt = stop;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt && intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n\n    });\n\n    return closestPt;\n}\n\nexport default nearestPointOnLine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/nearest-point-on-line/main.es.js\n// module id = 6029\n// module chunks = 7","import { getCoord } from '@turf/invariant';\nimport { degreesToRadians, isObject, radiansToDegrees } from '@turf/helpers';\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nfunction bearing(start, end, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var final = options.final;\n\n    // Reverse calculation\n    if (final === true) return calculateFinalBearing(start, end);\n\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n\n    return radiansToDegrees(Math.atan2(a, b));\n}\n\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n\nexport default bearing;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bearing/main.es.js\n// module id = 6030\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/bearing/node_modules/@turf/helpers/main.es.js\n// module id = 6031\n// module chunks = 7","import { getCoord } from '@turf/invariant';\nimport { degreesToRadians, isObject, lengthToRadians, point, radiansToDegrees } from '@turf/helpers';\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in degrees, radians, miles, or kilometers; and bearing in degrees. This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nfunction destination(origin, distance, bearing, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n    var properties = options.properties;\n\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearing_rad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, units);\n\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearing_rad));\n    var longitude2 = longitude1 + Math.atan2(Math.sin(bearing_rad) * Math.sin(radians) * Math.cos(latitude1),\n        Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n\n    return point([lng, lat], properties);\n}\n\nexport default destination;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/destination/main.es.js\n// module id = 6032\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/destination/node_modules/@turf/helpers/main.es.js\n// module id = 6033\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/nearest-point-on-line/node_modules/@turf/helpers/main.es.js\n// module id = 6034\n// module chunks = 7","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/line-split/node_modules/@turf/helpers/main.es.js\n// module id = 6035\n// module chunks = 7","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Converts a {@link Polygon} to {@link LineString|(Multi)LineString} or {@link MultiPolygon} to a\n * {@link FeatureCollection} of {@link LineString|(Multi)LineString}.\n *\n * @name polygonToLine\n * @param {Feature<Polygon|MultiPolygon>} poly Feature to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @returns {FeatureCollection|Feature<LineString|MultiLinestring>} converted (Multi)Polygon to (Multi)LineString\n * @example\n * var poly = turf.polygon([[[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]]);\n *\n * var line = turf.polygonToLine(poly);\n *\n * //addToMap\n * var addToMap = [line];\n */\nfunction default_1(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    if (!options.properties && poly.type === \"Feature\") {\n        options.properties = poly.properties;\n    }\n    switch (geom.type) {\n        case \"Polygon\": return polygonToLine(geom, options);\n        case \"MultiPolygon\": return multiPolygonToLine(geom, options);\n        default: throw new Error(\"invalid poly\");\n    }\n}\nexports.default = default_1;\n/**\n * @private\n */\nfunction polygonToLine(poly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(poly);\n    var type = geom.type;\n    var coords = geom.coordinates;\n    var properties = options.properties ? options.properties : poly.type === \"Feature\" ? poly.properties : {};\n    return coordsToLine(coords, properties);\n}\nexports.polygonToLine = polygonToLine;\n/**\n * @private\n */\nfunction multiPolygonToLine(multiPoly, options) {\n    if (options === void 0) { options = {}; }\n    var geom = invariant_1.getGeom(multiPoly);\n    var type = geom.type;\n    var coords = geom.coordinates;\n    var properties = options.properties ? options.properties :\n        multiPoly.type === \"Feature\" ? multiPoly.properties : {};\n    var lines = [];\n    coords.forEach(function (coord) {\n        lines.push(coordsToLine(coord, properties));\n    });\n    return helpers_1.featureCollection(lines);\n}\nexports.multiPolygonToLine = multiPolygonToLine;\n/**\n * @private\n */\nfunction coordsToLine(coords, properties) {\n    if (coords.length > 1) {\n        return helpers_1.multiLineString(coords, properties);\n    }\n    return helpers_1.lineString(coords[0], properties);\n}\nexports.coordsToLine = coordsToLine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/polygon-to-line/index.js\n// module id = 6036\n// module chunks = 7","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"@turf/helpers\");\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@turf/polygon-to-line/node_modules/@turf/invariant/index.js\n// module id = 6037\n// module chunks = 7","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularLoader from '../../components/LoadingTypes/CircularLoader';\r\n\r\nconst styles = {\r\n};\r\n\r\nfunction LoadingCirular(props) {\r\n\r\n  if (props.isLoading) {\r\n    if (props.timedOut) {\r\n      return <div>Loader timed out!</div>;\r\n    } else if (props.pastDelay) {\r\n          return <CircularLoader fullpage={false} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (props.error) {\r\n    return <div>Error! Component failed to load</div>;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LoadingCirular);\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Loading/LoadingCirular.js","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport { Typography, TextField, MenuItem, Chip, Paper, NoSsr  } from '@material-ui/core';\r\nimport Select from 'react-select';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\r\n\r\n/**\r\n * Select that allows user to select multiple layers\r\n */\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginBottom: theme.spacing.unit\r\n      },\r\n      input: {\r\n        display: 'flex',\r\n        padding: 0,\r\n      },\r\n      valueContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flex: 1,\r\n        alignItems: 'center',\r\n      },\r\n      chip: {\r\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\r\n      },\r\n      chipFocused: {\r\n        backgroundColor: emphasize(\r\n          theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n          0.08,\r\n        ),\r\n      },\r\n      noOptionsMessage: {\r\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n      },\r\n      singleValue: {\r\n        fontSize: 16,\r\n      },\r\n      placeholder: {\r\n        position: 'absolute',\r\n        left: 2,\r\n        fontSize: 16,\r\n      },\r\n      paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing.unit,\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n      divider: {\r\n        height: theme.spacing.unit * 2,\r\n      },\r\n  });\r\n\r\n  function NoOptionsMessage(props) {\r\n    return (\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        className={props.selectProps.classes.noOptionsMessage}\r\n        {...props.innerProps}\r\n      >\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  function inputComponent({ inputRef, ...props }) {\r\n    return <div ref={inputRef} {...props} />;\r\n  }\r\n  \r\n  function Control(props) {\r\n    return (\r\n      <TextField\r\n        fullWidth\r\n        InputProps={{\r\n          inputComponent,\r\n          inputProps: {\r\n            className: props.selectProps.classes.input,\r\n            inputRef: props.innerRef,\r\n            children: props.children,\r\n            ...props.innerProps,\r\n          },\r\n        }}\r\n        {...props.selectProps.textFieldProps}\r\n      />\r\n    );\r\n  }\r\n  \r\n  function Option(props) {\r\n    return (\r\n      <MenuItem\r\n        buttonRef={props.innerRef}\r\n        selected={props.isFocused}\r\n        component=\"div\"\r\n        style={{\r\n          fontWeight: props.isSelected ? 500 : 400,\r\n        }}\r\n        {...props.innerProps}\r\n      >\r\n        {props.children}\r\n      </MenuItem>\r\n    );\r\n  }\r\n  \r\n  function Placeholder(props) {\r\n    return (\r\n      <Typography\r\n        color=\"textSecondary\"\r\n        className={props.selectProps.classes.placeholder}\r\n        {...props.innerProps}\r\n      >\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  function SingleValue(props) {\r\n    return (\r\n      <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n        {props.children}\r\n      </Typography>\r\n    );\r\n  }\r\n  \r\n  function ValueContainer(props) {\r\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n  }\r\n  \r\n  function MultiValue(props) {\r\n    return (\r\n      <Chip\r\n        tabIndex={-1}\r\n        label={props.children}\r\n        className={classNames(props.selectProps.classes.chip, {\r\n          [props.selectProps.classes.chipFocused]: props.isFocused,\r\n        })}\r\n        onDelete={props.removeProps.onClick}\r\n        deleteIcon={<CancelIcon {...props.removeProps} />}\r\n      />\r\n    );\r\n  }\r\n  \r\n  function Menu(props) {\r\n    return (\r\n      <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n        {props.children}\r\n      </Paper>\r\n    );\r\n  }\r\n  \r\n  const components = {\r\n    Control,\r\n    Menu,\r\n    MultiValue,\r\n    NoOptionsMessage,\r\n    Option,\r\n    Placeholder,\r\n    SingleValue,\r\n    ValueContainer,\r\n  };\r\n  \r\n  \r\n\r\n  class MultiLayerSelect extends Component {\r\n\r\n    state = {\r\n        suggestions: [],\r\n        selectedItems: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {layers} = this.props;\r\n\r\n        let suggestions = layers.map(layer => ({\r\n            value: layer.id,\r\n            label: layer.displayName,\r\n          }));\r\n        \r\n        this.setState({suggestions: suggestions});\r\n    }\r\n\r\n    handleChange = value => {\r\n        let {setLayerIds} = this.props;\r\n        let selectedIds = value.map( obj => obj.value );\r\n        \r\n        setLayerIds(selectedIds)\r\n\r\n        this.setState({\r\n          multi: value,\r\n        });\r\n\r\n      };\r\n    \r\n    render() {\r\n\r\n        const { classes, theme, promt } = this.props;\r\n        const { suggestions } = this.state;\r\n\r\n        const selectStyles = {\r\n          input: base => ({\r\n            ...base,\r\n            color: theme.palette.text.primary,\r\n            '& input': {\r\n              font: 'inherit',\r\n            },\r\n          }),\r\n        };\r\n\r\n        let label = promt ? promt :'choose layers *';\r\n  \r\n      return (\r\n        <div className={classes.root}>\r\n            <NoSsr>\r\n                <Select\r\n                classes={classes}\r\n                styles={selectStyles}\r\n                textFieldProps={{\r\n                label: label,\r\n                InputLabelProps: {\r\n                    shrink: true,\r\n                },\r\n                }}\r\n                options={suggestions}\r\n                components={components}\r\n                value={this.state.multi}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Select one or more layers\"\r\n                isMulti\r\n            />\r\n            </NoSsr>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(MultiLayerSelect);\n\n\n// WEBPACK FOOTER //\n// ./src/components/MultiLayerSelect.js","import raf from 'raf';\nimport React, { Component, PureComponent } from 'react';\nimport { css, injectGlobal } from 'emotion';\nimport { createPortal, findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport AutosizeInput from 'react-input-autosize';\nimport memoizeOne from 'memoize-one';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n// ==============================\n// NO OP\n// ==============================\n\nvar noop = function noop() {};\n\n// ==============================\n// Class Name Prefixer\n// ==============================\n\n/**\n String representation of component state for styling with class names.\n\n Expects an array of strings OR a string/object pair:\n - className(['comp', 'comp-arg', 'comp-arg-2'])\n   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'\n - className('comp', { some: true, state: false })\n   @returns 'react-select__comp react-select__comp--some'\n*/\nfunction applyPrefixToName(prefix, name) {\n  if (!name) {\n    return prefix;\n  } else if (name[0] === '-') {\n    return prefix + name;\n  } else {\n    return prefix + '__' + name;\n  }\n}\n\nfunction classNames(prefix, cssKey, state, className) {\n  var arr = [cssKey, className];\n  if (state && prefix) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key) && state[key]) {\n        arr.push('' + applyPrefixToName(prefix, key));\n      }\n    }\n  }\n\n  return arr.filter(function (i) {\n    return i;\n  }).map(function (i) {\n    return String(i).trim();\n  }).join(' ');\n}\n// ==============================\n// Clean Value\n// ==============================\n\nvar cleanValue = function cleanValue(value) {\n  if (Array.isArray(value)) return value.filter(Boolean);\n  if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null) return [value];\n  return [];\n};\n\n// ==============================\n// Handle Input Change\n// ==============================\n\nfunction handleInputChange(inputValue, actionMeta, onInputChange) {\n  if (onInputChange) {\n    var newValue = onInputChange(inputValue, actionMeta);\n    if (typeof newValue === 'string') return newValue;\n  }\n  return inputValue;\n}\n\n// ==============================\n// Scroll Helpers\n// ==============================\n\nfunction isDocumentElement(el) {\n  return [document.documentElement, document.body, window].indexOf(el) > -1;\n}\n\n// Normalized scrollTo & scrollTop\n// ------------------------------\n\nfunction getScrollTop(el) {\n  if (isDocumentElement(el)) {\n    return window.pageYOffset;\n  }\n  return el.scrollTop;\n}\n\nfunction scrollTo(el, top) {\n  // with a scroll distance, we perform scroll on the element\n  if (isDocumentElement(el)) {\n    window.scrollTo(0, top);\n    return;\n  }\n\n  el.scrollTop = top;\n}\n\n// Get Scroll Parent\n// ------------------------------\n\nfunction getScrollParent(element) {\n  var style = getComputedStyle(element);\n  var excludeStaticParent = style.position === 'absolute';\n  var overflowRx = /(auto|scroll)/;\n  var docEl = document.documentElement; // suck it, flow...\n\n  if (style.position === 'fixed') return docEl;\n\n  for (var parent = element; parent = parent.parentElement;) {\n    style = getComputedStyle(parent);\n    if (excludeStaticParent && style.position === 'static') {\n      continue;\n    }\n    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent;\n    }\n  }\n\n  return docEl;\n}\n\n// Animated Scroll To\n// ------------------------------\n\n/**\n  @param t: time (elapsed)\n  @param b: initial value\n  @param c: amount of change\n  @param d: duration\n*/\nfunction easeOutCubic(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}\n\nfunction animatedScrollTo(element, to) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n  var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n\n  var start = getScrollTop(element);\n  var change = to - start;\n  var increment = 10;\n  var currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    var val = easeOutCubic(currentTime, start, change, duration);\n    scrollTo(element, val);\n    if (currentTime < duration) {\n      raf(animateScroll);\n    } else {\n      callback(element);\n    }\n  }\n  animateScroll();\n}\n\n// Scroll Into View\n// ------------------------------\n\nfunction scrollIntoView(menuEl, focusedEl) {\n  var menuRect = menuEl.getBoundingClientRect();\n  var focusedRect = focusedEl.getBoundingClientRect();\n  var overScroll = focusedEl.offsetHeight / 3;\n\n  if (focusedRect.bottom + overScroll > menuRect.bottom) {\n    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));\n  } else if (focusedRect.top - overScroll < menuRect.top) {\n    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));\n  }\n}\n\n// ==============================\n// Get bounding client object\n// ==============================\n\n// cannot get keys using array notation with DOMRect\nfunction getBoundingClientObj(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width\n  };\n}\n\n// ==============================\n// Touch Capability Detector\n// ==============================\n\nfunction isTouchCapable() {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Mobile Device Detector\n// ==============================\n\nfunction isMobileDevice() {\n  try {\n    return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n// ==============================\n// Menu\n// ==============================\n\n// Get Menu Placement\n// ------------------------------\n\nfunction getMenuPlacement(_ref) {\n  var maxHeight = _ref.maxHeight,\n      menuEl = _ref.menuEl,\n      minHeight = _ref.minHeight,\n      placement = _ref.placement,\n      shouldScroll = _ref.shouldScroll,\n      isFixedPosition = _ref.isFixedPosition,\n      theme = _ref.theme;\n  var spacing = theme.spacing;\n\n  var scrollParent = getScrollParent(menuEl);\n  var defaultState = { placement: 'bottom', maxHeight: maxHeight };\n\n  // something went wrong, return default state\n  if (!menuEl || !menuEl.offsetParent) return defaultState;\n\n  // we can't trust `scrollParent.scrollHeight` --> it may increase when\n  // the menu is rendered\n\n  var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),\n      scrollHeight = _scrollParent$getBoun.height;\n\n  var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),\n      menuBottom = _menuEl$getBoundingCl.bottom,\n      menuHeight = _menuEl$getBoundingCl.height,\n      menuTop = _menuEl$getBoundingCl.top;\n\n  // $FlowFixMe function returns above if there's no offsetParent\n\n\n  var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),\n      containerTop = _menuEl$offsetParent$.top;\n\n  var viewHeight = window.innerHeight;\n  var scrollTop = getScrollTop(scrollParent);\n\n  var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10);\n  var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10);\n  var viewSpaceAbove = containerTop - marginTop;\n  var viewSpaceBelow = viewHeight - menuTop;\n  var scrollSpaceAbove = viewSpaceAbove + scrollTop;\n  var scrollSpaceBelow = scrollHeight - scrollTop - menuTop;\n\n  var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom;\n  var scrollUp = scrollTop + menuTop - marginTop;\n  var scrollDuration = 160;\n\n  switch (placement) {\n    case 'auto':\n    case 'bottom':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceBelow >= menuHeight) {\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (!isFixedPosition && scrollSpaceBelow >= minHeight || isFixedPosition && viewSpaceBelow >= minHeight) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollDown, scrollDuration);\n        }\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom;\n\n        return {\n          placement: 'bottom',\n          maxHeight: constrainedHeight\n        };\n      }\n\n      // 4. Forked beviour when there isn't enough space below\n\n      // AUTO: flip the menu, render above\n      if (placement === 'auto' || isFixedPosition) {\n        // may need to be constrained after flipping\n        var _constrainedHeight = maxHeight;\n\n        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n          _constrainedHeight = isFixedPosition ? viewSpaceAbove - marginBottom - spacing.controlHeight : scrollSpaceAbove - marginBottom - spacing.controlHeight;\n        }\n\n        return { placement: 'top', maxHeight: _constrainedHeight };\n      }\n\n      // BOTTOM: allow browser to increase scrollable area and immediately set scroll\n      if (placement === 'bottom') {\n        scrollTo(scrollParent, scrollDown);\n        return { placement: 'bottom', maxHeight: maxHeight };\n      }\n      break;\n    case 'top':\n      // 1: the menu will fit, do nothing\n      if (viewSpaceAbove >= menuHeight) {\n        return { placement: 'top', maxHeight: maxHeight };\n      }\n\n      // 2: the menu will fit, if scrolled\n      if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return { placement: 'top', maxHeight: maxHeight };\n      }\n\n      // 3: the menu will fit, if constrained\n      if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n        var _constrainedHeight2 = maxHeight;\n\n        // we want to provide as much of the menu as possible to the user,\n        // so give them whatever is available below rather than the minHeight.\n        if (!isFixedPosition && scrollSpaceAbove >= minHeight || isFixedPosition && viewSpaceAbove >= minHeight) {\n          _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop;\n        }\n\n        if (shouldScroll) {\n          animatedScrollTo(scrollParent, scrollUp, scrollDuration);\n        }\n\n        return {\n          placement: 'top',\n          maxHeight: _constrainedHeight2\n        };\n      }\n\n      // 4. not enough space, the browser WILL NOT increase scrollable area when\n      // absolutely positioned element rendered above the viewport (only below).\n      // Flip the menu, render below\n      return { placement: 'bottom', maxHeight: maxHeight };\n    default:\n      throw new Error('Invalid placement provided \"' + placement + '\".');\n  }\n\n  // fulfil contract with flow: implicit return value of undefined\n  return defaultState;\n}\n\n// Menu Component\n// ------------------------------\n\nfunction alignToControl(placement) {\n  var placementToCSSProp = { bottom: 'top', top: 'bottom' };\n  return placement ? placementToCSSProp[placement] : 'bottom';\n}\nvar coercePlacement = function coercePlacement(p) {\n  return p === 'auto' ? 'bottom' : p;\n};\n\nvar menuCSS = function menuCSS(_ref2) {\n  var _ref3;\n\n  var placement = _ref2.placement,\n      _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      spacing = _ref2$theme.spacing,\n      colors = _ref2$theme.colors;\n  return _ref3 = {}, defineProperty(_ref3, alignToControl(placement), '100%'), defineProperty(_ref3, 'backgroundColor', colors.neutral0), defineProperty(_ref3, 'borderRadius', borderRadius), defineProperty(_ref3, 'boxShadow', '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)'), defineProperty(_ref3, 'marginBottom', spacing.menuGutter), defineProperty(_ref3, 'marginTop', spacing.menuGutter), defineProperty(_ref3, 'position', 'absolute'), defineProperty(_ref3, 'width', '100%'), defineProperty(_ref3, 'zIndex', 1), _ref3;\n};\n\n// NOTE: internal only\nvar MenuPlacer = function (_Component) {\n  inherits(MenuPlacer, _Component);\n\n  function MenuPlacer() {\n    var _ref4;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, MenuPlacer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref4 = MenuPlacer.__proto__ || Object.getPrototypeOf(MenuPlacer)).call.apply(_ref4, [this].concat(args))), _this), _this.state = {\n      maxHeight: _this.props.maxMenuHeight,\n      placement: null\n    }, _this.getPlacement = function (ref) {\n      var _this$props = _this.props,\n          minMenuHeight = _this$props.minMenuHeight,\n          maxMenuHeight = _this$props.maxMenuHeight,\n          menuPlacement = _this$props.menuPlacement,\n          menuPosition = _this$props.menuPosition,\n          menuShouldScrollIntoView = _this$props.menuShouldScrollIntoView,\n          theme = _this$props.theme;\n      var getPortalPlacement = _this.context.getPortalPlacement;\n\n\n      if (!ref) return;\n\n      // DO NOT scroll if position is fixed\n      var isFixedPosition = menuPosition === 'fixed';\n      var shouldScroll = menuShouldScrollIntoView && !isFixedPosition;\n\n      var state = getMenuPlacement({\n        maxHeight: maxMenuHeight,\n        menuEl: ref,\n        minHeight: minMenuHeight,\n        placement: menuPlacement,\n        shouldScroll: shouldScroll,\n        isFixedPosition: isFixedPosition,\n        theme: theme\n      });\n\n      if (getPortalPlacement) getPortalPlacement(state);\n\n      _this.setState(state);\n    }, _this.getUpdatedProps = function () {\n      var menuPlacement = _this.props.menuPlacement;\n\n      var placement = _this.state.placement || coercePlacement(menuPlacement);\n\n      return _extends({}, _this.props, { placement: placement, maxHeight: _this.state.maxHeight });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(MenuPlacer, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        ref: this.getPlacement,\n        placerProps: this.getUpdatedProps()\n      });\n    }\n  }]);\n  return MenuPlacer;\n}(Component);\n\nMenuPlacer.contextTypes = {\n  getPortalPlacement: PropTypes.func\n};\nvar Menu = function Menu(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  var cn = cx( /*#__PURE__*/css(getStyles('menu', props)), { menu: true }, className);\n\n  return React.createElement(\n    'div',\n    _extends({ className: cn }, innerProps, { ref: innerRef }),\n    children\n  );\n};\n\n// ==============================\n// Menu List\n// ==============================\n\nvar menuListCSS = function menuListCSS(_ref5) {\n  var maxHeight = _ref5.maxHeight,\n      baseUnit = _ref5.theme.spacing.baseUnit;\n  return {\n    maxHeight: maxHeight,\n    overflowY: 'auto',\n    paddingBottom: baseUnit,\n    paddingTop: baseUnit,\n    position: 'relative', // required for offset[Height, Top] > keyboard scroll\n    WebkitOverflowScrolling: 'touch'\n  };\n};\nvar MenuList = function MenuList(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isMulti = props.isMulti,\n      innerRef = props.innerRef;\n\n  return React.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/css(getStyles('menuList', props)), {\n        'menu-list': true,\n        'menu-list--is-multi': isMulti\n      }, className),\n      ref: innerRef\n    },\n    children\n  );\n};\n\n// ==============================\n// Menu Notices\n// ==============================\n\nvar noticeCSS = function noticeCSS(_ref6) {\n  var _ref6$theme = _ref6.theme,\n      baseUnit = _ref6$theme.spacing.baseUnit,\n      colors = _ref6$theme.colors;\n  return {\n    color: colors.neutral40,\n    padding: baseUnit * 2 + 'px ' + baseUnit * 3 + 'px',\n    textAlign: 'center'\n  };\n};\nvar noOptionsMessageCSS = noticeCSS;\nvar loadingMessageCSS = noticeCSS;\n\nvar NoOptionsMessage = function NoOptionsMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/css(getStyles('noOptionsMessage', props)), {\n        'menu-notice': true,\n        'menu-notice--no-options': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\nNoOptionsMessage.defaultProps = {\n  children: 'No options'\n};\n\nvar LoadingMessage = function LoadingMessage(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/css(getStyles('loadingMessage', props)), {\n        'menu-notice': true,\n        'menu-notice--loading': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\nLoadingMessage.defaultProps = {\n  children: 'Loading...'\n};\n\n// ==============================\n// Menu Portal\n// ==============================\n\nvar menuPortalCSS = function menuPortalCSS(_ref7) {\n  var rect = _ref7.rect,\n      offset = _ref7.offset,\n      position = _ref7.position;\n  return {\n    left: rect.left,\n    position: position,\n    top: offset,\n    width: rect.width,\n    zIndex: 1\n  };\n};\n\nvar MenuPortal = function (_Component2) {\n  inherits(MenuPortal, _Component2);\n\n  function MenuPortal() {\n    var _ref8;\n\n    var _temp2, _this2, _ret2;\n\n    classCallCheck(this, MenuPortal);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this2 = possibleConstructorReturn(this, (_ref8 = MenuPortal.__proto__ || Object.getPrototypeOf(MenuPortal)).call.apply(_ref8, [this].concat(args))), _this2), _this2.state = { placement: null }, _this2.getPortalPlacement = function (_ref9) {\n      var placement = _ref9.placement;\n\n      var initialPlacement = coercePlacement(_this2.props.menuPlacement);\n\n      // avoid re-renders if the placement has not changed\n      if (placement !== initialPlacement) {\n        _this2.setState({ placement: placement });\n      }\n    }, _temp2), possibleConstructorReturn(_this2, _ret2);\n  }\n\n  createClass(MenuPortal, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        getPortalPlacement: this.getPortalPlacement\n      };\n    }\n\n    // callback for occassions where the menu must \"flip\"\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          appendTo = _props.appendTo,\n          children = _props.children,\n          controlElement = _props.controlElement,\n          menuPlacement = _props.menuPlacement,\n          position = _props.menuPosition,\n          getStyles = _props.getStyles;\n\n      var isFixed = position === 'fixed';\n\n      // bail early if required elements aren't present\n      if (!appendTo && !isFixed || !controlElement) {\n        return null;\n      }\n\n      var placement = this.state.placement || coercePlacement(menuPlacement);\n      var rect = getBoundingClientObj(controlElement);\n      var scrollDistance = isFixed ? 0 : window.pageYOffset;\n      var offset = rect[placement] + scrollDistance;\n      var state = { offset: offset, position: position, rect: rect };\n\n      // same wrapper element whether fixed or portalled\n      var menuWrapper = React.createElement(\n        'div',\n        { className: /*#__PURE__*/ /*#__PURE__*/css(getStyles('menuPortal', state)) },\n        children\n      );\n\n      return appendTo ? createPortal(menuWrapper, appendTo) : menuWrapper;\n    }\n  }]);\n  return MenuPortal;\n}(Component);\nMenuPortal.childContextTypes = {\n  getPortalPlacement: PropTypes.func\n};\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) == 'object' && (typeof b === 'undefined' ? 'undefined' : _typeof(b)) == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length) {\n      return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    }\n    // end fast-deep-equal\n\n    // Custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nfunction exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (error.message && error.message.match(/stack|recursion/i)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n}\n\nvar diacritics = [{ base: 'A', letters: /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g }, { base: 'AA', letters: /[\\uA732]/g }, { base: 'AE', letters: /[\\u00C6\\u01FC\\u01E2]/g }, { base: 'AO', letters: /[\\uA734]/g }, { base: 'AU', letters: /[\\uA736]/g }, { base: 'AV', letters: /[\\uA738\\uA73A]/g }, { base: 'AY', letters: /[\\uA73C]/g }, { base: 'B', letters: /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g }, { base: 'C', letters: /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g }, { base: 'D', letters: /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g }, { base: 'DZ', letters: /[\\u01F1\\u01C4]/g }, { base: 'Dz', letters: /[\\u01F2\\u01C5]/g }, { base: 'E', letters: /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g }, { base: 'F', letters: /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g }, { base: 'G', letters: /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g }, { base: 'H', letters: /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g }, { base: 'I', letters: /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g }, { base: 'J', letters: /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g }, { base: 'K', letters: /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g }, { base: 'L', letters: /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g }, { base: 'LJ', letters: /[\\u01C7]/g }, { base: 'Lj', letters: /[\\u01C8]/g }, { base: 'M', letters: /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g }, { base: 'N', letters: /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g }, { base: 'NJ', letters: /[\\u01CA]/g }, { base: 'Nj', letters: /[\\u01CB]/g }, { base: 'O', letters: /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g }, { base: 'OI', letters: /[\\u01A2]/g }, { base: 'OO', letters: /[\\uA74E]/g }, { base: 'OU', letters: /[\\u0222]/g }, { base: 'P', letters: /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g }, { base: 'Q', letters: /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g }, { base: 'R', letters: /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g }, { base: 'S', letters: /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g }, { base: 'T', letters: /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g }, { base: 'TZ', letters: /[\\uA728]/g }, { base: 'U', letters: /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g }, { base: 'V', letters: /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g }, { base: 'VY', letters: /[\\uA760]/g }, { base: 'W', letters: /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g }, { base: 'X', letters: /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g }, { base: 'Y', letters: /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g }, { base: 'Z', letters: /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g }, { base: 'a', letters: /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g }, { base: 'aa', letters: /[\\uA733]/g }, { base: 'ae', letters: /[\\u00E6\\u01FD\\u01E3]/g }, { base: 'ao', letters: /[\\uA735]/g }, { base: 'au', letters: /[\\uA737]/g }, { base: 'av', letters: /[\\uA739\\uA73B]/g }, { base: 'ay', letters: /[\\uA73D]/g }, { base: 'b', letters: /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g }, { base: 'c', letters: /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g }, { base: 'd', letters: /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g }, { base: 'dz', letters: /[\\u01F3\\u01C6]/g }, { base: 'e', letters: /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g }, { base: 'f', letters: /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g }, { base: 'g', letters: /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g }, { base: 'h', letters: /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g }, { base: 'hv', letters: /[\\u0195]/g }, { base: 'i', letters: /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g }, { base: 'j', letters: /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g }, { base: 'k', letters: /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g }, { base: 'l', letters: /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g }, { base: 'lj', letters: /[\\u01C9]/g }, { base: 'm', letters: /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g }, { base: 'n', letters: /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g }, { base: 'nj', letters: /[\\u01CC]/g }, { base: 'o', letters: /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g }, { base: 'oi', letters: /[\\u01A3]/g }, { base: 'ou', letters: /[\\u0223]/g }, { base: 'oo', letters: /[\\uA74F]/g }, { base: 'p', letters: /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g }, { base: 'q', letters: /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g }, { base: 'r', letters: /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g }, { base: 's', letters: /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g }, { base: 't', letters: /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g }, { base: 'tz', letters: /[\\uA729]/g }, { base: 'u', letters: /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g }, { base: 'v', letters: /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g }, { base: 'vy', letters: /[\\uA761]/g }, { base: 'w', letters: /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g }, { base: 'x', letters: /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g }, { base: 'y', letters: /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g }, { base: 'z', letters: /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g }];\n\nvar stripDiacritics = function stripDiacritics(str) {\n\tfor (var i = 0; i < diacritics.length; i++) {\n\t\tstr = str.replace(diacritics[i].letters, diacritics[i].base);\n\t}\n\treturn str;\n};\n\nvar trimString = function trimString(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\nvar defaultStringify = function defaultStringify(option) {\n  return option.label + ' ' + option.value;\n};\n\nvar createFilter = function createFilter(config) {\n  return function (option, rawInput) {\n    var _ignoreCase$ignoreAcc = _extends({\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaultStringify,\n      trim: true,\n      matchFrom: 'any'\n    }, config),\n        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,\n        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,\n        stringify = _ignoreCase$ignoreAcc.stringify,\n        trim = _ignoreCase$ignoreAcc.trim,\n        matchFrom = _ignoreCase$ignoreAcc.matchFrom;\n\n    var input = trim ? trimString(rawInput) : rawInput;\n    var candidate = trim ? trimString(stringify(option)) : stringify(option);\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n      candidate = stripDiacritics(candidate);\n    }\n    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;\n  };\n};\n\n// Assistive text to describe visual elements. Hidden for sighted users.\nvar A11yText = function A11yText(props) {\n  return React.createElement('span', _extends({\n    className: css({\n      zIndex: 9999,\n      border: 0,\n      clip: 'rect(1px, 1px, 1px, 1px)',\n      height: 1,\n      width: 1,\n      position: 'absolute',\n      overflow: 'hidden',\n      padding: 0,\n      whiteSpace: 'nowrap',\n      backgroundColor: 'red',\n      color: 'blue'\n    })\n  }, props));\n};\n\nvar DummyInput = function (_Component) {\n  inherits(DummyInput, _Component);\n\n  function DummyInput() {\n    classCallCheck(this, DummyInput);\n    return possibleConstructorReturn(this, (DummyInput.__proto__ || Object.getPrototypeOf(DummyInput)).apply(this, arguments));\n  }\n\n  createClass(DummyInput, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          inProp = _props.in,\n          out = _props.out,\n          onExited = _props.onExited,\n          appear = _props.appear,\n          enter = _props.enter,\n          exit = _props.exit,\n          innerRef = _props.innerRef,\n          props = objectWithoutProperties(_props, ['in', 'out', 'onExited', 'appear', 'enter', 'exit', 'innerRef']);\n\n      return React.createElement('input', _extends({\n        ref: innerRef\n      }, props, {\n        className: css({\n          // get rid of any default styles\n          background: 0,\n          border: 0,\n          fontSize: 'inherit',\n          outline: 0,\n          padding: 0,\n\n          // important! without `width` browsers won't allow focus\n          width: 1,\n\n          // remove cursor on desktop\n          color: 'transparent',\n\n          // remove cursor on mobile whilst maintaining \"scroll into view\" behaviour\n          left: -100,\n          opacity: 0,\n          position: 'relative',\n          transform: 'scale(0)'\n        })\n      }));\n    }\n  }]);\n  return DummyInput;\n}(Component);\n\nvar NodeResolver = function (_Component) {\n  inherits(NodeResolver, _Component);\n\n  function NodeResolver() {\n    classCallCheck(this, NodeResolver);\n    return possibleConstructorReturn(this, (NodeResolver.__proto__ || Object.getPrototypeOf(NodeResolver)).apply(this, arguments));\n  }\n\n  createClass(NodeResolver, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.innerRef(findDOMNode(this));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.innerRef(null);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return NodeResolver;\n}(Component);\n\nvar STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position'];\n\nvar LOCK_STYLES = {\n  boxSizing: 'border-box', // account for possible declaration `width: 100%;` on body\n  overflow: 'hidden',\n  position: 'relative',\n  height: '100%'\n};\n\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\n\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\n\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n}\n\n// `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\nfunction isTouchDevice() {\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar activeScrollLocks = 0;\n\nvar ScrollLock = function (_Component) {\n  inherits(ScrollLock, _Component);\n\n  function ScrollLock() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollLock);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollLock.__proto__ || Object.getPrototypeOf(ScrollLock)).call.apply(_ref, [this].concat(args))), _this), _this.originalStyles = {}, _this.listenerOptions = {\n      capture: false,\n      passive: false\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ScrollLock, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!canUseDOM) return;\n\n      var _props = this.props,\n          accountForScrollbars = _props.accountForScrollbars,\n          touchScrollTarget = _props.touchScrollTarget;\n\n      var target = document.body;\n      var targetStyle = target && target.style;\n\n      if (accountForScrollbars) {\n        // store any styles already applied to the body\n        STYLE_KEYS.forEach(function (key) {\n          var val = targetStyle && targetStyle[key];\n          _this2.originalStyles[key] = val;\n        });\n      }\n\n      // apply the lock styles and padding if this is the first scroll lock\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        var currentPadding = parseInt(this.originalStyles.paddingRight, 10) || 0;\n        var clientWidth = document.body ? document.body.clientWidth : 0;\n        var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;\n\n        Object.keys(LOCK_STYLES).forEach(function (key) {\n          var val = LOCK_STYLES[key];\n          if (targetStyle) {\n            targetStyle[key] = val;\n          }\n        });\n\n        if (targetStyle) {\n          targetStyle.paddingRight = adjustedPadding + 'px';\n        }\n      }\n\n      // account for touch devices\n      if (target && isTouchDevice()) {\n        // Mobile Safari ignores { overflow: hidden } declaration on the body.\n        target.addEventListener('touchmove', preventTouchMove, this.listenerOptions);\n\n        // Allow scroll on provided target\n        if (touchScrollTarget) {\n          touchScrollTarget.addEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n          touchScrollTarget.addEventListener('touchmove', allowTouchMove, this.listenerOptions);\n        }\n      }\n\n      // increment active scroll locks\n      activeScrollLocks += 1;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      if (!canUseDOM) return;\n\n      var _props2 = this.props,\n          accountForScrollbars = _props2.accountForScrollbars,\n          touchScrollTarget = _props2.touchScrollTarget;\n\n      var target = document.body;\n      var targetStyle = target && target.style;\n\n      // safely decrement active scroll locks\n      activeScrollLocks = Math.max(activeScrollLocks - 1, 0);\n\n      // reapply original body styles, if any\n      if (accountForScrollbars && activeScrollLocks < 1) {\n        STYLE_KEYS.forEach(function (key) {\n          var val = _this3.originalStyles[key];\n          if (targetStyle) {\n            targetStyle[key] = val;\n          }\n        });\n      }\n\n      // remove touch listeners\n      if (target && isTouchDevice()) {\n        target.removeEventListener('touchmove', preventTouchMove, this.listenerOptions);\n\n        if (touchScrollTarget) {\n          touchScrollTarget.removeEventListener('touchstart', preventInertiaScroll, this.listenerOptions);\n          touchScrollTarget.removeEventListener('touchmove', allowTouchMove, this.listenerOptions);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n  return ScrollLock;\n}(Component);\n\nScrollLock.defaultProps = {\n  accountForScrollbars: true\n};\n\n// NOTE:\n// We shouldn't need this after updating to React v16.3.0, which introduces:\n// - createRef() https://reactjs.org/docs/react-api.html#reactcreateref\n// - forwardRef() https://reactjs.org/docs/react-api.html#reactforwardref\n\nvar ScrollBlock = function (_PureComponent) {\n  inherits(ScrollBlock, _PureComponent);\n\n  function ScrollBlock() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollBlock);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollBlock.__proto__ || Object.getPrototypeOf(ScrollBlock)).call.apply(_ref, [this].concat(args))), _this), _this.state = { touchScrollTarget: null }, _this.getScrollTarget = function (ref) {\n      if (ref === _this.state.touchScrollTarget) return;\n      _this.setState({ touchScrollTarget: ref });\n    }, _this.blurSelectInput = function () {\n      if (document.activeElement) {\n        document.activeElement.blur();\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // must be in state to trigger a re-render, only runs once per instance\n\n\n  // this will close the menu when a user clicks outside\n\n\n  createClass(ScrollBlock, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          isEnabled = _props.isEnabled;\n      var touchScrollTarget = this.state.touchScrollTarget;\n\n      // bail early if not enabled\n\n      if (!isEnabled) return children;\n\n      /*\n       * Div\n       * ------------------------------\n       * blocks scrolling on non-body elements behind the menu\n        * NodeResolver\n       * ------------------------------\n       * we need a reference to the scrollable element to \"unlock\" scroll on\n       * mobile devices\n        * ScrollLock\n       * ------------------------------\n       * actually does the scroll locking\n       */\n      return React.createElement(\n        'div',\n        null,\n        React.createElement('div', {\n          onClick: this.blurSelectInput,\n          className: css({ position: 'fixed', left: 0, bottom: 0, right: 0, top: 0 })\n        }),\n        React.createElement(\n          NodeResolver,\n          { innerRef: this.getScrollTarget },\n          children\n        ),\n        touchScrollTarget ? React.createElement(ScrollLock, { touchScrollTarget: touchScrollTarget }) : null\n      );\n    }\n  }]);\n  return ScrollBlock;\n}(PureComponent);\n\nvar ScrollCaptor = function (_Component) {\n  inherits(ScrollCaptor, _Component);\n\n  function ScrollCaptor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ScrollCaptor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ScrollCaptor.__proto__ || Object.getPrototypeOf(ScrollCaptor)).call.apply(_ref, [this].concat(args))), _this), _this.isBottom = false, _this.isTop = false, _this.cancelScroll = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }, _this.handleEventDelta = function (event, delta) {\n      var _this$props = _this.props,\n          onBottomArrive = _this$props.onBottomArrive,\n          onBottomLeave = _this$props.onBottomLeave,\n          onTopArrive = _this$props.onTopArrive,\n          onTopLeave = _this$props.onTopLeave;\n      var _this$scrollTarget = _this.scrollTarget,\n          scrollTop = _this$scrollTarget.scrollTop,\n          scrollHeight = _this$scrollTarget.scrollHeight,\n          clientHeight = _this$scrollTarget.clientHeight;\n\n      var target = _this.scrollTarget;\n      var isDeltaPositive = delta > 0;\n      var availableScroll = scrollHeight - clientHeight - scrollTop;\n      var shouldCancelScroll = false;\n\n      // reset bottom/top flags\n      if (availableScroll > delta && _this.isBottom) {\n        if (onBottomLeave) onBottomLeave(event);\n        _this.isBottom = false;\n      }\n      if (isDeltaPositive && _this.isTop) {\n        if (onTopLeave) onTopLeave(event);\n        _this.isTop = false;\n      }\n\n      // bottom limit\n      if (isDeltaPositive && delta > availableScroll) {\n        if (onBottomArrive && !_this.isBottom) {\n          onBottomArrive(event);\n        }\n        target.scrollTop = scrollHeight;\n        shouldCancelScroll = true;\n        _this.isBottom = true;\n\n        // top limit\n      } else if (!isDeltaPositive && -delta > scrollTop) {\n        if (onTopArrive && !_this.isTop) {\n          onTopArrive(event);\n        }\n        target.scrollTop = 0;\n        shouldCancelScroll = true;\n        _this.isTop = true;\n      }\n\n      // cancel scroll\n      if (shouldCancelScroll) {\n        _this.cancelScroll(event);\n      }\n    }, _this.onWheel = function (event) {\n      _this.handleEventDelta(event, event.deltaY);\n    }, _this.onTouchStart = function (event) {\n      // set touch start so we can calculate touchmove delta\n      _this.touchStart = event.changedTouches[0].clientY;\n    }, _this.onTouchMove = function (event) {\n      var deltaY = _this.touchStart - event.changedTouches[0].clientY;\n      _this.handleEventDelta(event, deltaY);\n    }, _this.getScrollTarget = function (ref) {\n      _this.scrollTarget = ref;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ScrollCaptor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startListening(this.scrollTarget);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopListening(this.scrollTarget);\n    }\n  }, {\n    key: 'startListening',\n    value: function startListening(el) {\n      // bail early if no scroll available\n      if (el.scrollHeight <= el.clientHeight) return;\n\n      // all the if statements are to appease Flow 😢\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('wheel', this.onWheel, false);\n      }\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('touchstart', this.onTouchStart, false);\n      }\n      if (typeof el.addEventListener === 'function') {\n        el.addEventListener('touchmove', this.onTouchMove, false);\n      }\n    }\n  }, {\n    key: 'stopListening',\n    value: function stopListening(el) {\n      // bail early if no scroll available\n      if (el.scrollHeight <= el.clientHeight) return;\n\n      // all the if statements are to appease Flow 😢\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('wheel', this.onWheel, false);\n      }\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('touchstart', this.onTouchStart, false);\n      }\n      if (typeof el.removeEventListener === 'function') {\n        el.removeEventListener('touchmove', this.onTouchMove, false);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(\n        NodeResolver,\n        { innerRef: this.getScrollTarget },\n        this.props.children\n      );\n    }\n  }]);\n  return ScrollCaptor;\n}(Component);\n\nvar ScrollCaptorSwitch = function (_Component2) {\n  inherits(ScrollCaptorSwitch, _Component2);\n\n  function ScrollCaptorSwitch() {\n    classCallCheck(this, ScrollCaptorSwitch);\n    return possibleConstructorReturn(this, (ScrollCaptorSwitch.__proto__ || Object.getPrototypeOf(ScrollCaptorSwitch)).apply(this, arguments));\n  }\n\n  createClass(ScrollCaptorSwitch, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          isEnabled = _props.isEnabled,\n          props = objectWithoutProperties(_props, ['isEnabled']);\n\n      return isEnabled ? React.createElement(ScrollCaptor, props) : this.props.children;\n    }\n  }]);\n  return ScrollCaptorSwitch;\n}(Component);\n\nScrollCaptorSwitch.defaultProps = { isEnabled: true };\n\nvar instructionsAriaMessage = function instructionsAriaMessage(event) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var isSearchable = context.isSearchable,\n      isMulti = context.isMulti,\n      label = context.label;\n\n  switch (event) {\n    case 'menu':\n      return 'Use Up and Down to choose options, press Backspace to select the currently focused option, press Escape to exit the menu, press Tab to select the option and exit the menu.';\n    case 'input':\n      return (label ? label : 'Select') + ' is focused ' + (isSearchable ? ',type to refine list' : '') + ', press Down to open the menu, ' + (isMulti ? ' press left to focus selected values' : '');\n    case 'value':\n      return 'Use left and right to toggle between focused values, press Enter to remove the currently focused value';\n  }\n};\n\nvar valueEventAriaMessage = function valueEventAriaMessage(event, context) {\n  var value = context.value;\n\n  if (!value) return;\n  switch (event) {\n    case 'deselect-option':\n    case 'pop-value':\n    case 'remove-value':\n      return 'option ' + value + ', deselected.';\n    case 'select-option':\n      return 'option ' + value + ', selected.';\n  }\n};\n\nvar valueFocusAriaMessage = function valueFocusAriaMessage(_ref) {\n  var focusedValue = _ref.focusedValue,\n      getOptionLabel = _ref.getOptionLabel,\n      selectValue = _ref.selectValue;\n  return 'value ' + getOptionLabel(focusedValue) + ' focused, ' + (selectValue.indexOf(focusedValue) + 1) + ' of ' + selectValue.length + '.';\n};\nvar optionFocusAriaMessage = function optionFocusAriaMessage(_ref2) {\n  var focusedOption = _ref2.focusedOption,\n      getOptionLabel = _ref2.getOptionLabel,\n      options = _ref2.options;\n  return 'option ' + getOptionLabel(focusedOption) + ' focused, ' + (options.indexOf(focusedOption) + 1) + ' of ' + options.length + '.';\n};\nvar resultsAriaMessage = function resultsAriaMessage(_ref3) {\n  var inputValue = _ref3.inputValue,\n      screenReaderMessage = _ref3.screenReaderMessage;\n  return '' + screenReaderMessage + (inputValue ? ' for search term ' + inputValue : '') + '.';\n};\n\nvar formatGroupLabel = function formatGroupLabel(group) {\n  return group.label;\n};\n\nvar getOptionLabel = function getOptionLabel(option) {\n  return option.label;\n};\n\nvar getOptionValue = function getOptionValue(option) {\n  return option.value;\n};\n\nvar isOptionDisabled = function isOptionDisabled(option) {\n  return !!option.isDisabled;\n};\n\n// ==============================\n// Root Container\n// ==============================\n\nvar containerCSS = function containerCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isRtl = _ref.isRtl;\n  return {\n    direction: isRtl ? 'rtl' : null,\n    pointerEvents: isDisabled ? 'none' : null, // cancel mouse events when disabled\n    position: 'relative'\n  };\n};\nvar SelectContainer = function SelectContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isDisabled = props.isDisabled,\n      isRtl = props.isRtl;\n\n  return React.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/css(getStyles('container', props)), {\n        '--is-disabled': isDisabled,\n        '--is-rtl': isRtl\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\n// ==============================\n// Value Container\n// ==============================\n\nvar valueContainerCSS = function valueContainerCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap',\n    padding: spacing.baseUnit / 2 + 'px ' + spacing.baseUnit * 2 + 'px',\n    WebkitOverflowScrolling: 'touch',\n    position: 'relative',\n    overflow: 'hidden'\n  };\n};\nvar ValueContainer = function (_Component) {\n  inherits(ValueContainer, _Component);\n\n  function ValueContainer() {\n    classCallCheck(this, ValueContainer);\n    return possibleConstructorReturn(this, (ValueContainer.__proto__ || Object.getPrototypeOf(ValueContainer)).apply(this, arguments));\n  }\n\n  createClass(ValueContainer, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          cx = _props.cx,\n          isMulti = _props.isMulti,\n          getStyles = _props.getStyles,\n          hasValue = _props.hasValue;\n\n\n      return React.createElement(\n        'div',\n        {\n          className: cx( /*#__PURE__*/css(getStyles('valueContainer', this.props)), {\n            'value-container': true,\n            'value-container--is-multi': isMulti,\n            'value-container--has-value': hasValue\n          }, className)\n        },\n        children\n      );\n    }\n  }]);\n  return ValueContainer;\n}(Component);\n\n// ==============================\n// Indicator Container\n// ==============================\n\nvar indicatorsContainerCSS = function indicatorsContainerCSS() {\n  return {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    display: 'flex',\n    flexShrink: 0\n  };\n};\nvar IndicatorsContainer = function IndicatorsContainer(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles;\n\n\n  return React.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/css(getStyles('indicatorsContainer', props)), {\n        'indicators': true\n      }, className)\n    },\n    children\n  );\n};\n\n// ==============================\n// Dropdown & Clear Icons\n// ==============================\n\nvar Svg = function Svg(_ref) {\n  var size = _ref.size,\n      props = objectWithoutProperties(_ref, ['size']);\n  return React.createElement('svg', _extends({\n    height: size,\n    width: size,\n    viewBox: '0 0 20 20',\n    'aria-hidden': 'true',\n    focusable: 'false',\n    className: /*#__PURE__*/ /*#__PURE__*/css({\n      display: 'inline-block',\n      fill: 'currentColor',\n      lineHeight: 1,\n      stroke: 'currentColor',\n      strokeWidth: 0\n    })\n  }, props));\n};\n\nvar CrossIcon = function CrossIcon(props) {\n  return React.createElement(\n    Svg,\n    _extends({ size: 20 }, props),\n    React.createElement('path', { d: 'M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z' })\n  );\n};\nvar DownChevron = function DownChevron(props) {\n  return React.createElement(\n    Svg,\n    _extends({ size: 20 }, props),\n    React.createElement('path', { d: 'M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z' })\n  );\n};\n\n// ==============================\n// Dropdown & Clear Buttons\n// ==============================\n\nvar baseCSS = function baseCSS(_ref2) {\n  var isFocused = _ref2.isFocused,\n      _ref2$theme = _ref2.theme,\n      baseUnit = _ref2$theme.spacing.baseUnit,\n      colors = _ref2$theme.colors;\n  return {\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n\n    ':hover': {\n      color: isFocused ? colors.neutral80 : colors.neutral40\n    }\n  };\n};\n\nvar dropdownIndicatorCSS = baseCSS;\nvar DropdownIndicator = function DropdownIndicator(props) {\n  var _props$children = props.children,\n      children = _props$children === undefined ? React.createElement(DownChevron, null) : _props$children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/css(getStyles('dropdownIndicator', props)), {\n        'indicator': true,\n        'dropdown-indicator': true\n      }, className)\n    }),\n    children\n  );\n};\n\nvar clearIndicatorCSS = baseCSS;\nvar ClearIndicator = function ClearIndicator(props) {\n  var _props$children2 = props.children,\n      children = _props$children2 === undefined ? React.createElement(CrossIcon, null) : _props$children2,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/css(getStyles('clearIndicator', props)), {\n        'indicator': true,\n        'clear-indicator': true\n      }, className)\n    }),\n    children\n  );\n};\n\n// ==============================\n// Separator\n// ==============================\n\nvar indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref3) {\n  var isDisabled = _ref3.isDisabled,\n      _ref3$theme = _ref3.theme,\n      baseUnit = _ref3$theme.spacing.baseUnit,\n      colors = _ref3$theme.colors;\n  return {\n    alignSelf: 'stretch',\n    backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,\n    marginBottom: baseUnit * 2,\n    marginTop: baseUnit * 2,\n    width: 1\n  };\n};\n\nvar IndicatorSeparator = function IndicatorSeparator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement('span', _extends({}, innerProps, {\n    className: cx( /*#__PURE__*/css(getStyles('indicatorSeparator', props)), { 'indicator-separator': true }, className)\n  }));\n};\n\n// ==============================\n// Loading\n// ==============================\n\nvar keyframesName = 'react-select-loading-indicator';\n\nvar loadingIndicatorCSS = function loadingIndicatorCSS(_ref4) {\n  var isFocused = _ref4.isFocused,\n      size = _ref4.size,\n      _ref4$theme = _ref4.theme,\n      colors = _ref4$theme.colors,\n      baseUnit = _ref4$theme.spacing.baseUnit;\n  return {\n    color: isFocused ? colors.neutral60 : colors.neutral20,\n    display: 'flex',\n    padding: baseUnit * 2,\n    transition: 'color 150ms',\n    alignSelf: 'center',\n    fontSize: size,\n    lineHeight: 1,\n    marginRight: size,\n    textAlign: 'center',\n    verticalAlign: 'middle'\n  };\n};\n\nvar LoadingDot = function LoadingDot(_ref5) {\n  var color = _ref5.color,\n      delay = _ref5.delay,\n      offset = _ref5.offset;\n  return React.createElement('span', {\n    className: css({\n      animationDuration: '1s',\n      animationDelay: delay + 'ms',\n      animationIterationCount: 'infinite',\n      animationName: keyframesName,\n      animationTimingFunction: 'ease-in-out',\n      backgroundColor: color,\n      borderRadius: '1em',\n      display: 'inline-block',\n      marginLeft: offset ? '1em' : null,\n      height: '1em',\n      verticalAlign: 'top',\n      width: '1em'\n    })\n  });\n};\n\n// eslint-disable-next-line no-unused-expressions\ninjectGlobal('@keyframes ', keyframesName, '{0%,80%,100%{opacity:0;}40%{opacity:1;}};');\n\nvar LoadingIndicator = function LoadingIndicator(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps,\n      isFocused = props.isFocused,\n      isRtl = props.isRtl,\n      colors = props.theme.colors;\n\n  var color = isFocused ? colors.neutral80 : colors.neutral20;\n\n  return React.createElement(\n    'div',\n    _extends({}, innerProps, {\n      className: cx( /*#__PURE__*/css(getStyles('loadingIndicator', props)), {\n        'indicator': true,\n        'loading-indicator': true\n      }, className)\n    }),\n    React.createElement(LoadingDot, { color: color, delay: 0, offset: isRtl }),\n    React.createElement(LoadingDot, { color: color, delay: 160, offset: true }),\n    React.createElement(LoadingDot, { color: color, delay: 320, offset: !isRtl })\n  );\n};\nLoadingIndicator.defaultProps = { size: 4 };\n\nvar css$1 = function css$$1(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      _ref$theme = _ref.theme,\n      colors = _ref$theme.colors,\n      borderRadius = _ref$theme.borderRadius,\n      spacing = _ref$theme.spacing;\n  return {\n    alignItems: 'center',\n    backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,\n    borderColor: isDisabled ? colors.neutral10 : isFocused ? colors.primary : colors.neutral20,\n    borderRadius: borderRadius,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    boxShadow: isFocused ? '0 0 0 1px ' + colors.primary : null,\n    cursor: 'default',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    minHeight: spacing.controlHeight,\n    outline: '0 !important',\n    position: 'relative',\n    transition: 'all 100ms',\n\n    '&:hover': {\n      borderColor: isFocused ? colors.primary : colors.neutral30\n    }\n  };\n};\n\nvar Control = function Control(props) {\n  var children = props.children,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      className = props.className,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      ref: innerRef,\n      className: cx( /*#__PURE__*/css(getStyles('control', props)), {\n        'control': true,\n        'control--is-disabled': isDisabled,\n        'control--is-focused': isFocused\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar groupCSS = function groupCSS(_ref) {\n  var spacing = _ref.theme.spacing;\n  return {\n    paddingBottom: spacing.baseUnit * 2,\n    paddingTop: spacing.baseUnit * 2\n  };\n};\n\nvar Group = function Group(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      Heading = props.Heading,\n      headingProps = props.headingProps,\n      label = props.label,\n      theme = props.theme;\n\n  return React.createElement(\n    'div',\n    {\n      className: cx( /*#__PURE__*/css(getStyles('group', props)), { 'group': true }, className)\n    },\n    React.createElement(\n      Heading,\n      _extends({}, headingProps, { theme: theme, getStyles: getStyles, cx: cx }),\n      label\n    ),\n    React.createElement(\n      'div',\n      null,\n      children\n    )\n  );\n};\n\nvar groupHeadingCSS = function groupHeadingCSS(_ref2) {\n  var spacing = _ref2.theme.spacing;\n  return {\n    color: '#999',\n    cursor: 'default',\n    display: 'block',\n    fontSize: '75%',\n    fontWeight: '500',\n    marginBottom: '0.25em',\n    paddingLeft: spacing.baseUnit * 3,\n    paddingRight: spacing.baseUnit * 3,\n    textTransform: 'uppercase'\n  };\n};\n\nvar GroupHeading = function GroupHeading(props) {\n  var className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      cleanProps = objectWithoutProperties(props, ['className', 'cx', 'getStyles']);\n\n  return React.createElement('div', _extends({\n    className: cx( /*#__PURE__*/css(getStyles('groupHeading', props)), { 'group-heading': true }, className)\n  }, cleanProps));\n};\n\nvar inputCSS = function inputCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    margin: spacing.baseUnit / 2,\n    paddingBottom: spacing.baseUnit / 2,\n    paddingTop: spacing.baseUnit / 2,\n    visibility: isDisabled ? 'hidden' : 'visible',\n    color: colors.neutral80\n  };\n};\nvar inputStyle = function inputStyle(isHidden) {\n  return {\n    background: 0,\n    border: 0,\n    fontSize: 'inherit',\n    opacity: isHidden ? 0 : 1,\n    outline: 0,\n    padding: 0,\n    color: 'inherit'\n  };\n};\n\nvar Input = function Input(_ref2) {\n  var className = _ref2.className,\n      cx = _ref2.cx,\n      getStyles = _ref2.getStyles,\n      innerRef = _ref2.innerRef,\n      isHidden = _ref2.isHidden,\n      isDisabled = _ref2.isDisabled,\n      props = objectWithoutProperties(_ref2, ['className', 'cx', 'getStyles', 'innerRef', 'isHidden', 'isDisabled']);\n  return React.createElement(\n    'div',\n    {\n      className: css(getStyles('input', props))\n    },\n    React.createElement(AutosizeInput, _extends({\n      className: cx(null, { 'input': true }, className),\n      inputRef: innerRef,\n      inputStyle: inputStyle(isHidden),\n      disabled: isDisabled\n    }, props))\n  );\n};\n\nvar multiValueCSS = function multiValueCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      borderRadius = _ref$theme.borderRadius,\n      colors = _ref$theme.colors;\n  return {\n    backgroundColor: colors.neutral10,\n    borderRadius: borderRadius / 2,\n    display: 'flex',\n    margin: spacing.baseUnit / 2,\n    minWidth: 0 // resolves flex/text-overflow bug\n  };\n};\n\nvar multiValueLabelCSS = function multiValueLabelCSS(_ref2) {\n  var _ref2$theme = _ref2.theme,\n      borderRadius = _ref2$theme.borderRadius,\n      colors = _ref2$theme.colors,\n      cropWithEllipsis = _ref2.cropWithEllipsis;\n  return {\n    borderRadius: borderRadius / 2,\n    color: colors.neutral80,\n    fontSize: '85%',\n    overflow: 'hidden',\n    padding: 3,\n    paddingLeft: 6,\n    textOverflow: cropWithEllipsis ? 'ellipsis' : null,\n    whiteSpace: 'nowrap'\n  };\n};\n\nvar multiValueRemoveCSS = function multiValueRemoveCSS(_ref3) {\n  var _ref3$theme = _ref3.theme,\n      spacing = _ref3$theme.spacing,\n      borderRadius = _ref3$theme.borderRadius,\n      colors = _ref3$theme.colors,\n      isFocused = _ref3.isFocused;\n  return {\n    alignItems: 'center',\n    borderRadius: borderRadius / 2,\n    backgroundColor: isFocused && colors.dangerLight,\n    display: 'flex',\n    paddingLeft: spacing.baseUnit,\n    paddingRight: spacing.baseUnit,\n    ':hover': {\n      backgroundColor: colors.dangerLight,\n      color: colors.danger\n    }\n  };\n};\n\nvar MultiValueGeneric = function MultiValueGeneric(_ref4) {\n  var children = _ref4.children,\n      innerProps = _ref4.innerProps;\n  return React.createElement(\n    'div',\n    innerProps,\n    children\n  );\n};\n\nvar MultiValueContainer = MultiValueGeneric;\nvar MultiValueLabel = MultiValueGeneric;\n\nvar MultiValueRemove = function (_Component) {\n  inherits(MultiValueRemove, _Component);\n\n  function MultiValueRemove() {\n    classCallCheck(this, MultiValueRemove);\n    return possibleConstructorReturn(this, (MultiValueRemove.__proto__ || Object.getPrototypeOf(MultiValueRemove)).apply(this, arguments));\n  }\n\n  createClass(MultiValueRemove, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          innerProps = _props.innerProps;\n\n      return React.createElement(\n        'div',\n        innerProps,\n        children\n      );\n    }\n  }]);\n  return MultiValueRemove;\n}(Component);\n\nMultiValueRemove.defaultProps = {\n  children: React.createElement(CrossIcon, { size: 14 })\n};\n\nvar MultiValue = function (_Component2) {\n  inherits(MultiValue, _Component2);\n\n  function MultiValue() {\n    classCallCheck(this, MultiValue);\n    return possibleConstructorReturn(this, (MultiValue.__proto__ || Object.getPrototypeOf(MultiValue)).apply(this, arguments));\n  }\n\n  createClass(MultiValue, [{\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          className = _props2.className,\n          components = _props2.components,\n          cx = _props2.cx,\n          data = _props2.data,\n          getStyles = _props2.getStyles,\n          innerProps = _props2.innerProps,\n          isDisabled = _props2.isDisabled,\n          removeProps = _props2.removeProps,\n          selectProps = _props2.selectProps;\n      var Container = components.Container,\n          Label = components.Label,\n          Remove = components.Remove;\n\n\n      var containerInnerProps = _extends({\n        className: cx( /*#__PURE__*/css(getStyles('multiValue', this.props)), {\n          'multi-value': true,\n          'multi-value--is-disabled': isDisabled\n        }, className)\n      }, innerProps);\n\n      var labelInnerProps = {\n        className: cx( /*#__PURE__*/css(getStyles('multiValueLabel', this.props)), {\n          'multi-value__label': true\n        }, className)\n      };\n\n      var removeInnerProps = _extends({\n        className: cx( /*#__PURE__*/css(getStyles('multiValueRemove', this.props)), {\n          'multi-value__remove': true\n        }, className)\n      }, removeProps);\n\n      return React.createElement(\n        Container,\n        {\n          data: data,\n          innerProps: containerInnerProps,\n          selectProps: selectProps\n        },\n        React.createElement(\n          Label,\n          {\n            data: data,\n            innerProps: labelInnerProps,\n            selectProps: selectProps\n          },\n          children\n        ),\n        React.createElement(Remove, {\n          data: data,\n          innerProps: removeInnerProps,\n          selectProps: selectProps\n        })\n      );\n    }\n  }]);\n  return MultiValue;\n}(Component);\n\nMultiValue.defaultProps = {\n  cropWithEllipsis: true\n};\n\nvar optionCSS = function optionCSS(_ref) {\n  var isDisabled = _ref.isDisabled,\n      isFocused = _ref.isFocused,\n      isSelected = _ref.isSelected,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    backgroundColor: isSelected ? colors.primary : isFocused ? colors.primary25 : 'transparent',\n    color: isDisabled ? colors.neutral20 : isSelected ? colors.neutral0 : 'inherit',\n    cursor: 'default',\n    display: 'block',\n    fontSize: 'inherit',\n    padding: spacing.baseUnit * 2 + 'px ' + spacing.baseUnit * 3 + 'px',\n    width: '100%',\n    userSelect: 'none',\n    WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n\n    // provide some affordance on touch devices\n    ':active': {\n      backgroundColor: isSelected ? colors.primary : colors.primary50\n    }\n  };\n};\n\nvar Option = function Option(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      isFocused = props.isFocused,\n      isSelected = props.isSelected,\n      innerRef = props.innerRef,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      ref: innerRef,\n      className: cx( /*#__PURE__*/css(getStyles('option', props)), {\n        'option': true,\n        'option--is-disabled': isDisabled,\n        'option--is-focused': isFocused,\n        'option--is-selected': isSelected\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar placeholderCSS = function placeholderCSS(_ref) {\n  var _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    color: colors.neutral50,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar Placeholder = function Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/css(getStyles('placeholder', props)), {\n        'placeholder': true\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar css$2 = function css$$1(_ref) {\n  var isDisabled = _ref.isDisabled,\n      _ref$theme = _ref.theme,\n      spacing = _ref$theme.spacing,\n      colors = _ref$theme.colors;\n  return {\n    color: isDisabled ? colors.neutral40 : colors.neutral80,\n    marginLeft: spacing.baseUnit / 2,\n    marginRight: spacing.baseUnit / 2,\n    maxWidth: 'calc(100% - ' + spacing.baseUnit * 2 + 'px)',\n    overflow: 'hidden',\n    position: 'absolute',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    top: '50%',\n    transform: 'translateY(-50%)'\n  };\n};\n\nvar SingleValue = function SingleValue(props) {\n  var children = props.children,\n      className = props.className,\n      cx = props.cx,\n      getStyles = props.getStyles,\n      isDisabled = props.isDisabled,\n      innerProps = props.innerProps;\n\n  return React.createElement(\n    'div',\n    _extends({\n      className: cx( /*#__PURE__*/css(getStyles('singleValue', props)), {\n        'single-value': true,\n        'single-value--is-disabled': isDisabled\n      }, className)\n    }, innerProps),\n    children\n  );\n};\n\nvar components = {\n  ClearIndicator: ClearIndicator,\n  Control: Control,\n  DropdownIndicator: DropdownIndicator,\n  DownChevron: DownChevron,\n  CrossIcon: CrossIcon,\n  Group: Group,\n  GroupHeading: GroupHeading,\n  IndicatorsContainer: IndicatorsContainer,\n  IndicatorSeparator: IndicatorSeparator,\n  Input: Input,\n  LoadingIndicator: LoadingIndicator,\n  Menu: Menu,\n  MenuList: MenuList,\n  MenuPortal: MenuPortal,\n  LoadingMessage: LoadingMessage,\n  NoOptionsMessage: NoOptionsMessage,\n  MultiValue: MultiValue,\n  MultiValueContainer: MultiValueContainer,\n  MultiValueLabel: MultiValueLabel,\n  MultiValueRemove: MultiValueRemove,\n  Option: Option,\n  Placeholder: Placeholder,\n  SelectContainer: SelectContainer,\n  SingleValue: SingleValue,\n  ValueContainer: ValueContainer\n};\n\nvar defaultComponents = function defaultComponents(props) {\n  return _extends({}, components, props.components);\n};\n\nvar defaultStyles = {\n  clearIndicator: clearIndicatorCSS,\n  container: containerCSS,\n  control: css$1,\n  dropdownIndicator: dropdownIndicatorCSS,\n  group: groupCSS,\n  groupHeading: groupHeadingCSS,\n  indicatorsContainer: indicatorsContainerCSS,\n  indicatorSeparator: indicatorSeparatorCSS,\n  input: inputCSS,\n  loadingIndicator: loadingIndicatorCSS,\n  loadingMessage: loadingMessageCSS,\n  menu: menuCSS,\n  menuList: menuListCSS,\n  menuPortal: menuPortalCSS,\n  multiValue: multiValueCSS,\n  multiValueLabel: multiValueLabelCSS,\n  multiValueRemove: multiValueRemoveCSS,\n  noOptionsMessage: noOptionsMessageCSS,\n  option: optionCSS,\n  placeholder: placeholderCSS,\n  singleValue: css$2,\n  valueContainer: valueContainerCSS\n};\n\n// Merge Utility\n// Allows consumers to extend a base Select with additional styles\n\nfunction mergeStyles(source) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // initialize with source styles\n  var styles = _extends({}, source);\n\n  // massage in target styles\n  Object.keys(target).forEach(function (key) {\n    if (source[key]) {\n      styles[key] = function (rsCss, props) {\n        return target[key](source[key](rsCss, props), props);\n      };\n    } else {\n      styles[key] = target[key];\n    }\n  });\n\n  return styles;\n}\n\nvar colors = {\n  primary: '#2684FF',\n  primary75: '#4C9AFF',\n  primary50: '#B2D4FF',\n  primary25: '#DEEBFF',\n\n  danger: '#DE350B',\n  dangerLight: '#FFBDAD',\n\n  neutral0: 'hsl(0, 0%, 100%)',\n  neutral5: 'hsl(0, 0%, 95%)',\n  neutral10: 'hsl(0, 0%, 90%)',\n  neutral20: 'hsl(0, 0%, 80%)',\n  neutral30: 'hsl(0, 0%, 70%)',\n  neutral40: 'hsl(0, 0%, 60%)',\n  neutral50: 'hsl(0, 0%, 50%)',\n  neutral60: 'hsl(0, 0%, 40%)',\n  neutral70: 'hsl(0, 0%, 30%)',\n  neutral80: 'hsl(0, 0%, 20%)',\n  neutral90: 'hsl(0, 0%, 10%)'\n};\n\nvar borderRadius = 4;\nvar baseUnit = 4; /* Used to calculate consistent margin/padding on elements */\nvar controlHeight = 38; /* The minimum height of the control */\nvar menuGutter = baseUnit * 2; /* The amount of space between the control and menu */\n\nvar spacing = {\n  baseUnit: baseUnit,\n  controlHeight: controlHeight,\n  menuGutter: menuGutter\n};\n\nvar defaultTheme = {\n  borderRadius: borderRadius,\n  colors: colors,\n  spacing: spacing\n};\n\nvar defaultProps = {\n  backspaceRemovesValue: true,\n  blurInputOnSelect: isTouchCapable(),\n  captureMenuScroll: !isTouchCapable(),\n  closeMenuOnSelect: true,\n  closeMenuOnScroll: false,\n  components: {},\n  controlShouldRenderValue: true,\n  escapeClearsValue: false,\n  filterOption: createFilter(),\n  formatGroupLabel: formatGroupLabel,\n  getOptionLabel: getOptionLabel,\n  getOptionValue: getOptionValue,\n  isDisabled: false,\n  isLoading: false,\n  isMulti: false,\n  isRtl: false,\n  isSearchable: true,\n  isOptionDisabled: isOptionDisabled,\n  loadingMessage: function loadingMessage() {\n    return 'Loading...';\n  },\n  maxMenuHeight: 300,\n  minMenuHeight: 140,\n  menuIsOpen: false,\n  menuPlacement: 'bottom',\n  menuPosition: 'absolute',\n  menuShouldBlockScroll: false,\n  menuShouldScrollIntoView: !isMobileDevice(),\n  noOptionsMessage: function noOptionsMessage() {\n    return 'No options';\n  },\n  openMenuOnFocus: false,\n  openMenuOnClick: true,\n  options: [],\n  pageSize: 5,\n  placeholder: 'Select...',\n  screenReaderStatus: function screenReaderStatus(_ref) {\n    var count = _ref.count;\n    return count + ' result' + (count !== 1 ? 's' : '') + ' available';\n  },\n  styles: {},\n  tabIndex: '0',\n  tabSelectsValue: true\n};\n\nvar instanceId = 1;\n\nvar Select = function (_Component) {\n  inherits(Select, _Component);\n\n  // Lifecycle\n  // ------------------------------\n\n  // Refs\n  // ------------------------------\n\n  // Misc. Instance Properties\n  // ------------------------------\n\n  function Select(props) {\n    classCallCheck(this, Select);\n\n    var _this = possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var value = props.value;\n\n    _this.cacheComponents = memoizeOne(_this.cacheComponents, exportedEqual).bind(_this);\n    _this.cacheComponents(props.components);\n    _this.instancePrefix = 'react-select-' + (_this.props.instanceId || ++instanceId);\n\n    var selectValue = cleanValue(value);\n    var menuOptions = _this.buildMenuOptions(props, selectValue);\n\n    _this.state.menuOptions = menuOptions;\n    _this.state.selectValue = selectValue;\n    return _this;\n  } // TODO\n\n\n  createClass(Select, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startListeningComposition();\n      this.startListeningToTouch();\n\n      if (this.props.closeMenuOnScroll && document && document.addEventListener) {\n        // Listen to all scroll events, and filter them out inside of 'onScroll'\n        document.addEventListener('scroll', this.onScroll, true);\n      }\n\n      if (this.props.autoFocus) {\n        this.focusInput();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          options = _props.options,\n          value = _props.value,\n          inputValue = _props.inputValue;\n      // re-cache custom components\n\n      this.cacheComponents(nextProps.components);\n      // rebuild the menu options\n      if (nextProps.value !== value || nextProps.options !== options || nextProps.inputValue !== inputValue) {\n        var _selectValue = cleanValue(nextProps.value);\n        var _menuOptions = this.buildMenuOptions(nextProps, _selectValue);\n        var _focusedValue = this.getNextFocusedValue(_selectValue);\n        var _focusedOption = this.getNextFocusedOption(_menuOptions.focusable);\n        this.setState({ menuOptions: _menuOptions, selectValue: _selectValue, focusedOption: _focusedOption, focusedValue: _focusedValue });\n      }\n      // some updates should toggle the state of the input visibility\n      if (this.inputIsHiddenAfterUpdate != null) {\n        this.setState({\n          inputIsHidden: this.inputIsHiddenAfterUpdate\n        });\n        delete this.inputIsHiddenAfterUpdate;\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props2 = this.props,\n          isDisabled = _props2.isDisabled,\n          menuIsOpen = _props2.menuIsOpen;\n      var isFocused = this.state.isFocused;\n\n\n      if (\n      // ensure focus is restored correctly when the control becomes enabled\n      isFocused && !isDisabled && prevProps.isDisabled ||\n      // ensure focus is on the Input when the menu opens\n      isFocused && menuIsOpen && !prevProps.menuIsOpen) {\n        this.focusInput();\n      }\n\n      // scroll the focused option into view if necessary\n      if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {\n        scrollIntoView(this.menuListRef, this.focusedOptionRef);\n      }\n      this.scrollToFocusedOptionOnUpdate = false;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopListeningComposition();\n      this.stopListeningToTouch();\n      document.removeEventListener('scroll', this.onScroll, true);\n    }\n  }, {\n    key: 'onMenuOpen',\n\n    // ==============================\n    // Consumer Handlers\n    // ==============================\n\n    value: function onMenuOpen() {\n      this.props.onMenuOpen();\n    }\n  }, {\n    key: 'onMenuClose',\n    value: function onMenuClose() {\n      var _props3 = this.props,\n          isSearchable = _props3.isSearchable,\n          isMulti = _props3.isMulti;\n\n      this.announceAriaLiveContext({\n        event: 'input',\n        context: { isSearchable: isSearchable, isMulti: isMulti }\n      });\n      this.onInputChange('', { action: 'menu-close' });\n      this.props.onMenuClose();\n    }\n  }, {\n    key: 'onInputChange',\n    value: function onInputChange(newValue, actionMeta) {\n      this.props.onInputChange(newValue, actionMeta);\n    }\n\n    // ==============================\n    // Methods\n    // ==============================\n\n  }, {\n    key: 'focusInput',\n    value: function focusInput() {\n      if (!this.inputRef) return;\n      this.inputRef.focus();\n    }\n  }, {\n    key: 'blurInput',\n    value: function blurInput() {\n      if (!this.inputRef) return;\n      this.inputRef.blur();\n    }\n\n    // aliased for consumers\n\n  }, {\n    key: 'openMenu',\n    value: function openMenu(focusOption) {\n      var _state = this.state,\n          menuOptions = _state.menuOptions,\n          selectValue = _state.selectValue;\n      var isMulti = this.props.isMulti;\n\n      var openAtIndex = focusOption === 'first' ? 0 : menuOptions.focusable.length - 1;\n\n      if (!isMulti) {\n        var selectedIndex = menuOptions.focusable.indexOf(selectValue[0]);\n        if (selectedIndex > -1) {\n          openAtIndex = selectedIndex;\n        }\n      }\n\n      this.scrollToFocusedOptionOnUpdate = true;\n      this.inputIsHiddenAfterUpdate = false;\n\n      this.onMenuOpen();\n      this.setState({\n        focusedValue: null,\n        focusedOption: menuOptions.focusable[openAtIndex]\n      });\n\n      this.announceAriaLiveContext({ event: 'menu' });\n    }\n  }, {\n    key: 'focusValue',\n    value: function focusValue(direction) {\n      var _props4 = this.props,\n          isMulti = _props4.isMulti,\n          isSearchable = _props4.isSearchable;\n      var _state2 = this.state,\n          selectValue = _state2.selectValue,\n          focusedValue = _state2.focusedValue;\n\n      // Only multiselects support value focusing\n\n      if (!isMulti) return;\n\n      this.setState({\n        focusedOption: null\n      });\n\n      var focusedIndex = selectValue.indexOf(focusedValue);\n      if (!focusedValue) {\n        focusedIndex = -1;\n        this.announceAriaLiveContext({ event: 'value' });\n      }\n\n      var lastIndex = selectValue.length - 1;\n      var nextFocus = -1;\n      if (!selectValue.length) return;\n\n      switch (direction) {\n        case 'previous':\n          if (focusedIndex === 0) {\n            // don't cycle from the start to the end\n            nextFocus = 0;\n          } else if (focusedIndex === -1) {\n            // if nothing is focused, focus the last value first\n            nextFocus = lastIndex;\n          } else {\n            nextFocus = focusedIndex - 1;\n          }\n          break;\n        case 'next':\n          if (focusedIndex > -1 && focusedIndex < lastIndex) {\n            nextFocus = focusedIndex + 1;\n          }\n          break;\n      }\n\n      if (nextFocus === -1) {\n        this.announceAriaLiveContext({\n          event: 'input',\n          context: { isSearchable: isSearchable, isMulti: isMulti }\n        });\n      }\n\n      this.setState({\n        inputIsHidden: nextFocus === -1 ? false : true,\n        focusedValue: selectValue[nextFocus]\n      });\n    }\n  }, {\n    key: 'focusOption',\n    value: function focusOption() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'first';\n      var pageSize = this.props.pageSize;\n      var _state3 = this.state,\n          focusedOption = _state3.focusedOption,\n          menuOptions = _state3.menuOptions;\n\n      var options = menuOptions.focusable;\n\n      if (!options.length) return;\n      var nextFocus = 0; // handles 'first'\n      var focusedIndex = options.indexOf(focusedOption);\n      if (!focusedOption) {\n        focusedIndex = -1;\n        this.announceAriaLiveContext({ event: 'menu' });\n      }\n\n      if (direction === 'up') {\n        nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1;\n      } else if (direction === 'down') {\n        nextFocus = (focusedIndex + 1) % options.length;\n      } else if (direction === 'pageup') {\n        nextFocus = focusedIndex - pageSize;\n        if (nextFocus < 0) nextFocus = 0;\n      } else if (direction === 'pagedown') {\n        nextFocus = focusedIndex + pageSize;\n        if (nextFocus > options.length - 1) nextFocus = options.length - 1;\n      } else if (direction === 'last') {\n        nextFocus = options.length - 1;\n      }\n      this.scrollToFocusedOptionOnUpdate = true;\n      this.setState({\n        focusedOption: options[nextFocus],\n        focusedValue: null\n      });\n    }\n  }, {\n    key: 'getTheme',\n\n\n    // ==============================\n    // Getters\n    // ==============================\n\n    value: function getTheme() {\n      // Use the default theme if there are no customizations.\n      if (!this.props.theme) {\n        return defaultTheme;\n      }\n      // If the theme prop is a function, assume the function\n      // knows how to merge the passed-in default theme with\n      // its own modifications.\n      if (typeof this.props.theme === 'function') {\n        return this.props.theme(defaultTheme);\n      }\n      // Otherwise, if a plain theme object was passed in,\n      // overlay it with the default theme.\n      return _extends({}, defaultTheme, this.props.theme);\n    }\n  }, {\n    key: 'getCommonProps',\n    value: function getCommonProps() {\n      var clearValue = this.clearValue,\n          getStyles = this.getStyles,\n          setValue = this.setValue,\n          selectOption = this.selectOption,\n          props = this.props;\n      var classNamePrefix = props.classNamePrefix,\n          isMulti = props.isMulti,\n          isRtl = props.isRtl,\n          options = props.options;\n      var selectValue = this.state.selectValue;\n\n      var hasValue = this.hasValue();\n      var getValue = function getValue() {\n        return selectValue;\n      };\n      var cxPrefix = classNamePrefix;\n\n      var cx = classNames.bind(null, cxPrefix);\n      return {\n        cx: cx,\n        clearValue: clearValue,\n        getStyles: getStyles,\n        getValue: getValue,\n        hasValue: hasValue,\n        isMulti: isMulti,\n        isRtl: isRtl,\n        options: options,\n        selectOption: selectOption,\n        setValue: setValue,\n        selectProps: props,\n        theme: this.getTheme()\n      };\n    }\n  }, {\n    key: 'getNextFocusedValue',\n    value: function getNextFocusedValue(nextSelectValue) {\n      if (this.clearFocusValueOnUpdate) {\n        this.clearFocusValueOnUpdate = false;\n        return null;\n      }\n      var _state4 = this.state,\n          focusedValue = _state4.focusedValue,\n          lastSelectValue = _state4.selectValue;\n\n      var lastFocusedIndex = lastSelectValue.indexOf(focusedValue);\n      if (lastFocusedIndex > -1) {\n        var nextFocusedIndex = nextSelectValue.indexOf(focusedValue);\n        if (nextFocusedIndex > -1) {\n          // the focused value is still in the selectValue, return it\n          return focusedValue;\n        } else if (lastFocusedIndex < nextSelectValue.length) {\n          // the focusedValue is not present in the next selectValue array by\n          // reference, so return the new value at the same index\n          return nextSelectValue[lastFocusedIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: 'getNextFocusedOption',\n    value: function getNextFocusedOption(options) {\n      var lastFocusedOption = this.state.focusedOption;\n\n      return lastFocusedOption && options.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options[0];\n    }\n\n    // ==============================\n    // Helpers\n    // ==============================\n\n  }, {\n    key: 'hasValue',\n    value: function hasValue() {\n      var selectValue = this.state.selectValue;\n\n      return selectValue.length > 0;\n    }\n  }, {\n    key: 'hasOptions',\n    value: function hasOptions() {\n      return !!this.state.menuOptions.render.length;\n    }\n  }, {\n    key: 'countOptions',\n    value: function countOptions() {\n      return this.state.menuOptions.focusable.length;\n    }\n  }, {\n    key: 'isClearable',\n    value: function isClearable() {\n      var _props5 = this.props,\n          isClearable = _props5.isClearable,\n          isMulti = _props5.isMulti;\n\n      // single select, by default, IS NOT clearable\n      // multi select, by default, IS clearable\n\n      if (isClearable === undefined) return isMulti;\n\n      return isClearable;\n    }\n  }, {\n    key: 'isOptionDisabled',\n    value: function isOptionDisabled$$1(option, selectValue) {\n      return typeof this.props.isOptionDisabled === 'function' ? this.props.isOptionDisabled(option, selectValue) : false;\n    }\n  }, {\n    key: 'isOptionSelected',\n    value: function isOptionSelected(option, selectValue) {\n      var _this2 = this;\n\n      if (selectValue.indexOf(option) > -1) return true;\n      if (typeof this.props.isOptionSelected === 'function') {\n        return this.props.isOptionSelected(option, selectValue);\n      }\n      var candidate = this.getOptionValue(option);\n      return selectValue.some(function (i) {\n        return _this2.getOptionValue(i) === candidate;\n      });\n    }\n  }, {\n    key: 'filterOption',\n    value: function filterOption(option, inputValue) {\n      return this.props.filterOption ? this.props.filterOption(option, inputValue) : true;\n    }\n  }, {\n    key: 'formatOptionLabel',\n    value: function formatOptionLabel(data, context) {\n      if (typeof this.props.formatOptionLabel === 'function') {\n        var _inputValue = this.props.inputValue;\n        var _selectValue2 = this.state.selectValue;\n\n        return this.props.formatOptionLabel(data, {\n          context: context,\n          inputValue: _inputValue,\n          selectValue: _selectValue2\n        });\n      } else {\n        return this.getOptionLabel(data);\n      }\n    }\n  }, {\n    key: 'formatGroupLabel',\n    value: function formatGroupLabel$$1(data) {\n      return this.props.formatGroupLabel(data);\n    }\n\n    // ==============================\n    // Mouse Handlers\n    // ==============================\n\n  }, {\n    key: 'startListeningComposition',\n\n\n    // ==============================\n    // Composition Handlers\n    // ==============================\n\n    value: function startListeningComposition() {\n      if (document && document.addEventListener) {\n        document.addEventListener('compositionstart', this.onCompositionStart, false);\n        document.addEventListener('compositionend', this.onCompositionEnd, false);\n      }\n    }\n  }, {\n    key: 'stopListeningComposition',\n    value: function stopListeningComposition() {\n      if (document && document.removeEventListener) {\n        document.removeEventListener('compositionstart', this.onCompositionStart);\n        document.removeEventListener('compositionend', this.onCompositionEnd);\n      }\n    }\n  }, {\n    key: 'startListeningToTouch',\n\n\n    // ==============================\n    // Touch Handlers\n    // ==============================\n\n    value: function startListeningToTouch() {\n      if (document && document.addEventListener) {\n        document.addEventListener('touchstart', this.onTouchStart, false);\n        document.addEventListener('touchmove', this.onTouchMove, false);\n        document.addEventListener('touchend', this.onTouchEnd, false);\n      }\n    }\n  }, {\n    key: 'stopListeningToTouch',\n    value: function stopListeningToTouch() {\n      if (document && document.removeEventListener) {\n        document.removeEventListener('touchstart', this.onTouchStart);\n        document.removeEventListener('touchmove', this.onTouchMove);\n        document.removeEventListener('touchend', this.onTouchEnd);\n      }\n    }\n\n    // ==============================\n    // Focus Handlers\n    // ==============================\n\n    // ==============================\n    // Keyboard Handlers\n    // ==============================\n\n  }, {\n    key: 'buildMenuOptions',\n\n\n    // ==============================\n    // Menu Options\n    // ==============================\n\n    value: function buildMenuOptions(props, selectValue) {\n      var _this3 = this;\n\n      var _props$inputValue = props.inputValue,\n          inputValue = _props$inputValue === undefined ? '' : _props$inputValue,\n          options = props.options;\n\n\n      var toOption = function toOption(option, id) {\n        var isDisabled = _this3.isOptionDisabled(option, selectValue);\n        var isSelected = _this3.isOptionSelected(option, selectValue);\n        var label = _this3.getOptionLabel(option);\n        var value = _this3.getOptionValue(option);\n\n        if (_this3.shouldHideSelectedOptions() && isSelected || !_this3.filterOption({ label: label, value: value, data: option }, inputValue)) {\n          return;\n        }\n\n        var onHover = isDisabled ? undefined : function () {\n          return _this3.onOptionHover(option);\n        };\n        var onSelect = isDisabled ? undefined : function () {\n          return _this3.selectOption(option);\n        };\n        var optionId = _this3.getElementId('option') + '-' + id;\n\n        return {\n          innerProps: {\n            id: optionId,\n            onClick: onSelect,\n            onMouseMove: onHover,\n            onMouseOver: onHover,\n            role: 'option',\n            tabIndex: -1\n          },\n          data: option,\n          isDisabled: isDisabled,\n          isSelected: isSelected,\n          key: optionId,\n          label: label,\n          type: 'option',\n          value: value\n        };\n      };\n\n      return options.reduce(function (acc, item, itemIndex) {\n        if (item.options) {\n          // TODO needs a tidier implementation\n          if (!_this3.hasGroups) _this3.hasGroups = true;\n\n          var items = item.options;\n\n          var children = items.map(function (child, i) {\n            var option = toOption(child, itemIndex + '-' + i);\n            if (option && !option.isDisabled) acc.focusable.push(child);\n            return option;\n          }).filter(Boolean);\n          if (children.length) {\n            var groupId = _this3.getElementId('group') + '-' + itemIndex;\n            acc.render.push({\n              type: 'group',\n              key: groupId,\n              data: item,\n              options: children\n            });\n          }\n        } else {\n          var option = toOption(item, '' + itemIndex);\n          if (option) {\n            acc.render.push(option);\n            if (!option.isDisabled) acc.focusable.push(item);\n          }\n        }\n        return acc;\n      }, { render: [], focusable: [] });\n    }\n\n    // ==============================\n    // Renderers\n    // ==============================\n\n  }, {\n    key: 'constructAriaLiveMessage',\n    value: function constructAriaLiveMessage() {\n      var _state5 = this.state,\n          ariaLiveContext = _state5.ariaLiveContext,\n          selectValue = _state5.selectValue,\n          focusedValue = _state5.focusedValue,\n          focusedOption = _state5.focusedOption;\n      var _props6 = this.props,\n          options = _props6.options,\n          menuIsOpen = _props6.menuIsOpen,\n          inputValue = _props6.inputValue,\n          screenReaderStatus = _props6.screenReaderStatus;\n\n      // An aria live message representing the currently focused value in the select.\n\n      var focusedValueMsg = focusedValue ? valueFocusAriaMessage({\n        focusedValue: focusedValue,\n        getOptionLabel: this.getOptionLabel,\n        selectValue: selectValue\n      }) : '';\n      // An aria live message representing the currently focused option in the select.\n      var focusedOptionMsg = focusedOption && menuIsOpen ? optionFocusAriaMessage({\n        focusedOption: focusedOption,\n        getOptionLabel: this.getOptionLabel,\n        options: options\n      }) : '';\n      // An aria live message representing the set of focusable results and current searchterm/inputvalue.\n      var resultsMsg = resultsAriaMessage({\n        inputValue: inputValue,\n        screenReaderMessage: screenReaderStatus({ count: this.countOptions() })\n      });\n\n      return focusedValueMsg + ' ' + focusedOptionMsg + ' ' + resultsMsg + ' ' + ariaLiveContext;\n    }\n  }, {\n    key: 'renderInput',\n    value: function renderInput() {\n      var _props7 = this.props,\n          isDisabled = _props7.isDisabled,\n          isSearchable = _props7.isSearchable,\n          inputId = _props7.inputId,\n          inputValue = _props7.inputValue,\n          tabIndex = _props7.tabIndex;\n      var Input = this.components.Input;\n      var inputIsHidden = this.state.inputIsHidden;\n\n\n      var id = inputId || this.getElementId('input');\n\n      if (!isSearchable) {\n        // use a dummy input to maintain focus/blur functionality\n        return React.createElement(DummyInput, {\n          id: id,\n          innerRef: this.getInputRef,\n          onBlur: this.onInputBlur,\n          onChange: noop,\n          onFocus: this.onInputFocus,\n          readOnly: true,\n          tabIndex: tabIndex,\n          value: ''\n        });\n      }\n\n      // aria attributes makes the JSX \"noisy\", separated for clarity\n      var ariaAttributes = {\n        'aria-autocomplete': 'list',\n        'aria-label': this.props['aria-label'],\n        'aria-labelledby': this.props['aria-labelledby']\n      };\n\n      var _commonProps = this.commonProps,\n          cx = _commonProps.cx,\n          theme = _commonProps.theme;\n\n\n      return React.createElement(Input, _extends({\n        autoCapitalize: 'none',\n        autoComplete: 'off',\n        autoCorrect: 'off',\n        cx: cx,\n        getStyles: this.getStyles,\n        id: id,\n        innerRef: this.getInputRef,\n        isDisabled: isDisabled,\n        isHidden: inputIsHidden,\n        onBlur: this.onInputBlur,\n        onChange: this.handleInputChange,\n        onFocus: this.onInputFocus,\n        spellCheck: 'false',\n        tabIndex: tabIndex,\n        theme: theme,\n        type: 'text',\n        value: inputValue\n      }, ariaAttributes));\n    }\n  }, {\n    key: 'renderPlaceholderOrValue',\n    value: function renderPlaceholderOrValue() {\n      var _this4 = this;\n\n      var _components = this.components,\n          MultiValue = _components.MultiValue,\n          MultiValueContainer = _components.MultiValueContainer,\n          MultiValueLabel = _components.MultiValueLabel,\n          MultiValueRemove = _components.MultiValueRemove,\n          SingleValue = _components.SingleValue,\n          Placeholder = _components.Placeholder;\n      var commonProps = this.commonProps;\n      var _props8 = this.props,\n          controlShouldRenderValue = _props8.controlShouldRenderValue,\n          isDisabled = _props8.isDisabled,\n          isMulti = _props8.isMulti,\n          inputValue = _props8.inputValue,\n          placeholder = _props8.placeholder;\n      var _state6 = this.state,\n          selectValue = _state6.selectValue,\n          focusedValue = _state6.focusedValue;\n\n\n      if (!this.hasValue() || !controlShouldRenderValue) {\n        return inputValue ? null : React.createElement(\n          Placeholder,\n          _extends({}, commonProps, { key: 'placeholder', isDisabled: isDisabled }),\n          placeholder\n        );\n      }\n\n      if (isMulti) {\n        var selectValues = selectValue.map(function (opt) {\n          var isFocused = opt === focusedValue;\n          return React.createElement(\n            MultiValue,\n            _extends({}, commonProps, {\n              components: {\n                Container: MultiValueContainer,\n                Label: MultiValueLabel,\n                Remove: MultiValueRemove\n              },\n              isFocused: isFocused,\n              isDisabled: isDisabled,\n              key: _this4.getOptionValue(opt),\n              removeProps: {\n                onClick: function onClick() {\n                  return _this4.removeValue(opt);\n                },\n                onTouchEnd: function onTouchEnd() {\n                  return _this4.removeValue(opt);\n                },\n                onMouseDown: function onMouseDown(e) {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              },\n              data: opt\n            }),\n            _this4.formatOptionLabel(opt, 'value')\n          );\n        });\n        return selectValues;\n      }\n\n      if (inputValue) {\n        return null;\n      }\n\n      var singleValue = selectValue[0];\n      return React.createElement(\n        SingleValue,\n        _extends({}, commonProps, { data: singleValue, isDisabled: isDisabled }),\n        this.formatOptionLabel(singleValue, 'value')\n      );\n    }\n  }, {\n    key: 'renderClearIndicator',\n    value: function renderClearIndicator() {\n      var ClearIndicator = this.components.ClearIndicator;\n      var commonProps = this.commonProps;\n      var _props9 = this.props,\n          isDisabled = _props9.isDisabled,\n          isLoading = _props9.isLoading;\n      var isFocused = this.state.isFocused;\n\n\n      if (!this.isClearable() || !ClearIndicator || isDisabled || !this.hasValue() || isLoading) {\n        return null;\n      }\n\n      var innerProps = {\n        onMouseDown: this.onClearIndicatorMouseDown,\n        onTouchEnd: this.onClearIndicatorTouchEnd,\n        'aria-hidden': 'true'\n      };\n\n      return React.createElement(ClearIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderLoadingIndicator',\n    value: function renderLoadingIndicator() {\n      var LoadingIndicator = this.components.LoadingIndicator;\n      var commonProps = this.commonProps;\n      var _props10 = this.props,\n          isDisabled = _props10.isDisabled,\n          isLoading = _props10.isLoading;\n      var isFocused = this.state.isFocused;\n\n\n      if (!LoadingIndicator || !isLoading) return null;\n\n      var innerProps = { 'aria-hidden': 'true' };\n      return React.createElement(LoadingIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderIndicatorSeparator',\n    value: function renderIndicatorSeparator() {\n      var _components2 = this.components,\n          DropdownIndicator = _components2.DropdownIndicator,\n          IndicatorSeparator = _components2.IndicatorSeparator;\n\n      // separator doesn't make sense without the dropdown indicator\n\n      if (!DropdownIndicator || !IndicatorSeparator) return null;\n\n      var commonProps = this.commonProps;\n      var isDisabled = this.props.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      return React.createElement(IndicatorSeparator, _extends({}, commonProps, {\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderDropdownIndicator',\n    value: function renderDropdownIndicator() {\n      var DropdownIndicator = this.components.DropdownIndicator;\n\n      if (!DropdownIndicator) return null;\n      var commonProps = this.commonProps;\n      var isDisabled = this.props.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      var innerProps = {\n        onMouseDown: this.onDropdownIndicatorMouseDown,\n        onTouchEnd: this.onDropdownIndicatorTouchEnd,\n        'aria-hidden': 'true'\n      };\n\n      return React.createElement(DropdownIndicator, _extends({}, commonProps, {\n        innerProps: innerProps,\n        isDisabled: isDisabled,\n        isFocused: isFocused\n      }));\n    }\n  }, {\n    key: 'renderMenu',\n    value: function renderMenu() {\n      var _this5 = this;\n\n      var _components3 = this.components,\n          Group = _components3.Group,\n          GroupHeading = _components3.GroupHeading,\n          Menu$$1 = _components3.Menu,\n          MenuList$$1 = _components3.MenuList,\n          MenuPortal$$1 = _components3.MenuPortal,\n          LoadingMessage$$1 = _components3.LoadingMessage,\n          NoOptionsMessage$$1 = _components3.NoOptionsMessage,\n          Option = _components3.Option;\n      var commonProps = this.commonProps;\n      var _state7 = this.state,\n          focusedOption = _state7.focusedOption,\n          menuOptions = _state7.menuOptions;\n      var _props11 = this.props,\n          captureMenuScroll = _props11.captureMenuScroll,\n          inputValue = _props11.inputValue,\n          isLoading = _props11.isLoading,\n          loadingMessage = _props11.loadingMessage,\n          minMenuHeight = _props11.minMenuHeight,\n          maxMenuHeight = _props11.maxMenuHeight,\n          menuIsOpen = _props11.menuIsOpen,\n          menuPlacement = _props11.menuPlacement,\n          menuPosition = _props11.menuPosition,\n          menuPortalTarget = _props11.menuPortalTarget,\n          menuShouldBlockScroll = _props11.menuShouldBlockScroll,\n          menuShouldScrollIntoView = _props11.menuShouldScrollIntoView,\n          noOptionsMessage = _props11.noOptionsMessage,\n          onMenuScrollToTop = _props11.onMenuScrollToTop,\n          onMenuScrollToBottom = _props11.onMenuScrollToBottom;\n\n\n      if (!menuIsOpen) return null;\n\n      // TODO: Internal Option Type here\n      var render = function render(props) {\n        // for performance, the menu options in state aren't changed when the\n        // focused option changes so we calculate additional props based on that\n        var isFocused = focusedOption === props.data;\n        props.innerRef = isFocused ? _this5.getFocusedOptionRef : undefined;\n\n        return React.createElement(\n          Option,\n          _extends({}, commonProps, props, { isFocused: isFocused }),\n          _this5.formatOptionLabel(props.data, 'menu')\n        );\n      };\n\n      var menuUI = void 0;\n\n      if (this.hasOptions()) {\n        menuUI = menuOptions.render.map(function (item) {\n          if (item.type === 'group') {\n            var type = item.type,\n                group = objectWithoutProperties(item, ['type']);\n\n            var headingId = item.key + '-heading';\n\n            return React.createElement(\n              Group,\n              _extends({}, commonProps, group, {\n                Heading: GroupHeading,\n                headingProps: {\n                  id: headingId\n                },\n                label: _this5.formatGroupLabel(item.data)\n              }),\n              item.options.map(function (option) {\n                return render(option);\n              })\n            );\n          } else if (item.type === 'option') {\n            return render(item);\n          }\n        });\n      } else if (isLoading) {\n        var message = loadingMessage({ inputValue: inputValue });\n        if (message === null) return null;\n        menuUI = React.createElement(\n          LoadingMessage$$1,\n          commonProps,\n          message\n        );\n      } else {\n        var _message = noOptionsMessage({ inputValue: inputValue });\n        if (_message === null) return null;\n        menuUI = React.createElement(\n          NoOptionsMessage$$1,\n          commonProps,\n          _message\n        );\n      }\n      var menuPlacementProps = {\n        minMenuHeight: minMenuHeight,\n        maxMenuHeight: maxMenuHeight,\n        menuPlacement: menuPlacement,\n        menuPosition: menuPosition,\n        menuShouldScrollIntoView: menuShouldScrollIntoView\n      };\n\n      var menuElement = React.createElement(\n        MenuPlacer,\n        _extends({}, commonProps, menuPlacementProps),\n        function (_ref2) {\n          var ref = _ref2.ref,\n              _ref2$placerProps = _ref2.placerProps,\n              placement = _ref2$placerProps.placement,\n              maxHeight = _ref2$placerProps.maxHeight;\n          return React.createElement(\n            Menu$$1,\n            _extends({}, commonProps, menuPlacementProps, {\n              innerRef: ref,\n              innerProps: {\n                onMouseDown: _this5.onMenuMouseDown,\n                onMouseMove: _this5.onMenuMouseMove\n              },\n              isLoading: isLoading,\n              placement: placement\n            }),\n            React.createElement(\n              ScrollCaptorSwitch,\n              {\n                isEnabled: captureMenuScroll,\n                onTopArrive: onMenuScrollToTop,\n                onBottomArrive: onMenuScrollToBottom\n              },\n              React.createElement(\n                ScrollBlock,\n                { isEnabled: menuShouldBlockScroll },\n                React.createElement(\n                  MenuList$$1,\n                  _extends({}, commonProps, {\n                    innerRef: _this5.getMenuListRef,\n                    isLoading: isLoading,\n                    maxHeight: maxHeight\n                  }),\n                  menuUI\n                )\n              )\n            )\n          );\n        }\n      );\n\n      // positioning behaviour is almost identical for portalled and fixed,\n      // so we use the same component. the actual portalling logic is forked\n      // within the component based on `menuPosition`\n      return menuPortalTarget || menuPosition === 'fixed' ? React.createElement(\n        MenuPortal$$1,\n        _extends({}, commonProps, {\n          appendTo: menuPortalTarget,\n          controlElement: this.controlRef,\n          menuPlacement: menuPlacement,\n          menuPosition: menuPosition\n        }),\n        menuElement\n      ) : menuElement;\n    }\n  }, {\n    key: 'renderFormField',\n    value: function renderFormField() {\n      var _this6 = this;\n\n      var _props12 = this.props,\n          delimiter = _props12.delimiter,\n          isDisabled = _props12.isDisabled,\n          isMulti = _props12.isMulti,\n          name = _props12.name;\n      var selectValue = this.state.selectValue;\n\n\n      if (!name || isDisabled) return;\n\n      if (isMulti) {\n        if (delimiter) {\n          var _value = selectValue.map(function (opt) {\n            return _this6.getOptionValue(opt);\n          }).join(delimiter);\n          return React.createElement('input', { name: name, type: 'hidden', value: _value });\n        } else {\n          var input = selectValue.length > 0 ? selectValue.map(function (opt, i) {\n            return React.createElement('input', {\n              key: 'i-' + i,\n              name: name,\n              type: 'hidden',\n              value: _this6.getOptionValue(opt)\n            });\n          }) : React.createElement('input', { name: name, type: 'hidden' });\n\n          return React.createElement(\n            'div',\n            null,\n            input\n          );\n        }\n      } else {\n        var _value2 = selectValue[0] ? this.getOptionValue(selectValue[0]) : '';\n        return React.createElement('input', { name: name, type: 'hidden', value: _value2 });\n      }\n    }\n  }, {\n    key: 'renderLiveRegion',\n    value: function renderLiveRegion() {\n      if (!this.state.isFocused) return null;\n      return React.createElement(\n        A11yText,\n        { 'aria-live': 'assertive' },\n        React.createElement(\n          'p',\n          { id: 'aria-selection-event' },\n          '\\xA0',\n          this.state.ariaLiveSelection\n        ),\n        React.createElement(\n          'p',\n          { id: 'aria-context' },\n          '\\xA0',\n          this.constructAriaLiveMessage()\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _components4 = this.components,\n          Control = _components4.Control,\n          IndicatorsContainer = _components4.IndicatorsContainer,\n          SelectContainer = _components4.SelectContainer,\n          ValueContainer = _components4.ValueContainer;\n      var _props13 = this.props,\n          className = _props13.className,\n          id = _props13.id,\n          isDisabled = _props13.isDisabled;\n      var isFocused = this.state.isFocused;\n\n\n      var commonProps = this.commonProps = this.getCommonProps();\n\n      return React.createElement(\n        SelectContainer,\n        _extends({}, commonProps, {\n          className: className,\n          innerProps: {\n            id: id,\n            onKeyDown: this.onKeyDown\n          },\n          isDisabled: isDisabled,\n          isFocused: isFocused\n        }),\n        this.renderLiveRegion(),\n        React.createElement(\n          Control,\n          _extends({}, commonProps, {\n            innerRef: this.getControlRef,\n            innerProps: {\n              onMouseDown: this.onControlMouseDown,\n              onTouchEnd: this.onControlTouchEnd\n            },\n            isDisabled: isDisabled,\n            isFocused: isFocused\n          }),\n          React.createElement(\n            ValueContainer,\n            _extends({}, commonProps, { isDisabled: isDisabled }),\n            this.renderPlaceholderOrValue(),\n            this.renderInput()\n          ),\n          React.createElement(\n            IndicatorsContainer,\n            _extends({}, commonProps, { isDisabled: isDisabled }),\n            this.renderClearIndicator(),\n            this.renderLoadingIndicator(),\n            this.renderIndicatorSeparator(),\n            this.renderDropdownIndicator()\n          )\n        ),\n        this.renderMenu(),\n        this.renderFormField()\n      );\n    }\n  }]);\n  return Select;\n}(Component);\n\nSelect.defaultProps = defaultProps;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this7 = this;\n\n  this.state = {\n    ariaLiveSelection: '',\n    ariaLiveContext: '',\n    focusedOption: null,\n    focusedValue: null,\n    inputIsHidden: false,\n    isFocused: false,\n    isComposing: false,\n    menuOptions: { render: [], focusable: [] },\n    selectValue: []\n  };\n  this.blockOptionHover = false;\n  this.clearFocusValueOnUpdate = false;\n  this.hasGroups = false;\n  this.initialTouchX = 0;\n  this.initialTouchY = 0;\n  this.instancePrefix = '';\n  this.openAfterFocus = false;\n  this.scrollToFocusedOptionOnUpdate = false;\n  this.controlRef = null;\n\n  this.getControlRef = function (ref) {\n    _this7.controlRef = ref;\n  };\n\n  this.focusedOptionRef = null;\n\n  this.getFocusedOptionRef = function (ref) {\n    _this7.focusedOptionRef = ref;\n  };\n\n  this.menuListRef = null;\n\n  this.getMenuListRef = function (ref) {\n    _this7.menuListRef = ref;\n  };\n\n  this.inputRef = null;\n\n  this.getInputRef = function (ref) {\n    _this7.inputRef = ref;\n  };\n\n  this.cacheComponents = function (components$$1) {\n    _this7.components = defaultComponents({ components: components$$1 });\n  };\n\n  this.focus = this.focusInput;\n  this.blur = this.blurInput;\n\n  this.setValue = function (newValue) {\n    var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'set-value';\n    var option = arguments[2];\n    var _props14 = _this7.props,\n        closeMenuOnSelect = _props14.closeMenuOnSelect,\n        isMulti = _props14.isMulti,\n        onChange = _props14.onChange;\n\n    _this7.onInputChange('', { action: 'set-value' });\n    if (closeMenuOnSelect) {\n      _this7.inputIsHiddenAfterUpdate = !isMulti;\n      _this7.onMenuClose();\n    }\n    // when the select value should change, we should reset focusedValue\n    _this7.clearFocusValueOnUpdate = true;\n    onChange(newValue, { action: action, option: option });\n  };\n\n  this.selectOption = function (newValue) {\n    var _props15 = _this7.props,\n        blurInputOnSelect = _props15.blurInputOnSelect,\n        isMulti = _props15.isMulti;\n\n\n    if (isMulti) {\n      var _selectValue3 = _this7.state.selectValue;\n\n      if (_this7.isOptionSelected(newValue, _selectValue3)) {\n        var candidate = _this7.getOptionValue(newValue);\n        _this7.setValue(_selectValue3.filter(function (i) {\n          return _this7.getOptionValue(i) !== candidate;\n        }), 'deselect-option', newValue);\n        _this7.announceAriaLiveSelection({\n          event: 'deselect-option',\n          context: { value: _this7.getOptionLabel(newValue) }\n        });\n      } else {\n        _this7.setValue([].concat(toConsumableArray(_selectValue3), [newValue]), 'select-option', newValue);\n        _this7.announceAriaLiveSelection({\n          event: 'select-option',\n          context: { value: _this7.getOptionLabel(newValue) }\n        });\n      }\n    } else {\n      _this7.setValue(newValue, 'select-option');\n      _this7.announceAriaLiveSelection({\n        event: 'select-option',\n        context: { value: _this7.getOptionLabel(newValue) }\n      });\n    }\n\n    if (blurInputOnSelect) {\n      _this7.blurInput();\n    }\n  };\n\n  this.removeValue = function (removedValue) {\n    var onChange = _this7.props.onChange;\n    var selectValue = _this7.state.selectValue;\n\n    var candidate = _this7.getOptionValue(removedValue);\n    onChange(selectValue.filter(function (i) {\n      return _this7.getOptionValue(i) !== candidate;\n    }), {\n      action: 'remove-value',\n      removedValue: removedValue\n    });\n    _this7.announceAriaLiveSelection({\n      event: 'remove-value',\n      context: {\n        value: removedValue ? _this7.getOptionLabel(removedValue) : undefined\n      }\n    });\n    _this7.focusInput();\n  };\n\n  this.clearValue = function () {\n    var _props16 = _this7.props,\n        isMulti = _props16.isMulti,\n        onChange = _props16.onChange;\n\n    onChange(isMulti ? [] : null, { action: 'clear' });\n  };\n\n  this.popValue = function () {\n    var onChange = _this7.props.onChange;\n    var selectValue = _this7.state.selectValue;\n\n    var lastSelectedValue = selectValue[selectValue.length - 1];\n    _this7.announceAriaLiveSelection({\n      event: 'pop-value',\n      context: {\n        value: lastSelectedValue ? _this7.getOptionLabel(lastSelectedValue) : undefined\n      }\n    });\n    onChange(selectValue.slice(0, selectValue.length - 1), {\n      action: 'pop-value',\n      removedValue: lastSelectedValue\n    });\n  };\n\n  this.getOptionLabel = function (data) {\n    return _this7.props.getOptionLabel(data);\n  };\n\n  this.getOptionValue = function (data) {\n    return _this7.props.getOptionValue(data);\n  };\n\n  this.getStyles = function (key, props) {\n    var base = defaultStyles[key](props);\n    base.boxSizing = 'border-box';\n    var custom = _this7.props.styles[key];\n    return custom ? custom(base, props) : base;\n  };\n\n  this.getElementId = function (element) {\n    return _this7.instancePrefix + '-' + element;\n  };\n\n  this.getActiveDescendentId = function () {\n    var menuIsOpen = _this7.props.menuIsOpen;\n    var _state8 = _this7.state,\n        menuOptions = _state8.menuOptions,\n        focusedOption = _state8.focusedOption;\n\n\n    if (!focusedOption || !menuIsOpen) return undefined;\n\n    var index = menuOptions.focusable.indexOf(focusedOption);\n    var option = menuOptions.render[index];\n\n    return option && option.key;\n  };\n\n  this.announceAriaLiveSelection = function (_ref3) {\n    var event = _ref3.event,\n        context = _ref3.context;\n\n    _this7.setState({\n      ariaLiveSelection: valueEventAriaMessage(event, context)\n    });\n  };\n\n  this.announceAriaLiveContext = function (_ref4) {\n    var event = _ref4.event,\n        context = _ref4.context;\n\n    _this7.setState({\n      ariaLiveContext: instructionsAriaMessage(event, _extends({}, context, {\n        label: _this7.props['aria-label']\n      }))\n    });\n  };\n\n  this.onMenuMouseDown = function (event) {\n    if (event.button !== 0) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    _this7.focusInput();\n  };\n\n  this.onMenuMouseMove = function (event) {\n    _this7.blockOptionHover = false;\n  };\n\n  this.onControlMouseDown = function (event) {\n    var openMenuOnClick = _this7.props.openMenuOnClick;\n\n    if (!_this7.state.isFocused) {\n      if (openMenuOnClick) {\n        _this7.openAfterFocus = true;\n      }\n      _this7.focusInput();\n    } else if (!_this7.props.menuIsOpen) {\n      _this7.openMenu('first');\n    } else {\n      _this7.onMenuClose();\n    }\n    // $FlowFixMe HTMLElement type does not have tagName property\n    if (event.target.tagName !== 'INPUT') {\n      event.preventDefault();\n    }\n  };\n\n  this.onDropdownIndicatorMouseDown = function (event) {\n    // ignore mouse events that weren't triggered by the primary button\n    if (event && event.type === 'mousedown' && event.button !== 0) {\n      return;\n    }\n    if (_this7.props.isDisabled) return;\n    var _props17 = _this7.props,\n        isMulti = _props17.isMulti,\n        menuIsOpen = _props17.menuIsOpen;\n\n    _this7.focusInput();\n    if (menuIsOpen) {\n      _this7.inputIsHiddenAfterUpdate = !isMulti;\n      _this7.onMenuClose();\n    } else {\n      _this7.openMenu('first');\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  this.onClearIndicatorMouseDown = function (event) {\n    // ignore mouse events that weren't triggered by the primary button\n    if (event && event.type === 'mousedown' && event.button !== 0) {\n      return;\n    }\n    _this7.clearValue();\n    event.stopPropagation();\n    _this7.openAfterFocus = false;\n    setTimeout(function () {\n      return _this7.focusInput();\n    });\n  };\n\n  this.onScroll = function (event) {\n    if (typeof _this7.props.closeMenuOnScroll === 'boolean') {\n      if (event.target instanceof HTMLElement && isDocumentElement(event.target)) {\n        _this7.props.onMenuClose();\n      }\n    } else if (typeof _this7.props.closeMenuOnScroll === 'function') {\n      if (_this7.props.closeMenuOnScroll(event)) {\n        _this7.props.onMenuClose();\n      }\n    }\n  };\n\n  this.onCompositionStart = function () {\n    _this7.setState({\n      isComposing: true\n    });\n  };\n\n  this.onCompositionEnd = function () {\n    _this7.setState({\n      isComposing: false\n    });\n  };\n\n  this.onTouchStart = function (_ref5) {\n    var _ref5$touches = slicedToArray(_ref5.touches, 1),\n        touch = _ref5$touches[0];\n\n    _this7.initialTouchX = touch.clientX;\n    _this7.initialTouchY = touch.clientY;\n    _this7.userIsDragging = false;\n  };\n\n  this.onTouchMove = function (_ref6) {\n    var _ref6$touches = slicedToArray(_ref6.touches, 1),\n        touch = _ref6$touches[0];\n\n    var deltaX = Math.abs(touch.clientX - _this7.initialTouchX);\n    var deltaY = Math.abs(touch.clientY - _this7.initialTouchY);\n    var moveThreshold = 5;\n\n    _this7.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold;\n  };\n\n  this.onTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    // type cast the EventTarget\n    var target = event.target;\n\n    // close the menu if the user taps outside\n    if (_this7.controlRef && !_this7.controlRef.contains(target) && _this7.menuListRef && !_this7.menuListRef.contains(target)) {\n      _this7.blurInput();\n    }\n\n    // reset move vars\n    _this7.initialTouchX = 0;\n    _this7.initialTouchY = 0;\n  };\n\n  this.onControlTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onControlMouseDown(event);\n  };\n\n  this.onClearIndicatorTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onClearIndicatorMouseDown(event);\n  };\n\n  this.onDropdownIndicatorTouchEnd = function (event) {\n    if (_this7.userIsDragging) return;\n\n    _this7.onDropdownIndicatorMouseDown(event);\n  };\n\n  this.handleInputChange = function (event) {\n    var inputValue = event.currentTarget.value;\n    _this7.inputIsHiddenAfterUpdate = false;\n    _this7.onInputChange(inputValue, { action: 'input-change' });\n    _this7.onMenuOpen();\n  };\n\n  this.onInputFocus = function (event) {\n    var _props18 = _this7.props,\n        isSearchable = _props18.isSearchable,\n        isMulti = _props18.isMulti;\n\n    if (_this7.props.onFocus) {\n      _this7.props.onFocus(event);\n    }\n    _this7.inputIsHiddenAfterUpdate = false;\n    _this7.announceAriaLiveContext({\n      event: 'input',\n      context: { isSearchable: isSearchable, isMulti: isMulti }\n    });\n    _this7.setState({\n      isFocused: true\n    });\n    if (_this7.openAfterFocus || _this7.props.openMenuOnFocus) {\n      _this7.openMenu('first');\n    }\n    _this7.openAfterFocus = false;\n  };\n\n  this.onInputBlur = function (event) {\n    if (_this7.props.onBlur) {\n      _this7.props.onBlur(event);\n    }\n    _this7.onInputChange('', { action: 'input-blur' });\n    _this7.onMenuClose();\n    _this7.setState({\n      focusedValue: null,\n      isFocused: false\n    });\n  };\n\n  this.onOptionHover = function (focusedOption) {\n    if (_this7.blockOptionHover || _this7.state.focusedOption === focusedOption) {\n      return;\n    }\n    _this7.setState({ focusedOption: focusedOption });\n  };\n\n  this.shouldHideSelectedOptions = function () {\n    var _props19 = _this7.props,\n        hideSelectedOptions = _props19.hideSelectedOptions,\n        isMulti = _props19.isMulti;\n\n    if (hideSelectedOptions === undefined) return isMulti;\n    return hideSelectedOptions;\n  };\n\n  this.onKeyDown = function (event) {\n    var _props20 = _this7.props,\n        isMulti = _props20.isMulti,\n        backspaceRemovesValue = _props20.backspaceRemovesValue,\n        escapeClearsValue = _props20.escapeClearsValue,\n        inputValue = _props20.inputValue,\n        isClearable = _props20.isClearable,\n        isDisabled = _props20.isDisabled,\n        menuIsOpen = _props20.menuIsOpen,\n        onKeyDown = _props20.onKeyDown,\n        tabSelectsValue = _props20.tabSelectsValue,\n        openMenuOnFocus = _props20.openMenuOnFocus;\n    var _state9 = _this7.state,\n        isComposing = _state9.isComposing,\n        focusedOption = _state9.focusedOption,\n        focusedValue = _state9.focusedValue,\n        selectValue = _state9.selectValue;\n\n\n    if (isDisabled) return;\n\n    if (typeof onKeyDown === 'function') {\n      onKeyDown(event);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    // Block option hover events when the user has just pressed a key\n    _this7.blockOptionHover = true;\n    switch (event.key) {\n      case 'ArrowLeft':\n        if (!isMulti || inputValue) return;\n        _this7.focusValue('previous');\n        break;\n      case 'ArrowRight':\n        if (!isMulti || inputValue) return;\n        _this7.focusValue('next');\n        break;\n      case 'Backspace':\n        if (inputValue) return;\n        if (focusedValue) {\n          _this7.removeValue(focusedValue);\n        } else {\n          if (!backspaceRemovesValue) return;\n          _this7.popValue();\n        }\n        break;\n      case 'Tab':\n        if (event.shiftKey || !menuIsOpen || !tabSelectsValue || !focusedOption ||\n        // don't capture the event if the menu opens on focus and the focused\n        // option is already selected; it breaks the flow of navigation\n        openMenuOnFocus && _this7.isOptionSelected(focusedOption, selectValue)) {\n          return;\n        }\n        _this7.selectOption(focusedOption);\n        break;\n      case 'Enter':\n        if (menuIsOpen) {\n          if (!focusedOption) return;\n          if (isComposing) return;\n          _this7.selectOption(focusedOption);\n        } else {\n          _this7.focusOption('first');\n        }\n        break;\n      case 'Escape':\n        if (menuIsOpen) {\n          _this7.inputIsHiddenAfterUpdate = false;\n          _this7.onInputChange('', { action: 'menu-close' });\n          _this7.onMenuClose();\n        } else if (isClearable && escapeClearsValue) {\n          _this7.clearValue();\n        }\n        break;\n      case ' ':\n        // space\n        if (inputValue) {\n          return;\n        }\n        if (!menuIsOpen) {\n          _this7.openMenu('first');\n          break;\n        }\n        if (!focusedOption) return;\n        _this7.selectOption(focusedOption);\n        break;\n      case 'ArrowUp':\n        if (menuIsOpen) {\n          _this7.focusOption('up');\n        } else {\n          _this7.openMenu('last');\n        }\n        break;\n      case 'ArrowDown':\n        if (menuIsOpen) {\n          _this7.focusOption('down');\n        } else {\n          _this7.openMenu('first');\n        }\n        break;\n      case 'PageUp':\n        if (!menuIsOpen) return;\n        _this7.focusOption('pageup');\n        break;\n      case 'PageDown':\n        if (!menuIsOpen) return;\n        _this7.focusOption('pagedown');\n        break;\n      case 'Home':\n        if (!menuIsOpen) return;\n        _this7.focusOption('first');\n        break;\n      case 'End':\n        if (!menuIsOpen) return;\n        _this7.focusOption('last');\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n  };\n};\n\nvar manageState = function manageState(SelectComponent) {\n  var _class, _temp2;\n\n  return _temp2 = _class = function (_Component) {\n    inherits(StateManager, _Component);\n\n    function StateManager() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      classCallCheck(this, StateManager);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = StateManager.__proto__ || Object.getPrototypeOf(StateManager)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        inputValue: _this.props.inputValue !== undefined ? _this.props.inputValue : _this.props.defaultInputValue,\n        menuIsOpen: _this.props.menuIsOpen !== undefined ? _this.props.menuIsOpen : _this.props.defaultMenuIsOpen,\n        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue\n      }, _this.onChange = function (value, actionMeta) {\n        _this.callProp('onChange', value, actionMeta);\n        _this.setState({ value: value });\n      }, _this.onInputChange = function (value, actionMeta) {\n        // TODO: for backwards compatibility, we allow the prop to return a new\n        // value, but now inputValue is a controllable prop we probably shouldn't\n        var newValue = _this.callProp('onInputChange', value, actionMeta);\n        _this.setState({\n          inputValue: newValue !== undefined ? newValue : value\n        });\n      }, _this.onMenuOpen = function () {\n        _this.callProp('onMenuOpen');\n        _this.setState({ menuIsOpen: true });\n      }, _this.onMenuClose = function () {\n        _this.callProp('onMenuClose');\n        _this.setState({ menuIsOpen: false });\n      }, _temp), possibleConstructorReturn(_this, _ret);\n    }\n\n    createClass(StateManager, [{\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'getProp',\n      value: function getProp(key) {\n        return this.props[key] !== undefined ? this.props[key] : this.state[key];\n      }\n    }, {\n      key: 'callProp',\n      value: function callProp(name) {\n        if (typeof this.props[name] === 'function') {\n          var _props;\n\n          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          return (_props = this.props)[name].apply(_props, toConsumableArray(args));\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        return React.createElement(SelectComponent, _extends({}, this.props, {\n          ref: function ref(_ref2) {\n            _this2.select = _ref2;\n          },\n          inputValue: this.getProp('inputValue'),\n          menuIsOpen: this.getProp('menuIsOpen'),\n          onChange: this.onChange,\n          onInputChange: this.onInputChange,\n          onMenuClose: this.onMenuClose,\n          onMenuOpen: this.onMenuOpen,\n          value: this.getProp('value')\n        }));\n      }\n    }]);\n    return StateManager;\n  }(Component), _class.defaultProps = {\n    defaultInputValue: '',\n    defaultMenuIsOpen: false,\n    defaultValue: null\n  }, _temp2;\n};\n\nvar defaultProps$1 = {\n  cacheOptions: false,\n  defaultOptions: false\n};\n\nvar makeAsyncSelect = function makeAsyncSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(Async, _Component);\n\n    function Async(props) {\n      classCallCheck(this, Async);\n\n      var _this = possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this));\n\n      _this.mounted = false;\n      _this.optionsCache = {};\n\n      _this.handleInputChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            cacheOptions = _this$props.cacheOptions,\n            onInputChange = _this$props.onInputChange;\n        // TODO\n\n        var inputValue = handleInputChange(newValue, actionMeta, onInputChange);\n        if (!inputValue) {\n          delete _this.lastRequest;\n          _this.setState({\n            inputValue: '',\n            loadedInputValue: '',\n            loadedOptions: [],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n          return;\n        }\n        if (cacheOptions && _this.optionsCache[inputValue]) {\n          _this.setState({\n            inputValue: inputValue,\n            loadedInputValue: inputValue,\n            loadedOptions: _this.optionsCache[inputValue],\n            isLoading: false,\n            passEmptyOptions: false\n          });\n        } else {\n          var request = _this.lastRequest = {};\n          _this.setState({\n            inputValue: inputValue,\n            isLoading: true,\n            passEmptyOptions: !_this.state.loadedInputValue\n          }, function () {\n            _this.loadOptions(inputValue, function (options) {\n              if (!_this.mounted) return;\n              if (options) {\n                _this.optionsCache[inputValue] = options;\n              }\n              if (request !== _this.lastRequest) return;\n              delete _this.lastRequest;\n              _this.setState({\n                isLoading: false,\n                loadedInputValue: inputValue,\n                loadedOptions: options || [],\n                passEmptyOptions: false\n              });\n            });\n          });\n        }\n        return inputValue;\n      };\n\n      _this.state = {\n        defaultOptions: Array.isArray(props.defaultOptions) ? props.defaultOptions : undefined,\n        inputValue: '',\n        isLoading: props.defaultOptions === true ? true : false,\n        loadedOptions: [],\n        passEmptyOptions: false\n      };\n      return _this;\n    }\n\n    createClass(Async, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.mounted = true;\n        var defaultOptions = this.props.defaultOptions;\n\n        if (defaultOptions === true) {\n          this.loadOptions('', function (options) {\n            if (!_this2.mounted) return;\n            var isLoading = !!_this2.lastRequest;\n            _this2.setState({ defaultOptions: options || [], isLoading: isLoading });\n          });\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        // if the cacheOptions prop changes, clear the cache\n        if (nextProps.cacheOptions !== this.props.cacheOptions) {\n          this.optionsCache = {};\n        }\n        if (nextProps.defaultOptions !== this.props.defaultOptions) {\n          this.setState({\n            defaultOptions: Array.isArray(nextProps.defaultOptions) ? nextProps.defaultOptions : undefined\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this.mounted = false;\n      }\n    }, {\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'loadOptions',\n      value: function loadOptions(inputValue, callback) {\n        var loadOptions = this.props.loadOptions;\n\n        if (!loadOptions) return callback();\n        var loader = loadOptions(inputValue, callback);\n        if (loader && typeof loader.then === 'function') {\n          loader.then(callback, function () {\n            return callback();\n          });\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            loadOptions = _props.loadOptions,\n            props = objectWithoutProperties(_props, ['loadOptions']);\n        var _state = this.state,\n            defaultOptions = _state.defaultOptions,\n            inputValue = _state.inputValue,\n            isLoading = _state.isLoading,\n            loadedInputValue = _state.loadedInputValue,\n            loadedOptions = _state.loadedOptions,\n            passEmptyOptions = _state.passEmptyOptions;\n\n        var options = passEmptyOptions ? [] : inputValue && loadedInputValue ? loadedOptions : defaultOptions || [];\n        return (\n          // $FlowFixMe\n          React.createElement(SelectComponent, _extends({}, props, {\n            filterOption: this.props.filterOption || null,\n            ref: function ref(_ref) {\n              _this3.select = _ref;\n            },\n            options: options,\n            isLoading: isLoading,\n            onInputChange: this.handleInputChange\n          }))\n        );\n      }\n    }]);\n    return Async;\n  }(Component), _class.defaultProps = defaultProps$1, _temp;\n};\nvar Async = makeAsyncSelect(manageState(Select));\n\nvar compareOption = function compareOption(inputValue, option) {\n  var candidate = inputValue.toLowerCase();\n  return option.value.toLowerCase() === candidate || option.label.toLowerCase() === candidate;\n};\n\nvar builtins = {\n  formatCreateLabel: function formatCreateLabel(inputValue) {\n    return 'Create \"' + inputValue + '\"';\n  },\n  isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions) {\n    return !(!inputValue || selectValue.some(function (option) {\n      return compareOption(inputValue, option);\n    }) || selectOptions.some(function (option) {\n      return compareOption(inputValue, option);\n    }));\n  },\n  getNewOptionData: function getNewOptionData(inputValue, optionLabel) {\n    return {\n      label: optionLabel,\n      value: inputValue,\n      __isNew__: true\n    };\n  }\n};\n\nvar defaultProps$2 = _extends({\n  allowCreateWhileLoading: false,\n  createOptionPosition: 'last'\n}, builtins);\n\nvar makeCreatableSelect = function makeCreatableSelect(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(Creatable, _Component);\n\n    function Creatable(props) {\n      classCallCheck(this, Creatable);\n\n      var _this = possibleConstructorReturn(this, (Creatable.__proto__ || Object.getPrototypeOf(Creatable)).call(this, props));\n\n      _this.onChange = function (newValue, actionMeta) {\n        var _this$props = _this.props,\n            getNewOptionData = _this$props.getNewOptionData,\n            inputValue = _this$props.inputValue,\n            isMulti = _this$props.isMulti,\n            onChange = _this$props.onChange,\n            onCreateOption = _this$props.onCreateOption,\n            value = _this$props.value;\n\n        if (actionMeta.action !== 'select-option') {\n          return onChange(newValue, actionMeta);\n        }\n        var newOption = _this.state.newOption;\n\n        var valueArray = Array.isArray(newValue) ? newValue : [newValue];\n\n        if (valueArray[valueArray.length - 1] === newOption) {\n          if (onCreateOption) onCreateOption(inputValue);else {\n            var newOptionData = getNewOptionData(inputValue, inputValue);\n            var newActionMeta = { action: 'create-option' };\n            if (isMulti) {\n              onChange([].concat(toConsumableArray(cleanValue(value)), [newOptionData]), newActionMeta);\n            } else {\n              onChange(newOptionData, newActionMeta);\n            }\n          }\n          return;\n        }\n        onChange(newValue, actionMeta);\n      };\n\n      var options = props.options || [];\n      _this.state = {\n        newOption: undefined,\n        options: options\n      };\n      return _this;\n    }\n\n    createClass(Creatable, [{\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        var allowCreateWhileLoading = nextProps.allowCreateWhileLoading,\n            createOptionPosition = nextProps.createOptionPosition,\n            formatCreateLabel = nextProps.formatCreateLabel,\n            getNewOptionData = nextProps.getNewOptionData,\n            inputValue = nextProps.inputValue,\n            isLoading = nextProps.isLoading,\n            isValidNewOption = nextProps.isValidNewOption,\n            value = nextProps.value;\n\n        var options = nextProps.options || [];\n        var newOption = this.state.newOption;\n\n        if (isValidNewOption(inputValue, cleanValue(value), options)) {\n          newOption = getNewOptionData(inputValue, formatCreateLabel(inputValue));\n        } else {\n          newOption = undefined;\n        }\n        this.setState({\n          newOption: newOption,\n          options: (allowCreateWhileLoading || !isLoading) && newOption ? createOptionPosition === 'first' ? [newOption].concat(toConsumableArray(options)) : [].concat(toConsumableArray(options), [newOption]) : options\n        });\n      }\n    }, {\n      key: 'focus',\n      value: function focus() {\n        this.select.focus();\n      }\n    }, {\n      key: 'blur',\n      value: function blur() {\n        this.select.blur();\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var props = objectWithoutProperties(this.props, []);\n        var options = this.state.options;\n\n        return React.createElement(SelectComponent, _extends({}, props, {\n          ref: function ref(_ref) {\n            _this2.select = _ref;\n          },\n          options: options,\n          onChange: this.onChange\n        }));\n      }\n    }]);\n    return Creatable;\n  }(Component), _class.defaultProps = defaultProps$2, _temp;\n};\nvar Creatable = manageState(makeCreatableSelect(Select));\n\nvar AsyncCreatable = makeAsyncSelect(manageState(makeCreatableSelect(Select)));\n\n// ==============================\n// Fade Transition\n// ==============================\n\nvar Fade = function Fade(_ref) {\n  var Tag = _ref.component,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === undefined ? 1 : _ref$duration,\n      inProp = _ref.in,\n      onExited = _ref.onExited,\n      props = objectWithoutProperties(_ref, ['component', 'duration', 'in', 'onExited']);\n\n  var transition = {\n    entering: { opacity: 0 },\n    entered: { opacity: 1, transition: 'opacity ' + duration + 'ms' },\n    exiting: { opacity: 0 },\n    exited: { opacity: 0 }\n  };\n\n  return React.createElement(\n    Transition,\n    { mountOnEnter: true, unmountOnExit: true, 'in': inProp, timeout: duration },\n    function (state) {\n      var innerProps = {\n        style: _extends({}, transition[state])\n      };\n      return React.createElement(Tag, _extends({ innerProps: innerProps }, props));\n    }\n  );\n};\nvar collapseDuration = 260;\n\n// wrap each MultiValue with a collapse transition; decreases width until\n// finally removing from DOM\nvar Collapse = function (_Component) {\n  inherits(Collapse, _Component);\n\n  function Collapse() {\n    var _ref2;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Collapse);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref2 = Collapse.__proto__ || Object.getPrototypeOf(Collapse)).call.apply(_ref2, [this].concat(args))), _this), _this.duration = collapseDuration, _this.state = { width: 'auto' }, _this.transition = {\n      exiting: { width: 0, transition: 'width ' + _this.duration + 'ms ease-out' },\n      exited: { width: 0 }\n    }, _this.getWidth = function (ref) {\n      if (ref && isNaN(_this.state.width)) {\n        // cannot use `offsetWidth` because it is rounded\n        var _ref$getBoundingClien = ref.getBoundingClientRect(),\n            _width = _ref$getBoundingClien.width;\n\n        _this.setState({ width: _width });\n      }\n    }, _this.getStyle = function (width) {\n      return {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        width: width\n      };\n    }, _this.getTransition = function (state) {\n      return _this.transition[state];\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // width must be calculated; cannot transition from `undefined` to `number`\n\n\n  // get base styles\n\n\n  // get transition styles\n\n\n  createClass(Collapse, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          inProp = _props.in;\n      var width = this.state.width;\n\n\n      return React.createElement(\n        Transition,\n        {\n          enter: false,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          'in': inProp,\n          timeout: this.duration\n        },\n        function (state) {\n          var style = _extends({}, _this2.getStyle(width), _this2.getTransition(state));\n          return React.createElement(\n            'div',\n            { ref: _this2.getWidth, style: style },\n            children\n          );\n        }\n      );\n    }\n  }]);\n  return Collapse;\n}(Component);\n\n// strip transition props off before spreading onto select component\n// note we need to be explicit about innerRef for flow\nvar AnimatedInput = function AnimatedInput(WrappedComponent) {\n  return function (_ref) {\n    var inProp = _ref.in,\n        onExited = _ref.onExited,\n        appear = _ref.appear,\n        enter = _ref.enter,\n        exit = _ref.exit,\n        innerRef = _ref.innerRef,\n        props = objectWithoutProperties(_ref, ['in', 'onExited', 'appear', 'enter', 'exit', 'innerRef']);\n    return (\n      // $FlowFixMe\n      React.createElement(WrappedComponent, _extends({ innerRef: innerRef }, props))\n    );\n  };\n};\n\n// strip transition props off before spreading onto actual component\n\n\nvar AnimatedMultiValue = function AnimatedMultiValue(WrappedComponent) {\n  return function (_ref) {\n    var inProp = _ref.in,\n        onExited = _ref.onExited,\n        props = objectWithoutProperties(_ref, ['in', 'onExited']);\n    return React.createElement(\n      Collapse,\n      { 'in': inProp, onExited: onExited },\n      React.createElement(WrappedComponent, _extends({ cropWithEllipsis: inProp }, props))\n    );\n  };\n};\n\n// fade in when last multi-value removed, otherwise instant\nvar AnimatedPlaceholder = function AnimatedPlaceholder(WrappedComponent) {\n  return function (props) {\n    return React.createElement(Fade, _extends({\n      component: WrappedComponent,\n      duration: props.isMulti ? collapseDuration : 1\n    }, props));\n  };\n};\n\n// instant fade; all transition-group children must be transitions\n\nvar AnimatedSingleValue = function AnimatedSingleValue(WrappedComponent) {\n  return function (props) {\n    return React.createElement(Fade, _extends({ component: WrappedComponent }, props));\n  };\n};\n\n// make ValueContainer a transition group\nvar AnimatedValueContainer = function AnimatedValueContainer(WrappedComponent) {\n  return function (props) {\n    return React.createElement(TransitionGroup, _extends({ component: WrappedComponent }, props));\n  };\n};\n\nvar makeAnimated = function makeAnimated(externalComponents) {\n  var components$$1 = defaultComponents({ components: externalComponents });\n  var Input = components$$1.Input,\n      MultiValue = components$$1.MultiValue,\n      Placeholder = components$$1.Placeholder,\n      SingleValue = components$$1.SingleValue,\n      ValueContainer = components$$1.ValueContainer,\n      rest = objectWithoutProperties(components$$1, ['Input', 'MultiValue', 'Placeholder', 'SingleValue', 'ValueContainer']);\n\n  return _extends({\n    Input: AnimatedInput(Input),\n    MultiValue: AnimatedMultiValue(MultiValue),\n    Placeholder: AnimatedPlaceholder(Placeholder),\n    SingleValue: AnimatedSingleValue(SingleValue),\n    ValueContainer: AnimatedValueContainer(ValueContainer)\n  }, rest);\n};\n\nvar AnimatedComponents = makeAnimated();\n\nvar Input$1 = AnimatedComponents.Input;\nvar MultiValue$1 = AnimatedComponents.MultiValue;\nvar Placeholder$1 = AnimatedComponents.Placeholder;\nvar SingleValue$1 = AnimatedComponents.SingleValue;\nvar ValueContainer$1 = AnimatedComponents.ValueContainer;\n\nvar index = memoizeOne(makeAnimated, exportedEqual);\n\nvar index$1 = manageState(Select);\n\nexport default index$1;\nexport { Select as SelectBase, Async, AsyncCreatable, Creatable, createFilter, index as makeAnimated, components, mergeStyles, defaultTheme };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-select/dist/react-select.esm.js\n// module id = 6040\n// module chunks = 7","import createEmotion from 'create-emotion';\n\nvar context = typeof global !== 'undefined' ? global : {};\n\nvar _createEmotion = createEmotion(context),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    caches = _createEmotion.caches;\n\nexport { flush, hydrate, cx, merge, getRegisteredStyles, injectGlobal, keyframes, css, sheet, caches };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/emotion/dist/index.esm.js\n// module id = 6041\n// module chunks = 7","import memoize from '@emotion/memoize';\nimport unitless from '@emotion/unitless';\nimport hashString from '@emotion/hash';\nimport Stylis from '@emotion/stylis';\nimport stylisRuleSheet from 'stylis-rule-sheet';\n\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar processStyleName = memoize(function (styleName) {\n  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\nvar processStyleValue = function processStyleValue(key, value) {\n  if (value == null || typeof value === 'boolean') {\n    return '';\n  }\n\n  if (unitless[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties\n  !isNaN(value) && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    return oldProcessStyleValue(key, value);\n  };\n}\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'function':\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Passing functions to cx is deprecated and will be removed in the next major version of Emotion.\\n' + 'Please call the function before passing it to cx.');\n        }\n\n        toAdd = classnames([arg()]);\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\nvar isBrowser = typeof document !== 'undefined';\n\n/*\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n- 'polyfills' on server side\n\n// usage\n\nimport StyleSheet from 'glamor/lib/sheet'\nlet styleSheet = new StyleSheet()\n\nstyleSheet.inject()\n- 'injects' the stylesheet into the page (or into memory if on server)\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction makeStyleTag(opts) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', opts.key || '');\n\n  if (opts.nonce !== undefined) {\n    tag.setAttribute('nonce', opts.nonce);\n  }\n\n  tag.appendChild(document.createTextNode('')) // $FlowFixMe\n  ;\n  (opts.container !== undefined ? opts.container : document.head).appendChild(tag);\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = process.env.NODE_ENV === 'production'; // the big drawback here is that the css won't be editable in devtools\n\n    this.tags = [];\n    this.ctr = 0;\n    this.opts = options;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.inject = function inject() {\n    if (this.injected) {\n      throw new Error('already injected!');\n    }\n\n    this.tags[0] = makeStyleTag(this.opts);\n    this.injected = true;\n  };\n\n  _proto.speedy = function speedy(bool) {\n    if (this.ctr !== 0) {\n      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})\n      throw new Error(\"cannot change speedy now\");\n    }\n\n    this.isSpeedy = !!bool;\n  };\n\n  _proto.insert = function insert(rule, sourceMap) {\n    // this is the ultrafast version, works across browsers\n    if (this.isSpeedy) {\n      var tag = this.tags[this.tags.length - 1];\n      var sheet = sheetForTag(tag);\n\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('illegal rule', rule); // eslint-disable-line no-console\n        }\n      }\n    } else {\n      var _tag = makeStyleTag(this.opts);\n\n      this.tags.push(_tag);\n\n      _tag.appendChild(document.createTextNode(rule + (sourceMap || '')));\n    }\n\n    this.ctr++;\n\n    if (this.ctr % 65000 === 0) {\n      this.tags.push(makeStyleTag(this.opts));\n    }\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0; // todo - look for remnants in document.styleSheets\n\n    this.injected = false;\n  };\n\n  return StyleSheet;\n}();\n\nfunction createEmotion(context, options) {\n  if (context.__SECRET_EMOTION__ !== undefined) {\n    return context.__SECRET_EMOTION__;\n  }\n\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var current;\n\n  function insertRule(rule) {\n    current += rule;\n\n    if (isBrowser) {\n      sheet.insert(rule, currentSourceMap);\n    }\n  }\n\n  var insertionPlugin = stylisRuleSheet(insertRule);\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var caches = {\n    registered: {},\n    inserted: {},\n    nonce: options.nonce,\n    key: key\n  };\n  var sheet = new StyleSheet(options);\n\n  if (isBrowser) {\n    // 🚀\n    sheet.inject();\n  }\n\n  var stylis = new Stylis(stylisOptions);\n  stylis.use(options.stylisPlugins)(insertionPlugin);\n  var currentSourceMap = '';\n\n  function handleInterpolation(interpolation, couldBeSelectorInterpolation) {\n    if (interpolation == null) {\n      return '';\n    }\n\n    switch (typeof interpolation) {\n      case 'boolean':\n        return '';\n\n      case 'function':\n        if (interpolation.__emotion_styles !== undefined) {\n          var selector = interpolation.toString();\n\n          if (selector === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          return selector;\n        }\n\n        if (this === undefined && process.env.NODE_ENV !== 'production') {\n          console.error('Interpolating functions in css calls is deprecated and will be removed in the next major version of Emotion.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        return handleInterpolation.call(this, this === undefined ? interpolation() : // $FlowFixMe\n        interpolation(this.mergedProps, this.context), couldBeSelectorInterpolation);\n\n      case 'object':\n        return createStringFromObject.call(this, interpolation);\n\n      default:\n        var cached = caches.registered[interpolation];\n        return couldBeSelectorInterpolation === false && cached !== undefined ? cached : interpolation;\n    }\n  }\n\n  var objectToStringCache = new WeakMap();\n\n  function createStringFromObject(obj) {\n    if (objectToStringCache.has(obj)) {\n      // $FlowFixMe\n      return objectToStringCache.get(obj);\n    }\n\n    var string = '';\n\n    if (Array.isArray(obj)) {\n      obj.forEach(function (interpolation) {\n        string += handleInterpolation.call(this, interpolation, false);\n      }, this);\n    } else {\n      Object.keys(obj).forEach(function (key) {\n        if (typeof obj[key] !== 'object') {\n          if (caches.registered[obj[key]] !== undefined) {\n            string += key + \"{\" + caches.registered[obj[key]] + \"}\";\n          } else {\n            string += processStyleName(key) + \":\" + processStyleValue(key, obj[key]) + \";\";\n          }\n        } else {\n          if (key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n            throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n          }\n\n          if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string' && caches.registered[obj[key][0]] === undefined) {\n            obj[key].forEach(function (value) {\n              string += processStyleName(key) + \":\" + processStyleValue(key, value) + \";\";\n            });\n          } else {\n            string += key + \"{\" + handleInterpolation.call(this, obj[key], false) + \"}\";\n          }\n        }\n      }, this);\n    }\n\n    objectToStringCache.set(obj, string);\n    return string;\n  }\n\n  var name;\n  var stylesWithLabel;\n  var labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n\n  var createClassName = function createClassName(styles, identifierName) {\n    return hashString(styles + identifierName) + identifierName;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldCreateClassName = createClassName;\n    var sourceMappingUrlPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n\n    createClassName = function createClassName(styles, identifierName) {\n      return oldCreateClassName(styles.replace(sourceMappingUrlPattern, function (sourceMap) {\n        currentSourceMap = sourceMap;\n        return '';\n      }), identifierName);\n    };\n  }\n\n  var createStyles = function createStyles(strings) {\n    var stringMode = true;\n    var styles = '';\n    var identifierName = '';\n\n    if (strings == null || strings.raw === undefined) {\n      stringMode = false;\n      styles += handleInterpolation.call(this, strings, false);\n    } else {\n      styles += strings[0];\n    }\n\n    for (var _len = arguments.length, interpolations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    interpolations.forEach(function (interpolation, i) {\n      styles += handleInterpolation.call(this, interpolation, styles.charCodeAt(styles.length - 1) === 46 // .\n      );\n\n      if (stringMode === true && strings[i + 1] !== undefined) {\n        styles += strings[i + 1];\n      }\n    }, this);\n    stylesWithLabel = styles;\n    styles = styles.replace(labelPattern, function (match, p1) {\n      identifierName += \"-\" + p1;\n      return '';\n    });\n    name = createClassName(styles, identifierName);\n    return styles;\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    var oldStylis = stylis;\n\n    stylis = function stylis(selector, styles) {\n      oldStylis(selector, styles);\n      currentSourceMap = '';\n    };\n  }\n\n  function insert(scope, styles) {\n    if (caches.inserted[name] === undefined) {\n      current = '';\n      stylis(scope, styles);\n      caches.inserted[name] = current;\n    }\n  }\n\n  var css = function css() {\n    var styles = createStyles.apply(this, arguments);\n    var selector = key + \"-\" + name;\n\n    if (caches.registered[selector] === undefined) {\n      caches.registered[selector] = stylesWithLabel;\n    }\n\n    insert(\".\" + selector, styles);\n    return selector;\n  };\n\n  var keyframes = function keyframes() {\n    var styles = createStyles.apply(this, arguments);\n    var animation = \"animation-\" + name;\n    insert('', \"@keyframes \" + animation + \"{\" + styles + \"}\");\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    var styles = createStyles.apply(this, arguments);\n    insert('', styles);\n  };\n\n  function getRegisteredStyles(registeredStyles, classNames) {\n    var rawClassName = '';\n    classNames.split(' ').forEach(function (className) {\n      if (caches.registered[className] !== undefined) {\n        registeredStyles.push(className);\n      } else {\n        rawClassName += className + \" \";\n      }\n    });\n    return rawClassName;\n  }\n\n  function merge(className, sourceMap) {\n    var registeredStyles = [];\n    var rawClassName = getRegisteredStyles(registeredStyles, className);\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles, sourceMap);\n  }\n\n  function cx() {\n    for (var _len2 = arguments.length, classNames = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      classNames[_key2] = arguments[_key2];\n    }\n\n    return merge(classnames(classNames));\n  }\n\n  function hydrateSingleId(id) {\n    caches.inserted[id] = true;\n  }\n\n  function hydrate(ids) {\n    ids.forEach(hydrateSingleId);\n  }\n\n  function flush() {\n    if (isBrowser) {\n      sheet.flush();\n      sheet.inject();\n    }\n\n    caches.inserted = {};\n    caches.registered = {};\n  }\n\n  if (isBrowser) {\n    var chunks = document.querySelectorAll(\"[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(chunks, function (node) {\n      // $FlowFixMe\n      sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0]); // $FlowFixMe\n\n      node.getAttribute(\"data-emotion-\" + key).split(' ').forEach(hydrateSingleId);\n    });\n  }\n\n  var emotion = {\n    flush: flush,\n    hydrate: hydrate,\n    cx: cx,\n    merge: merge,\n    getRegisteredStyles: getRegisteredStyles,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    css: css,\n    sheet: sheet,\n    caches: caches\n  };\n  context.__SECRET_EMOTION__ = emotion;\n  return emotion;\n}\n\nexport default createEmotion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/create-emotion/dist/index.esm.js\n// module id = 6042\n// module chunks = 7","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@emotion/memoize/dist/memoize.esm.js\n// module id = 6043\n// module chunks = 7","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@emotion/unitless/dist/unitless.esm.js\n// module id = 6044\n// module chunks = 7","/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nfunction murmurhash2_32_gc(str) {\n  var l = str.length,\n      h = l ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return (h >>> 0).toString(36);\n}\n\nexport default murmurhash2_32_gc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@emotion/hash/dist/hash.esm.js\n// module id = 6045\n// module chunks = 7","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e, m).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e, m).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        switch (d.constructor) {\n          case Array:\n            for (var c = 0, e = d.length; c < e; ++c) {\n              T(d[c]);\n            }\n\n            break;\n\n          case Function:\n            S[A++] = d;\n            break;\n\n          case Boolean:\n            Y = !!d | 0;\n        }\n\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@emotion/stylis/dist/stylis.esm.js\n// module id = 6046\n// module chunks = 7","(function (factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? (module['exports'] = factory()) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory()) :\n\t\t\t(window['stylisRuleSheet'] = factory())\n}(function () {\n\n\t'use strict'\n\n\treturn function (insertRule) {\n\t\tvar delimiter = '/*|*/'\n\t\tvar needle = delimiter+'}'\n\n\t\tfunction toSheet (block) {\n\t\t\tif (block)\n\t\t\t\ttry {\n\t\t\t\t\tinsertRule(block + '}')\n\t\t\t\t} catch (e) {}\n\t\t}\n\n\t\treturn function ruleSheet (context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t\t\tswitch (context) {\n\t\t\t\t// property\n\t\t\t\tcase 1:\n\t\t\t\t\t// @import\n\t\t\t\t\tif (depth === 0 && content.charCodeAt(0) === 64)\n\t\t\t\t\t\treturn insertRule(content+';'), ''\n\t\t\t\t\tbreak\n\t\t\t\t// selector\n\t\t\t\tcase 2:\n\t\t\t\t\tif (ns === 0)\n\t\t\t\t\t\treturn content + delimiter\n\t\t\t\t\tbreak\n\t\t\t\t// at-rule\n\t\t\t\tcase 3:\n\t\t\t\t\tswitch (ns) {\n\t\t\t\t\t\t// @font-face, @page\n\t\t\t\t\t\tcase 102:\n\t\t\t\t\t\tcase 112:\n\t\t\t\t\t\t\treturn insertRule(selectors[0]+content), ''\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn content + (at === 0 ? delimiter : '')\n\t\t\t\t\t}\n\t\t\t\tcase -2:\n\t\t\t\t\tcontent.split(needle).forEach(toSheet)\n\t\t\t}\n\t\t}\n\t}\n}))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/stylis-rule-sheet/index.js\n// module id = 6047\n// module chunks = 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillReceiveProps',\n\t\tvalue: function componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-input-autosize/lib/AutosizeInput.js\n// module id = 6048\n// module chunks = 7","'use strict';\n\nvar _CSSTransition = require('./CSSTransition');\n\nvar _CSSTransition2 = _interopRequireDefault(_CSSTransition);\n\nvar _ReplaceTransition = require('./ReplaceTransition');\n\nvar _ReplaceTransition2 = _interopRequireDefault(_ReplaceTransition);\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _Transition = require('./Transition');\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  Transition: _Transition2.default,\n  TransitionGroup: _TransitionGroup2.default,\n  ReplaceTransition: _ReplaceTransition2.default,\n  CSSTransition: _CSSTransition2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/index.js\n// module id = 6049\n// module chunks = 7","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _propTypes = require('prop-types');\n\nvar PropTypes = _interopRequireWildcard(_propTypes);\n\nvar _addClass = require('dom-helpers/class/addClass');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('dom-helpers/class/removeClass');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Transition = require('./Transition');\n\nvar _Transition2 = _interopRequireDefault(_Transition);\n\nvar _PropTypes = require('./utils/PropTypes');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass2.default)(node, c);\n  });\n};\n\nvar propTypes = _extends({}, _Transition2.default.propTypes, {\n\n  /**\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\n   * A single name can be provided and it will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply spread\n   * them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n});\n\n/**\n * A `Transition` component using CSS transitions and animations.\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` stages of the transition. The first class is applied and then a\n * second \"active\" class in order to activate the css animation. After the animation,\n * matching `done` class names are applied to persist the animation state.\n *\n * When the `in` prop is toggled to `true` the Component will get\n * the `example-enter` CSS class and the `example-enter-active` CSS class\n * added in the next tick. This is a convention based on the `classNames` prop.\n *\n * ## Example\n *\n * <iframe src=\"https://codesandbox.io/embed/m77l2vp00x?fontsize=14\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n */\n\nvar CSSTransition = function (_React$Component) {\n  _inherits(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node);\n      }\n    }, _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node);\n      }\n    }, _this.onEntered = function (node, appearing) {\n      var _this$getClassNames3 = _this.getClassNames('enter'),\n          doneClassName = _this$getClassNames3.doneClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node);\n      }\n    }, _this.onExit = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          className = _this$getClassNames4.className;\n\n      _this.removeClasses(node, 'appear');\n      _this.removeClasses(node, 'enter');\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    }, _this.onExiting = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames5.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    }, _this.onExited = function (node) {\n      var _this$getClassNames6 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames6.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    }, _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n\n\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\n\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransition.prototype.removeClasses = function removeClasses(node, type) {\n    var _getClassNames = this.getClassNames(type),\n        className = _getClassNames.className,\n        activeClassName = _getClassNames.activeClassName,\n        doneClassName = _getClassNames.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  CSSTransition.prototype.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n      addClass(node, className);\n    }\n  };\n\n  CSSTransition.prototype.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n\n    return _react2.default.createElement(_Transition2.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react2.default.Component);\n\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = CSSTransition;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/CSSTransition.js\n// module id = 6050\n// module chunks = 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = require('./hasClass');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/addClass.js\n// module id = 6051\n// module chunks = 7","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/hasClass.js\n// module id = 6052\n// module chunks = 7","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-helpers/class/removeClass.js\n// module id = 6053\n// module chunks = 7","'use strict';\n\nexports.__esModule = true;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _TransitionGroup = require('./TransitionGroup');\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  in: _propTypes2.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react2.default.Children.count(props[propName]) !== 2) return new Error('\"' + propName + '\" must be exactly two transition components.');\n\n    return null;\n  }\n};\n\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = function (_React$Component) {\n  _inherits(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReplaceTransition);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ReplaceTransition.prototype.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react2.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  ReplaceTransition.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        inProp = _props.in,\n        props = _objectWithoutProperties(_props, ['children', 'in']);\n\n    var _React$Children$toArr = _react2.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n\n    return _react2.default.createElement(\n      _TransitionGroup2.default,\n      props,\n      inProp ? _react2.default.cloneElement(first, {\n        key: 'first',\n        onEnter: this.handleEnter,\n        onEntering: this.handleEntering,\n        onEntered: this.handleEntered\n\n      }) : _react2.default.cloneElement(second, {\n        key: 'second',\n        onEnter: this.handleExit,\n        onEntering: this.handleExiting,\n        onEntered: this.handleExited\n      })\n    );\n  };\n\n  return ReplaceTransition;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.handleEnter = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _this2.handleLifecycle('onEnter', 0, args);\n  };\n\n  this.handleEntering = function () {\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return _this2.handleLifecycle('onEntering', 0, args);\n  };\n\n  this.handleEntered = function () {\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return _this2.handleLifecycle('onEntered', 0, args);\n  };\n\n  this.handleExit = function () {\n    for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    return _this2.handleLifecycle('onExit', 1, args);\n  };\n\n  this.handleExiting = function () {\n    for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return _this2.handleLifecycle('onExiting', 1, args);\n  };\n\n  this.handleExited = function () {\n    for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    return _this2.handleLifecycle('onExited', 1, args);\n  };\n};\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\n\nexports.default = ReplaceTransition;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-transition-group/ReplaceTransition.js\n// module id = 6054\n// module chunks = 7","/**\r\n * Rounds a floating point number to specified number of decimal places \r\n */\r\nconst roundToNdecimals = (value, decimals) => {\r\n    return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\r\n  }\r\n\r\n\r\nexport default roundToNdecimals\n\n\n// WEBPACK FOOTER //\n// ./src/utils/roundToNdecimals.js","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { TextField, Button, Typography } from '@material-ui/core';\r\nimport findLayerById from '../utils/findLayerById';\r\nimport bboxFunction from '../utils/geoprocessing/bboxFunction';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        width: 150,\r\n      },\r\n  });\r\n\r\n  class BboxTextField extends Component {\r\n\r\n    calculateBbox = () => {\r\n        let { layerIds, setBbox, layers, setError } = this.props;\r\n\r\n        let selectedLayersDataList = [];\r\n\r\n        for (var i in layerIds ) {\r\n            let layer = findLayerById(layerIds[i], layers);\r\n            let data = layer ? layer.data : null;\r\n            selectedLayersDataList.push( data ) \r\n          }\r\n        \r\n        let res = bboxFunction(selectedLayersDataList)\r\n        if(res.bbox) {\r\n            setBbox(res.bbox);\r\n        } else {\r\n            setError(res.newJson);\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = index => event => {\r\n        let {bbox} = this.state;\r\n        bbox[index] = event.target.value;\r\n\r\n        this.setState({\r\n            bbox: bbox\r\n        });\r\n      };\r\n    \r\n    render() {\r\n    \r\n      const { classes, theme, bbox, optional } = this.props;\r\n      // minX, minY, maxX, maxY]\r\n      let promtText = optional ? 'Bounding box (optional)': 'Bounding box';\r\n  \r\n      return (\r\n        <div>\r\n            <Typography style={{marginTop: theme.spacing.unit}} variant='caption'>{promtText}</Typography>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n            <TextField\r\n                label=\"minX\"\r\n                className={classes.textField}\r\n                value={bbox[0]}\r\n                onChange={this.handleChange(0)}\r\n                margin=\"normal\"\r\n                />\r\n            <TextField\r\n                label=\"miny\"\r\n                className={classes.textField}\r\n                value={bbox[1]}\r\n                onChange={this.handleChange(1)}\r\n                margin=\"normal\"\r\n                />\r\n            <TextField\r\n                label=\"maxX\"\r\n                className={classes.textField}\r\n                value={bbox[2]}\r\n                onChange={this.handleChange(2)}\r\n                margin=\"normal\"\r\n                />\r\n            <TextField\r\n                label=\"maxY\"\r\n                className={classes.textField}\r\n                value={bbox[3]}\r\n                onChange={this.handleChange(3)}\r\n                margin=\"normal\"\r\n                />\r\n            </div>\r\n            <div style={{display:'flex', justifyContent: 'flex-end'}}>\r\n                <Button color='secondary' onClick={this.calculateBbox}>Calculate bbox from geometry</Button>\r\n            </div>\r\n\r\n        </div>\r\n      );\r\n  \r\n  \r\n    }\r\n\r\n  }\r\n\r\nexport default withStyles(styles, { withTheme: true })(BboxTextField);\n\n\n// WEBPACK FOOTER //\n// ./src/components/BboxTextField.js"],"sourceRoot":""}